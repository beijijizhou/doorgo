import { database } from './types/database.js';
export function models(db, onChange) {
    // For Performance
    db.pragma('journal_mode = WAL');
    const origTransaction = db.transaction;
    let out = [];
    let diffs = [];
    const stack = [];
    db.transaction = function transaction(fn) {
        return origTransaction.call(this, (...args) => {
            try {
                diffs = [];
                stack.push(diffs);
                const res = fn(...args);
                out = [...out, ...(stack.pop() || [])];
                diffs = stack[stack.length - 1] || [];
                if (stack.length === 0) {
                    onChange && out.length && onChange(out);
                    out = [];
                }
                return res;
            }
            catch (err) {
                stack.pop();
                diffs = stack[stack.length - 1] || [];
                throw err;
            }
        });
    };
    function processDiff(diff) {
        if (!diff) {
            return null;
        }
        onChange && (db.inTransaction ? diffs.push(diff) : onChange([diff]));
        return diff;
    }
    return database(db, processDiff);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xpYi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFRL0MsTUFBTSxVQUFVLE1BQU0sQ0FBQyxFQUFZLEVBQUUsUUFBOEM7SUFDakYsa0JBQWtCO0lBQ2xCLEVBQUUsQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUdoQyxNQUFNLGVBQWUsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDO0lBQ3ZDLElBQUksR0FBRyxHQUF3QixFQUFFLENBQUM7SUFDbEMsSUFBSSxLQUFLLEdBQXdCLEVBQUUsQ0FBQztJQUNwQyxNQUFNLEtBQUssR0FBMEIsRUFBRSxDQUFDO0lBQ3hDLEVBQUUsQ0FBQyxXQUFXLEdBQUcsU0FBUyxXQUFXLENBQXVDLEVBQThCO1FBQ3hHLE9BQU8sZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLElBQTJCLEVBQXlCLEVBQUU7WUFDMUYsSUFBSTtnQkFDRixLQUFLLEdBQUcsRUFBRSxDQUFDO2dCQUNYLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ2xCLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO2dCQUN4QixHQUFHLEdBQUcsQ0FBRSxHQUFHLEdBQUcsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFFLENBQUM7Z0JBQ3pDLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQ3RDLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7b0JBQ3RCLFFBQVEsSUFBSSxHQUFHLENBQUMsTUFBTSxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDeEMsR0FBRyxHQUFHLEVBQUUsQ0FBQztpQkFDVjtnQkFDRCxPQUFPLEdBQUcsQ0FBQzthQUNaO1lBQ0QsT0FBTyxHQUFHLEVBQUU7Z0JBQ1YsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO2dCQUNaLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQ3RDLE1BQU0sR0FBRyxDQUFDO2FBQ1g7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztJQUtGLFNBQVMsV0FBVyxDQUE4QixJQUFjO1FBQzlELElBQUksQ0FBQyxJQUFJLEVBQUU7WUFBRSxPQUFPLElBQUksQ0FBQztTQUFFO1FBQzNCLFFBQVEsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyRSxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxPQUFPLFFBQVEsQ0FBQyxFQUFFLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDbkMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFiYXNlIH0gZnJvbSAnYmV0dGVyLXNxbGl0ZTMnO1xuXG5pbXBvcnQgeyBkYXRhYmFzZSB9IGZyb20gJy4vdHlwZXMvZGF0YWJhc2UuanMnO1xuaW1wb3J0ICogYXMgRGlmZiBmcm9tICcuL3R5cGVzL2RpZmZzLmpzJztcblxuZXhwb3J0IGludGVyZmFjZSBJR2VvbWV0cnkge1xuICByb3dpZDogbnVtYmVyO1xuICBfc2hhcGU6IG51bWJlcltdW107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb2RlbHMoZGI6IERhdGFiYXNlLCBvbkNoYW5nZT86IChkaWZmOiBEaWZmLlVuaXZlcnNlRGlmZltdKSA9PiB2b2lkKSB7XG4gIC8vIEZvciBQZXJmb3JtYW5jZVxuICBkYi5wcmFnbWEoJ2pvdXJuYWxfbW9kZSA9IFdBTCcpO1xuXG4gIHR5cGUgVHJhbnNhY3Rpb24gPSB0eXBlb2YgZGIudHJhbnNhY3Rpb247XG4gIGNvbnN0IG9yaWdUcmFuc2FjdGlvbiA9IGRiLnRyYW5zYWN0aW9uO1xuICBsZXQgb3V0OiBEaWZmLlVuaXZlcnNlRGlmZltdID0gW107XG4gIGxldCBkaWZmczogRGlmZi5Vbml2ZXJzZURpZmZbXSA9IFtdO1xuICBjb25zdCBzdGFjazogRGlmZi5Vbml2ZXJzZURpZmZbXVtdID0gW107XG4gIGRiLnRyYW5zYWN0aW9uID0gZnVuY3Rpb24gdHJhbnNhY3Rpb24odGhpczogVGhpc1BhcmFtZXRlclR5cGU8VHJhbnNhY3Rpb24+LCBmbjogUGFyYW1ldGVyczxUcmFuc2FjdGlvbj5bMF0pOiBSZXR1cm5UeXBlPFRyYW5zYWN0aW9uPiB7XG4gICAgcmV0dXJuIG9yaWdUcmFuc2FjdGlvbi5jYWxsKHRoaXMsICguLi5hcmdzOiBQYXJhbWV0ZXJzPHR5cGVvZiBmbj4pOiBSZXR1cm5UeXBlPHR5cGVvZiBmbj4gPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZGlmZnMgPSBbXTtcbiAgICAgICAgc3RhY2sucHVzaChkaWZmcyk7XG4gICAgICAgIGNvbnN0IHJlcyA9IGZuKC4uLmFyZ3MpO1xuICAgICAgICBvdXQgPSBbIC4uLm91dCwgLi4uKHN0YWNrLnBvcCgpIHx8IFtdKSBdO1xuICAgICAgICBkaWZmcyA9IHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdIHx8IFtdO1xuICAgICAgICBpZiAoc3RhY2subGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgb25DaGFuZ2UgJiYgb3V0Lmxlbmd0aCAmJiBvbkNoYW5nZShvdXQpO1xuICAgICAgICAgIG91dCA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgICB9XG4gICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHN0YWNrLnBvcCgpO1xuICAgICAgICBkaWZmcyA9IHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdIHx8IFtdO1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gcHJvY2Vzc0RpZmY8TSBleHRlbmRzIERpZmYuTW9kZWxUeXBlLCBUIGV4dGVuZHMgRGlmZi5DcmVhdGVEaWZmPE0+PihkaWZmOiBUKTogVDtcbiAgZnVuY3Rpb24gcHJvY2Vzc0RpZmY8TSBleHRlbmRzIERpZmYuTW9kZWxUeXBlLCBUIGV4dGVuZHMgRGlmZi5VcGRhdGVEaWZmPE0+PihkaWZmOiBUIHwgbnVsbCk6IFQgfCBudWxsO1xuICBmdW5jdGlvbiBwcm9jZXNzRGlmZjxNIGV4dGVuZHMgRGlmZi5Nb2RlbFR5cGUsIFQgZXh0ZW5kcyBEaWZmLkRlbGV0ZURpZmY8TT4+KGRpZmY6IFQgfCBudWxsKTogVCB8IG51bGw7XG4gIGZ1bmN0aW9uIHByb2Nlc3NEaWZmPFQgZXh0ZW5kcyBEaWZmLlVuaXZlcnNlRGlmZj4oZGlmZjogVCB8IG51bGwpOiBUIHwgbnVsbCB7XG4gICAgaWYgKCFkaWZmKSB7IHJldHVybiBudWxsOyB9XG4gICAgb25DaGFuZ2UgJiYgKGRiLmluVHJhbnNhY3Rpb24gPyBkaWZmcy5wdXNoKGRpZmYpIDogb25DaGFuZ2UoW2RpZmZdKSk7XG4gICAgcmV0dXJuIGRpZmY7XG4gIH1cblxuICByZXR1cm4gZGF0YWJhc2UoZGIsIHByb2Nlc3NEaWZmKTtcbn1cblxuZXhwb3J0IHR5cGUgSU1vZGVscyA9IFJldHVyblR5cGU8dHlwZW9mIG1vZGVscz47XG4iXX0=