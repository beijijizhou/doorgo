import { NameSuffix } from '../types/index.js';
export const NAME_SUFFIX = {
    [NameSuffix.JR]: {
        abbr: 'Jr.',
        name: 'Junior',
        alt: [],
    },
    [NameSuffix.SR]: {
        abbr: 'Sr.',
        name: 'Senior',
        alt: [],
    },
    [NameSuffix.II]: {
        abbr: 'II',
        name: 'the Second',
        alt: ['2nd', 'the 2nd'],
    },
    [NameSuffix.III]: {
        abbr: 'III',
        name: 'the Third',
        alt: ['3rd', 'the 3rd'],
    },
    [NameSuffix.IV]: {
        abbr: 'IV',
        name: 'the Fourth',
        alt: ['4th', 'the 4th'],
    },
    [NameSuffix.V]: {
        abbr: 'V',
        name: 'the Fifth',
        alt: ['5th', 'the 5th'],
    },
    [NameSuffix.VI]: {
        abbr: 'VI',
        name: 'the Sixth',
        alt: ['6th', 'the 6th'],
    },
    [NameSuffix.VII]: {
        abbr: 'VII',
        name: 'the Seventh',
        alt: ['7th', 'the 7th'],
    },
    [NameSuffix.VIII]: {
        abbr: 'VIII',
        name: 'the Eighth',
        alt: ['8th', 'the 8th'],
    },
    [NameSuffix.IX]: {
        abbr: 'IX',
        name: 'the Ninth',
        alt: ['9th', 'the 9th'],
    },
    [NameSuffix.X]: {
        abbr: 'X',
        name: 'the Tenth',
        alt: ['10th', 'the 10th'],
    },
};
const aliases = {};
for (const [key, desc] of Object.entries(NAME_SUFFIX)) {
    const arr = aliases[key] = aliases[key] || [];
    arr.push(...desc.alt);
    arr.push(desc.name);
    arr.push(desc.abbr);
}
export default aliases;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmFtZVN1ZmZpeC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9lbnVtcy9OYW1lU3VmZml4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQVMvQyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQXlDO0lBQy9ELENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1FBQ2YsSUFBSSxFQUFFLEtBQUs7UUFDWCxJQUFJLEVBQUUsUUFBUTtRQUNkLEdBQUcsRUFBRSxFQUFFO0tBQ1I7SUFDRCxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUNmLElBQUksRUFBRSxLQUFLO1FBQ1gsSUFBSSxFQUFFLFFBQVE7UUFDZCxHQUFHLEVBQUUsRUFBRTtLQUNSO0lBQ0QsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLEVBQUU7UUFDZixJQUFJLEVBQUUsSUFBSTtRQUNWLElBQUksRUFBRSxZQUFZO1FBQ2xCLEdBQUcsRUFBRSxDQUFFLEtBQUssRUFBRSxTQUFTLENBQUU7S0FDMUI7SUFDRCxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixJQUFJLEVBQUUsS0FBSztRQUNYLElBQUksRUFBRSxXQUFXO1FBQ2pCLEdBQUcsRUFBRSxDQUFFLEtBQUssRUFBRSxTQUFTLENBQUU7S0FDMUI7SUFDRCxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUNmLElBQUksRUFBRSxJQUFJO1FBQ1YsSUFBSSxFQUFFLFlBQVk7UUFDbEIsR0FBRyxFQUFFLENBQUUsS0FBSyxFQUFFLFNBQVMsQ0FBRTtLQUMxQjtJQUNELENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ2QsSUFBSSxFQUFFLEdBQUc7UUFDVCxJQUFJLEVBQUUsV0FBVztRQUNqQixHQUFHLEVBQUUsQ0FBRSxLQUFLLEVBQUUsU0FBUyxDQUFFO0tBQzFCO0lBQ0QsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLEVBQUU7UUFDZixJQUFJLEVBQUUsSUFBSTtRQUNWLElBQUksRUFBRSxXQUFXO1FBQ2pCLEdBQUcsRUFBRSxDQUFFLEtBQUssRUFBRSxTQUFTLENBQUU7S0FDMUI7SUFDRCxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixJQUFJLEVBQUUsS0FBSztRQUNYLElBQUksRUFBRSxhQUFhO1FBQ25CLEdBQUcsRUFBRSxDQUFFLEtBQUssRUFBRSxTQUFTLENBQUU7S0FDMUI7SUFDRCxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNqQixJQUFJLEVBQUUsTUFBTTtRQUNaLElBQUksRUFBRSxZQUFZO1FBQ2xCLEdBQUcsRUFBRSxDQUFFLEtBQUssRUFBRSxTQUFTLENBQUU7S0FDMUI7SUFDRCxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUNmLElBQUksRUFBRSxJQUFJO1FBQ1YsSUFBSSxFQUFFLFdBQVc7UUFDakIsR0FBRyxFQUFFLENBQUUsS0FBSyxFQUFFLFNBQVMsQ0FBRTtLQUMxQjtJQUNELENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ2QsSUFBSSxFQUFFLEdBQUc7UUFDVCxJQUFJLEVBQUUsV0FBVztRQUNqQixHQUFHLEVBQUUsQ0FBRSxNQUFNLEVBQUUsVUFBVSxDQUFFO0tBQzVCO0NBQ0YsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUFpQyxFQUFFLENBQUM7QUFDakQsS0FBSyxNQUFNLENBQUUsR0FBRyxFQUFFLElBQUksQ0FBRSxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEVBQUU7SUFDdkQsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDOUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN0QixHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQixHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztDQUNyQjtBQUVELGVBQWUsT0FBOEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5hbWVTdWZmaXggfSBmcm9tICcuLi90eXBlcy9pbmRleC5qcyc7XG5pbXBvcnQgeyBBbGlhc2VzIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbmV4cG9ydCB0eXBlIFN1ZmZpeERlc2MgPSB7XG4gIGFiYnI6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBhbHQ6IHN0cmluZ1tdO1xufVxuXG5leHBvcnQgY29uc3QgTkFNRV9TVUZGSVg6IHsgW2tleSBpbiBOYW1lU3VmZml4IF06IFN1ZmZpeERlc2MgfSA9IHtcbiAgW05hbWVTdWZmaXguSlJdOiB7XG4gICAgYWJicjogJ0pyLicsXG4gICAgbmFtZTogJ0p1bmlvcicsXG4gICAgYWx0OiBbXSxcbiAgfSxcbiAgW05hbWVTdWZmaXguU1JdOiB7XG4gICAgYWJicjogJ1NyLicsXG4gICAgbmFtZTogJ1NlbmlvcicsXG4gICAgYWx0OiBbXSxcbiAgfSxcbiAgW05hbWVTdWZmaXguSUldOiB7XG4gICAgYWJicjogJ0lJJyxcbiAgICBuYW1lOiAndGhlIFNlY29uZCcsXG4gICAgYWx0OiBbICcybmQnLCAndGhlIDJuZCcgXSxcbiAgfSxcbiAgW05hbWVTdWZmaXguSUlJXToge1xuICAgIGFiYnI6ICdJSUknLFxuICAgIG5hbWU6ICd0aGUgVGhpcmQnLFxuICAgIGFsdDogWyAnM3JkJywgJ3RoZSAzcmQnIF0sXG4gIH0sXG4gIFtOYW1lU3VmZml4LklWXToge1xuICAgIGFiYnI6ICdJVicsXG4gICAgbmFtZTogJ3RoZSBGb3VydGgnLFxuICAgIGFsdDogWyAnNHRoJywgJ3RoZSA0dGgnIF0sXG4gIH0sXG4gIFtOYW1lU3VmZml4LlZdOiB7XG4gICAgYWJicjogJ1YnLFxuICAgIG5hbWU6ICd0aGUgRmlmdGgnLFxuICAgIGFsdDogWyAnNXRoJywgJ3RoZSA1dGgnIF0sXG4gIH0sXG4gIFtOYW1lU3VmZml4LlZJXToge1xuICAgIGFiYnI6ICdWSScsXG4gICAgbmFtZTogJ3RoZSBTaXh0aCcsXG4gICAgYWx0OiBbICc2dGgnLCAndGhlIDZ0aCcgXSxcbiAgfSxcbiAgW05hbWVTdWZmaXguVklJXToge1xuICAgIGFiYnI6ICdWSUknLFxuICAgIG5hbWU6ICd0aGUgU2V2ZW50aCcsXG4gICAgYWx0OiBbICc3dGgnLCAndGhlIDd0aCcgXSxcbiAgfSxcbiAgW05hbWVTdWZmaXguVklJSV06IHtcbiAgICBhYmJyOiAnVklJSScsXG4gICAgbmFtZTogJ3RoZSBFaWdodGgnLFxuICAgIGFsdDogWyAnOHRoJywgJ3RoZSA4dGgnIF0sXG4gIH0sXG4gIFtOYW1lU3VmZml4LklYXToge1xuICAgIGFiYnI6ICdJWCcsXG4gICAgbmFtZTogJ3RoZSBOaW50aCcsXG4gICAgYWx0OiBbICc5dGgnLCAndGhlIDl0aCcgXSxcbiAgfSxcbiAgW05hbWVTdWZmaXguWF06IHtcbiAgICBhYmJyOiAnWCcsXG4gICAgbmFtZTogJ3RoZSBUZW50aCcsXG4gICAgYWx0OiBbICcxMHRoJywgJ3RoZSAxMHRoJyBdLFxuICB9LFxufTtcblxuY29uc3QgYWxpYXNlczogUGFydGlhbDxBbGlhc2VzPE5hbWVTdWZmaXg+PiA9IHt9O1xuZm9yIChjb25zdCBbIGtleSwgZGVzYyBdIG9mIE9iamVjdC5lbnRyaWVzKE5BTUVfU1VGRklYKSkge1xuICBjb25zdCBhcnIgPSBhbGlhc2VzW2tleV0gPSBhbGlhc2VzW2tleV0gfHwgW107XG4gIGFyci5wdXNoKC4uLmRlc2MuYWx0KTtcbiAgYXJyLnB1c2goZGVzYy5uYW1lKTtcbiAgYXJyLnB1c2goZGVzYy5hYmJyKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYWxpYXNlcyBhcyBBbGlhc2VzPE5hbWVTdWZmaXg+O1xuIl19