import { PreNominal } from '../types/index.js';
export const PRE_NOMINAL = {
    // English Common Titles
    [PreNominal.MR]: {
        abbr: 'Mr.',
        name: 'Mister',
        alt: [],
    },
    [PreNominal.MSS]: {
        abbr: 'Miss',
        name: 'Miss',
        alt: [],
    },
    [PreNominal.MS]: {
        abbr: 'Ms.',
        name: 'Ms.',
        alt: [],
    },
    [PreNominal.MRS]: {
        abbr: 'Mrs.',
        name: 'Misses',
        alt: [],
    },
    [PreNominal.MX]: {
        abbr: 'Mx.',
        name: 'Mx.',
        alt: [],
    },
    // French Titles
    [PreNominal.MME]: {
        abbr: 'Mme.',
        name: 'Madame',
        alt: [],
    },
    [PreNominal.MLLE]: {
        abbr: 'Mlle.',
        name: 'Mademoiselle',
        alt: [],
    },
    [PreNominal.MSSR]: {
        abbr: 'Mssr.',
        name: 'Monsieur',
        alt: ['Monsignor'],
    },
    // Academic and Professional Titles
    [PreNominal.DR]: {
        abbr: 'Dr.',
        name: 'Doctor',
        alt: [],
    },
    [PreNominal.PROF]: {
        abbr: 'Prof.',
        name: 'Professor',
        alt: [],
    },
    [PreNominal.HON]: {
        abbr: 'Hon.',
        name: 'The Honorable',
        alt: ['hon', 'honorable'],
    },
    [PreNominal.JUS]: {
        abbr: 'Justice',
        name: 'Justice',
        alt: [],
    },
    [PreNominal.JUD]: {
        abbr: 'Judge',
        name: 'Judge',
        alt: [],
    },
    // Religious Titles
    [PreNominal.REV]: {
        abbr: 'Rev.',
        name: 'Reverend',
        alt: [],
    },
    [PreNominal.FR]: {
        abbr: 'Fr.',
        name: 'Father',
        alt: [],
    },
    [PreNominal.PR]: {
        abbr: 'Pr.',
        name: 'Pastor',
        alt: [],
    },
    [PreNominal.BR]: {
        abbr: 'Br.',
        name: 'Brother',
        alt: [],
    },
    [PreNominal.SIS]: {
        abbr: 'Sr.',
        name: 'Sister',
        alt: ['Sis'],
    },
    // Military Titles (Shared)
    [PreNominal.PVT]: {
        abbr: 'Pvt',
        name: 'General',
        alt: ['Generaal'],
    },
    [PreNominal.PFC]: {
        abbr: 'PFC',
        name: 'Private 1st Class',
        alt: ['Private First Class'],
    },
    [PreNominal.CPL]: {
        abbr: 'Cpl',
        name: 'Corporal',
        alt: [],
    },
    [PreNominal.SGT]: {
        abbr: 'Sgt',
        name: 'Sergeant',
        alt: [],
    },
    [PreNominal.SSG]: {
        abbr: 'SSG',
        name: 'Staff Sergeant',
        alt: [],
    },
    [PreNominal.MSG]: {
        abbr: 'MSG',
        name: 'Master Sergeant',
        alt: [],
    },
    [PreNominal.SG1]: {
        abbr: '1SG',
        name: 'First Sergeant',
        alt: ['1st Sergeant', 'First Sgt', '1st Sgt'],
    },
    [PreNominal.SGM]: {
        abbr: 'SGM',
        name: 'Sergeant Major',
        alt: ['Sgt Major'],
    },
    [PreNominal.WO1]: {
        abbr: 'WO1.',
        name: 'Warrant Officer',
        alt: [],
    },
    [PreNominal.CW2]: {
        abbr: 'CW2',
        name: 'Chief Warrant Officer 2',
        alt: [],
    },
    [PreNominal.CW3]: {
        abbr: 'CW3',
        name: 'Chief Warrant Officer 3',
        alt: [],
    },
    [PreNominal.CW4]: {
        abbr: 'CW4',
        name: 'Chief Warrant Officer 4',
        alt: ['Generaal'],
    },
    [PreNominal.CW5]: {
        abbr: 'CW5',
        name: 'Chief Warrant Officer 5',
        alt: ['Generaal'],
    },
    [PreNominal.LT2]: {
        abbr: '2LT',
        name: 'Second Lieutenant',
        alt: ['2nd Lt', '2nd Lieutenant'],
    },
    [PreNominal.LT1]: {
        abbr: '1LT',
        name: 'First Lieutenant',
        alt: ['1st Lt', '1st Lieutenant'],
    },
    [PreNominal.CPT]: {
        abbr: 'Cpt',
        name: 'Captain',
        alt: ['CAPT'],
    },
    [PreNominal.MAJ]: {
        abbr: 'Maj',
        name: 'Major',
        alt: [],
    },
    [PreNominal.LTC]: {
        abbr: 'Gen.',
        name: 'General',
        alt: ['Generaal'],
    },
    [PreNominal.COL]: {
        abbr: 'Col',
        name: 'Colonel',
        alt: [],
    },
    [PreNominal.BG]: {
        abbr: 'BG',
        name: 'Brigadier General',
        alt: ['BGen'],
    },
    [PreNominal.MG]: {
        abbr: 'MG',
        name: 'Major General',
        alt: ['MajGen', 'Maj Gen'],
    },
    [PreNominal.LTG]: {
        abbr: 'LTG',
        name: 'Lieutenant General',
        alt: ['Lt Gen', 'LtGen'],
    },
    [PreNominal.GEN]: {
        abbr: 'Gen',
        name: 'General',
        alt: [],
    },
    // Military Titles (Army)
    [PreNominal.PV2]: {
        abbr: 'PV2',
        name: 'Private 2',
        alt: ['Pvt 2'],
    },
    [PreNominal.SPC]: {
        abbr: 'SPC',
        name: 'Specialist',
        alt: [],
    },
    [PreNominal.SFC]: {
        abbr: 'SFC',
        name: 'Sergeant First Class',
        alt: ['Sgt 1st Class', 'Sgt First Class', 'Sergeant 1st Class'],
    },
    [PreNominal.CSM]: {
        abbr: 'CSM',
        name: 'Command Sergeant Major',
        alt: [],
    },
    [PreNominal.SMA]: {
        abbr: 'SMA',
        name: 'Sergeant Major of the Army',
        alt: [],
    },
    [PreNominal.GA]: {
        abbr: 'GA',
        name: 'General of the Army',
        alt: [],
    },
    // Military Titles (Air Force)
    [PreNominal.AB]: {
        abbr: 'AB',
        name: 'Airman Basic',
        alt: [],
    },
    [PreNominal.AMN]: {
        abbr: 'Amn',
        name: 'Airman',
        alt: [],
    },
    [PreNominal.A1C]: {
        abbr: 'A1C',
        name: 'Airman First Class',
        alt: ['Amn 1st Class', 'Airman 1st Class'],
    },
    [PreNominal.SRA]: {
        abbr: 'SrA',
        name: 'Senior Airman',
        alt: [],
    },
    [PreNominal.TSGT]: {
        abbr: 'TSgt',
        name: 'Technical Sergeant',
        alt: ['Technical Sgt', 'Tech Sgt'],
    },
    [PreNominal.SMS]: {
        abbr: 'SMSgt',
        name: 'Senior Master Sergeant',
        alt: ['SMSgt', 'Sr Master Sergeant', 'Sr Master Sgt'],
    },
    [PreNominal.CMS]: {
        abbr: 'CMSgt',
        name: 'Chief Master Sergeant',
        alt: ['CMSgt', 'Chief Master Sgt'],
    },
    [PreNominal.CCM]: {
        abbr: 'CCM',
        name: 'Command Chief Master Sergeant',
        alt: [],
    },
    [PreNominal.GOAF]: {
        abbr: 'GOAF',
        name: 'General of the Air Force',
        alt: [],
    },
    // Military Titles (Navy)
    [PreNominal.SR]: {
        abbr: 'SR',
        name: 'Seaman Recruit',
        alt: [],
    },
    [PreNominal.SA]: {
        abbr: 'SA',
        name: 'Seaman Apprentice',
        alt: [],
    },
    [PreNominal.SN]: {
        abbr: 'SN',
        name: 'Seaman',
        alt: [],
    },
    [PreNominal.PO3]: {
        abbr: 'PO3',
        name: 'Petty Officer 3rd Class',
        alt: ['Petty Officer Third Class', 'PO 3rd Class', 'PO Third Class'],
    },
    [PreNominal.PO2]: {
        abbr: 'PO2',
        name: 'Petty Officer 2nd Class',
        alt: ['Petty Officer Second Class', 'PO 2nd Class', 'PO Second Class'],
    },
    [PreNominal.PO1]: {
        abbr: 'PO1',
        name: 'Petty Officer 1st Class',
        alt: ['Petty Officer First Class', 'PO 1st Class', 'PO First Class'],
    },
    [PreNominal.CPO]: {
        abbr: 'CPO',
        name: 'Chief Petty Officer',
        alt: ['Chief PO'],
    },
    [PreNominal.SCPO]: {
        abbr: 'SCPO',
        name: 'Senior Chief Petty Officer',
        alt: ['Senior Chief PO', 'Sr Chief Petty Officer', 'Sr Chief PO'],
    },
    [PreNominal.MCPO]: {
        abbr: 'MCPO',
        name: 'Master Chief Petty Officer',
        alt: ['Master Chief PO'],
    },
    [PreNominal.MCPOC]: {
        abbr: 'MCPOC',
        name: 'Command Master Chief Petty Officer',
        alt: ['Command Master Chief PO'],
    },
    [PreNominal.FLTCM]: {
        abbr: 'FLTCM',
        name: 'Fleet Master Chief Petty Officer',
        alt: ['Fleet Master Chief PO'],
    },
    [PreNominal.FORCM]: {
        abbr: 'FORCM',
        name: 'Force Master Chief Petty Officer',
        alt: ['Force Master Chief PO'],
    },
    [PreNominal.ENS]: {
        abbr: 'Ens',
        name: 'Ensign',
        alt: [],
    },
    [PreNominal.LTJG]: {
        abbr: 'LTJG',
        name: 'Lieutenant, Junior Grade',
        alt: ['Junior Grade Lieutenant', 'Jr. Lieutenant'],
    },
    [PreNominal.LT]: {
        abbr: 'GOAF',
        name: 'General of the Air Force',
        alt: [],
    },
    [PreNominal.LCDR]: {
        abbr: 'LT',
        name: 'Lieutenant',
        alt: [],
    },
    [PreNominal.CDR]: {
        abbr: 'CDR',
        name: 'Commander',
        alt: [],
    },
    [PreNominal.RDML]: {
        abbr: 'RDML',
        name: 'Rear Admiral (lower half)',
        alt: ['Rear Admiral'],
    },
    [PreNominal.RADM]: {
        abbr: 'RADM',
        name: 'Rear Admiral (upper half)',
        alt: [],
    },
    [PreNominal.VADM]: {
        abbr: 'VADM',
        name: 'Vice Admiral',
        alt: ['Vice ADM'],
    },
    [PreNominal.ADM]: {
        abbr: 'ADM',
        name: 'Admiral',
        alt: [],
    },
    [PreNominal.FADM]: {
        abbr: 'FADM',
        name: 'Fleet Admiral',
        alt: ['Fleet ADM'],
    },
    // Military Rank (Marines)
    [PreNominal.LCPL]: {
        abbr: 'LCpl',
        name: 'Lance Corporal',
        alt: ['Lance Cpl'],
    },
    [PreNominal.GYSGT]: {
        abbr: 'GySgt',
        name: 'Gunnery Sergeant',
        alt: ['Gunnery Sgt'],
    },
    [PreNominal.MGYSGT]: {
        abbr: 'MGySgt',
        name: 'Master Gunnery Sergeant',
        alt: ['Master Gunnery Sgt'],
    },
    [PreNominal.SMMC]: {
        abbr: 'SgtMajMarCor',
        name: 'Sergeant Major of the Marine Corps',
        alt: [],
    },
};
const aliases = {};
for (const [key, desc] of Object.entries(PRE_NOMINAL)) {
    const arr = aliases[key] = aliases[key] || [];
    arr.push(...desc.alt);
    arr.push(desc.name);
    arr.push(desc.abbr);
}
export default aliases;
//# sourceMappingURL=data:application/json;base64,