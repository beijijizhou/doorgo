import { default as Country } from './Country.js';
import { default as Directional } from './Directional.js';
import { default as FacilityType } from './FacilityType.js';
import { default as LanguageCode } from './LanguageCode.js';
import { default as NameSuffix } from './NameSuffix.js';
import { default as PostNominal } from './PostNominal.js';
import { default as PreNominal } from './PreNominal.js';
import { default as State } from './State.js';
import { default as StreetType } from './StreetType.js';
import { default as UnitAbbr } from './UnitAbbr.js';
import { createAliasesLookup, createLookupFunction } from './utils.js';
export const aliases = {
    Country,
    Directional,
    FacilityType,
    LanguageCode,
    NameSuffix,
    PostNominal,
    PreNominal,
    State,
    StreetType,
    UnitAbbr,
    CountryLookup: createAliasesLookup(Country),
    DirectionalLookup: createAliasesLookup(Directional),
    FacilityTypeLookup: createAliasesLookup(FacilityType),
    LanguageCodeLookup: createAliasesLookup(LanguageCode),
    NameSuffixLookup: createAliasesLookup(NameSuffix),
    PostNominalLookup: createAliasesLookup(PostNominal),
    PreNominalLookup: createAliasesLookup(PreNominal),
    StateLookup: createAliasesLookup(State),
    StreetTypeLookup: createAliasesLookup(StreetType),
    UnitAbbrLookup: createAliasesLookup(UnitAbbr),
};
export const toCountry = createLookupFunction(aliases.CountryLookup);
export const toDirectional = createLookupFunction(aliases.DirectionalLookup);
export const toFacilityType = createLookupFunction(aliases.FacilityTypeLookup);
export const toLanguageCode = createLookupFunction(aliases.LanguageCodeLookup);
export const toPreNominal = createLookupFunction(aliases.PreNominalLookup);
export const toPostNominal = createLookupFunction(aliases.PostNominalLookup);
export const toNameSuffix = createLookupFunction(aliases.NameSuffixLookup);
export const toState = createLookupFunction(aliases.StateLookup);
export const toStreetType = createLookupFunction(aliases.StreetTypeLookup);
export const toUnitAbbr = createLookupFunction(aliases.UnitAbbrLookup);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZW51bXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sSUFBSSxPQUFPLEVBQUUsTUFBSyxjQUFjLENBQUM7QUFDakQsT0FBTyxFQUFFLE9BQU8sSUFBSSxXQUFXLEVBQUUsTUFBSyxrQkFBa0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsT0FBTyxJQUFJLFlBQVksRUFBRSxNQUFLLG1CQUFtQixDQUFDO0FBQzNELE9BQU8sRUFBRSxPQUFPLElBQUksWUFBWSxFQUFFLE1BQUssbUJBQW1CLENBQUM7QUFDM0QsT0FBTyxFQUFFLE9BQU8sSUFBSSxVQUFVLEVBQUUsTUFBSyxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsT0FBTyxJQUFJLFdBQVcsRUFBRSxNQUFLLGtCQUFrQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxPQUFPLElBQUksVUFBVSxFQUFFLE1BQUssaUJBQWlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBSyxZQUFZLENBQUM7QUFDN0MsT0FBTyxFQUFFLE9BQU8sSUFBSSxVQUFVLEVBQUUsTUFBSyxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsT0FBTyxJQUFJLFFBQVEsRUFBRSxNQUFLLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFdkUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHO0lBQ3JCLE9BQU87SUFDUCxXQUFXO0lBQ1gsWUFBWTtJQUNaLFlBQVk7SUFDWixVQUFVO0lBQ1YsV0FBVztJQUNYLFVBQVU7SUFDVixLQUFLO0lBQ0wsVUFBVTtJQUNWLFFBQVE7SUFDUixhQUFhLEVBQUUsbUJBQW1CLENBQUMsT0FBTyxDQUFDO0lBQzNDLGlCQUFpQixFQUFFLG1CQUFtQixDQUFDLFdBQVcsQ0FBQztJQUNuRCxrQkFBa0IsRUFBRSxtQkFBbUIsQ0FBQyxZQUFZLENBQUM7SUFDckQsa0JBQWtCLEVBQUUsbUJBQW1CLENBQUMsWUFBWSxDQUFDO0lBQ3JELGdCQUFnQixFQUFFLG1CQUFtQixDQUFDLFVBQVUsQ0FBQztJQUNqRCxpQkFBaUIsRUFBRSxtQkFBbUIsQ0FBQyxXQUFXLENBQUM7SUFDbkQsZ0JBQWdCLEVBQUUsbUJBQW1CLENBQUMsVUFBVSxDQUFDO0lBQ2pELFdBQVcsRUFBRSxtQkFBbUIsQ0FBQyxLQUFLLENBQUM7SUFDdkMsZ0JBQWdCLEVBQUUsbUJBQW1CLENBQUMsVUFBVSxDQUFDO0lBQ2pELGNBQWMsRUFBRSxtQkFBbUIsQ0FBQyxRQUFRLENBQUM7Q0FDOUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDckUsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQzdFLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUMvRSxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsb0JBQW9CLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFDL0UsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQzNFLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUM3RSxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsb0JBQW9CLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDM0UsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNqRSxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsb0JBQW9CLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDM0UsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmF1bHQgYXMgQ291bnRyeSB9IGZyb20nLi9Db3VudHJ5LmpzJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgRGlyZWN0aW9uYWwgfSBmcm9tJy4vRGlyZWN0aW9uYWwuanMnO1xuaW1wb3J0IHsgZGVmYXVsdCBhcyBGYWNpbGl0eVR5cGUgfSBmcm9tJy4vRmFjaWxpdHlUeXBlLmpzJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgTGFuZ3VhZ2VDb2RlIH0gZnJvbScuL0xhbmd1YWdlQ29kZS5qcyc7XG5pbXBvcnQgeyBkZWZhdWx0IGFzIE5hbWVTdWZmaXggfSBmcm9tJy4vTmFtZVN1ZmZpeC5qcyc7XG5pbXBvcnQgeyBkZWZhdWx0IGFzIFBvc3ROb21pbmFsIH0gZnJvbScuL1Bvc3ROb21pbmFsLmpzJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgUHJlTm9taW5hbCB9IGZyb20nLi9QcmVOb21pbmFsLmpzJztcbmltcG9ydCB7IGRlZmF1bHQgYXMgU3RhdGUgfSBmcm9tJy4vU3RhdGUuanMnO1xuaW1wb3J0IHsgZGVmYXVsdCBhcyBTdHJlZXRUeXBlIH0gZnJvbScuL1N0cmVldFR5cGUuanMnO1xuaW1wb3J0IHsgZGVmYXVsdCBhcyBVbml0QWJiciB9IGZyb20nLi9Vbml0QWJici5qcyc7XG5pbXBvcnQgeyBjcmVhdGVBbGlhc2VzTG9va3VwLCBjcmVhdGVMb29rdXBGdW5jdGlvbiB9IGZyb20gJy4vdXRpbHMuanMnO1xuXG5leHBvcnQgY29uc3QgYWxpYXNlcyA9IHtcbiAgQ291bnRyeSxcbiAgRGlyZWN0aW9uYWwsXG4gIEZhY2lsaXR5VHlwZSxcbiAgTGFuZ3VhZ2VDb2RlLFxuICBOYW1lU3VmZml4LFxuICBQb3N0Tm9taW5hbCxcbiAgUHJlTm9taW5hbCxcbiAgU3RhdGUsXG4gIFN0cmVldFR5cGUsXG4gIFVuaXRBYmJyLFxuICBDb3VudHJ5TG9va3VwOiBjcmVhdGVBbGlhc2VzTG9va3VwKENvdW50cnkpLFxuICBEaXJlY3Rpb25hbExvb2t1cDogY3JlYXRlQWxpYXNlc0xvb2t1cChEaXJlY3Rpb25hbCksXG4gIEZhY2lsaXR5VHlwZUxvb2t1cDogY3JlYXRlQWxpYXNlc0xvb2t1cChGYWNpbGl0eVR5cGUpLFxuICBMYW5ndWFnZUNvZGVMb29rdXA6IGNyZWF0ZUFsaWFzZXNMb29rdXAoTGFuZ3VhZ2VDb2RlKSxcbiAgTmFtZVN1ZmZpeExvb2t1cDogY3JlYXRlQWxpYXNlc0xvb2t1cChOYW1lU3VmZml4KSxcbiAgUG9zdE5vbWluYWxMb29rdXA6IGNyZWF0ZUFsaWFzZXNMb29rdXAoUG9zdE5vbWluYWwpLFxuICBQcmVOb21pbmFsTG9va3VwOiBjcmVhdGVBbGlhc2VzTG9va3VwKFByZU5vbWluYWwpLFxuICBTdGF0ZUxvb2t1cDogY3JlYXRlQWxpYXNlc0xvb2t1cChTdGF0ZSksXG4gIFN0cmVldFR5cGVMb29rdXA6IGNyZWF0ZUFsaWFzZXNMb29rdXAoU3RyZWV0VHlwZSksXG4gIFVuaXRBYmJyTG9va3VwOiBjcmVhdGVBbGlhc2VzTG9va3VwKFVuaXRBYmJyKSxcbn07XG5cbmV4cG9ydCBjb25zdCB0b0NvdW50cnkgPSBjcmVhdGVMb29rdXBGdW5jdGlvbihhbGlhc2VzLkNvdW50cnlMb29rdXApO1xuZXhwb3J0IGNvbnN0IHRvRGlyZWN0aW9uYWwgPSBjcmVhdGVMb29rdXBGdW5jdGlvbihhbGlhc2VzLkRpcmVjdGlvbmFsTG9va3VwKTtcbmV4cG9ydCBjb25zdCB0b0ZhY2lsaXR5VHlwZSA9IGNyZWF0ZUxvb2t1cEZ1bmN0aW9uKGFsaWFzZXMuRmFjaWxpdHlUeXBlTG9va3VwKTtcbmV4cG9ydCBjb25zdCB0b0xhbmd1YWdlQ29kZSA9IGNyZWF0ZUxvb2t1cEZ1bmN0aW9uKGFsaWFzZXMuTGFuZ3VhZ2VDb2RlTG9va3VwKTtcbmV4cG9ydCBjb25zdCB0b1ByZU5vbWluYWwgPSBjcmVhdGVMb29rdXBGdW5jdGlvbihhbGlhc2VzLlByZU5vbWluYWxMb29rdXApO1xuZXhwb3J0IGNvbnN0IHRvUG9zdE5vbWluYWwgPSBjcmVhdGVMb29rdXBGdW5jdGlvbihhbGlhc2VzLlBvc3ROb21pbmFsTG9va3VwKTtcbmV4cG9ydCBjb25zdCB0b05hbWVTdWZmaXggPSBjcmVhdGVMb29rdXBGdW5jdGlvbihhbGlhc2VzLk5hbWVTdWZmaXhMb29rdXApO1xuZXhwb3J0IGNvbnN0IHRvU3RhdGUgPSBjcmVhdGVMb29rdXBGdW5jdGlvbihhbGlhc2VzLlN0YXRlTG9va3VwKTtcbmV4cG9ydCBjb25zdCB0b1N0cmVldFR5cGUgPSBjcmVhdGVMb29rdXBGdW5jdGlvbihhbGlhc2VzLlN0cmVldFR5cGVMb29rdXApO1xuZXhwb3J0IGNvbnN0IHRvVW5pdEFiYnIgPSBjcmVhdGVMb29rdXBGdW5jdGlvbihhbGlhc2VzLlVuaXRBYmJyTG9va3VwKTtcbiJdfQ==