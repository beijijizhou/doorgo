/* eslint-disable */
/*
* CODE GENERATED AUTOMATICALLY
* THIS FILE SHOULD NOT BE EDITED BY HAND
*/
export var Party;
(function (Party) {
    Party["D"] = "D";
    Party["R"] = "R";
    Party["G"] = "G";
    Party["L"] = "L";
    Party["OL"] = "OL";
    Party["OC"] = "OC";
    Party["OU"] = "OU";
    Party["NPP"] = "NPP";
    Party["U"] = "U";
})(Party = Party || (Party = {}));
export function isParty(value) {
    return value === Party.D
        || value === Party.R
        || value === Party.G
        || value === Party.L
        || value === Party.OL
        || value === Party.OC
        || value === Party.OU
        || value === Party.NPP
        || value === Party.U;
}
export function isPartyOrNull(value) {
    if (value === null) {
        return true;
    }
    return isParty(value);
}
export var LanguageCode;
(function (LanguageCode) {
    LanguageCode["ABK"] = "ABK";
    LanguageCode["AAR"] = "AAR";
    LanguageCode["AFR"] = "AFR";
    LanguageCode["AKA"] = "AKA";
    LanguageCode["SQI"] = "SQI";
    LanguageCode["AMH"] = "AMH";
    LanguageCode["ARA"] = "ARA";
    LanguageCode["ARG"] = "ARG";
    LanguageCode["HYE"] = "HYE";
    LanguageCode["ASM"] = "ASM";
    LanguageCode["AVA"] = "AVA";
    LanguageCode["AVE"] = "AVE";
    LanguageCode["AYM"] = "AYM";
    LanguageCode["AZE"] = "AZE";
    LanguageCode["BAM"] = "BAM";
    LanguageCode["BAK"] = "BAK";
    LanguageCode["EUS"] = "EUS";
    LanguageCode["BEL"] = "BEL";
    LanguageCode["BEN"] = "BEN";
    LanguageCode["BIS"] = "BIS";
    LanguageCode["BOS"] = "BOS";
    LanguageCode["BRE"] = "BRE";
    LanguageCode["BUL"] = "BUL";
    LanguageCode["MYA"] = "MYA";
    LanguageCode["CAT"] = "CAT";
    LanguageCode["CHA"] = "CHA";
    LanguageCode["CHE"] = "CHE";
    LanguageCode["NYA"] = "NYA";
    LanguageCode["CHV"] = "CHV";
    LanguageCode["COR"] = "COR";
    LanguageCode["COS"] = "COS";
    LanguageCode["CRE"] = "CRE";
    LanguageCode["HRV"] = "HRV";
    LanguageCode["CES"] = "CES";
    LanguageCode["DAN"] = "DAN";
    LanguageCode["DIV"] = "DIV";
    LanguageCode["NLD"] = "NLD";
    LanguageCode["ENG"] = "ENG";
    LanguageCode["EPO"] = "EPO";
    LanguageCode["EST"] = "EST";
    LanguageCode["EWE"] = "EWE";
    LanguageCode["FAO"] = "FAO";
    LanguageCode["FIJ"] = "FIJ";
    LanguageCode["FIN"] = "FIN";
    LanguageCode["FRE"] = "FRE";
    LanguageCode["FUL"] = "FUL";
    LanguageCode["FUC"] = "FUC";
    LanguageCode["FUF"] = "FUF";
    LanguageCode["GLG"] = "GLG";
    LanguageCode["KAT"] = "KAT";
    LanguageCode["DEU"] = "DEU";
    LanguageCode["ELL"] = "ELL";
    LanguageCode["GRN"] = "GRN";
    LanguageCode["GUJ"] = "GUJ";
    LanguageCode["HAT"] = "HAT";
    LanguageCode["HAU"] = "HAU";
    LanguageCode["HEB"] = "HEB";
    LanguageCode["HER"] = "HER";
    LanguageCode["HIN"] = "HIN";
    LanguageCode["HMO"] = "HMO";
    LanguageCode["HUM"] = "HUM";
    LanguageCode["INA"] = "INA";
    LanguageCode["IND"] = "IND";
    LanguageCode["ILE"] = "ILE";
    LanguageCode["GLE"] = "GLE";
    LanguageCode["IBO"] = "IBO";
    LanguageCode["IPK"] = "IPK";
    LanguageCode["IDO"] = "IDO";
    LanguageCode["ISL"] = "ISL";
    LanguageCode["ITA"] = "ITA";
    LanguageCode["IKU"] = "IKU";
    LanguageCode["JPN"] = "JPN";
    LanguageCode["JAV"] = "JAV";
    LanguageCode["KAL"] = "KAL";
    LanguageCode["KAN"] = "KAN";
    LanguageCode["KAU"] = "KAU";
    LanguageCode["KAS"] = "KAS";
    LanguageCode["KAZ"] = "KAZ";
    LanguageCode["KHM"] = "KHM";
    LanguageCode["KIK"] = "KIK";
    LanguageCode["KIN"] = "KIN";
    LanguageCode["KIR"] = "KIR";
    LanguageCode["KOM"] = "KOM";
    LanguageCode["KON"] = "KON";
    LanguageCode["KOR"] = "KOR";
    LanguageCode["KUR"] = "KUR";
    LanguageCode["KUA"] = "KUA";
    LanguageCode["LAT"] = "LAT";
    LanguageCode["LTX"] = "LTX";
    LanguageCode["LUG"] = "LUG";
    LanguageCode["LIM"] = "LIM";
    LanguageCode["LIN"] = "LIN";
    LanguageCode["LAO"] = "LAO";
    LanguageCode["LIT"] = "LIT";
    LanguageCode["LUB"] = "LUB";
    LanguageCode["LAV"] = "LAV";
    LanguageCode["GLV"] = "GLV";
    LanguageCode["MKD"] = "MKD";
    LanguageCode["MLG"] = "MLG";
    LanguageCode["MSA"] = "MSA";
    LanguageCode["MAL"] = "MAL";
    LanguageCode["MLT"] = "MLT";
    LanguageCode["MRI"] = "MRI";
    LanguageCode["MAR"] = "MAR";
    LanguageCode["MAH"] = "MAH";
    LanguageCode["MON"] = "MON";
    LanguageCode["NAU"] = "NAU";
    LanguageCode["NAV"] = "NAV";
    LanguageCode["NOB"] = "NOB";
    LanguageCode["NDE"] = "NDE";
    LanguageCode["NEP"] = "NEP";
    LanguageCode["NDO"] = "NDO";
    LanguageCode["NNO"] = "NNO";
    LanguageCode["NOR"] = "NOR";
    LanguageCode["III"] = "III";
    LanguageCode["NBL"] = "NBL";
    LanguageCode["OCI"] = "OCI";
    LanguageCode["OJI"] = "OJI";
    LanguageCode["CHU"] = "CHU";
    LanguageCode["ORM"] = "ORM";
    LanguageCode["ORI"] = "ORI";
    LanguageCode["OSS"] = "OSS";
    LanguageCode["PAN"] = "PAN";
    LanguageCode["PLI"] = "PLI";
    LanguageCode["FAS"] = "FAS";
    LanguageCode["POL"] = "POL";
    LanguageCode["PUS"] = "PUS";
    LanguageCode["POR"] = "POR";
    LanguageCode["QUE"] = "QUE";
    LanguageCode["ROH"] = "ROH";
    LanguageCode["RUN"] = "RUN";
    LanguageCode["RON"] = "RON";
    LanguageCode["RUS"] = "RUS";
    LanguageCode["SAN"] = "SAN";
    LanguageCode["SRD"] = "SRD";
    LanguageCode["SND"] = "SND";
    LanguageCode["SME"] = "SME";
    LanguageCode["SMO"] = "SMO";
    LanguageCode["SAG"] = "SAG";
    LanguageCode["SRP"] = "SRP";
    LanguageCode["GLA"] = "GLA";
    LanguageCode["SNA"] = "SNA";
    LanguageCode["SIN"] = "SIN";
    LanguageCode["SLK"] = "SLK";
    LanguageCode["SLV"] = "SLV";
    LanguageCode["SOM"] = "SOM";
    LanguageCode["SOT"] = "SOT";
    LanguageCode["SPA"] = "SPA";
    LanguageCode["SUN"] = "SUN";
    LanguageCode["SWA"] = "SWA";
    LanguageCode["SSW"] = "SSW";
    LanguageCode["SWE"] = "SWE";
    LanguageCode["TAM"] = "TAM";
    LanguageCode["TEL"] = "TEL";
    LanguageCode["TGK"] = "TGK";
    LanguageCode["THA"] = "THA";
    LanguageCode["TIR"] = "TIR";
    LanguageCode["BOD"] = "BOD";
    LanguageCode["TUK"] = "TUK";
    LanguageCode["TGL"] = "TGL";
    LanguageCode["TSN"] = "TSN";
    LanguageCode["TON"] = "TON";
    LanguageCode["TUR"] = "TUR";
    LanguageCode["TSO"] = "TSO";
    LanguageCode["TAT"] = "TAT";
    LanguageCode["TWI"] = "TWI";
    LanguageCode["TAH"] = "TAH";
    LanguageCode["UIG"] = "UIG";
    LanguageCode["UKR"] = "UKR";
    LanguageCode["URD"] = "URD";
    LanguageCode["UZB"] = "UZB";
    LanguageCode["VEN"] = "VEN";
    LanguageCode["VIE"] = "VIE";
    LanguageCode["VOL"] = "VOL";
    LanguageCode["WLN"] = "WLN";
    LanguageCode["CYM"] = "CYM";
    LanguageCode["WOL"] = "WOL";
    LanguageCode["FRY"] = "FRY";
    LanguageCode["XHO"] = "XHO";
    LanguageCode["YID"] = "YID";
    LanguageCode["YOR"] = "YOR";
    LanguageCode["ZHA"] = "ZHA";
    LanguageCode["BHO"] = "BHO";
    LanguageCode["ZHO"] = "ZHO";
    LanguageCode["CMN"] = "CMN";
    LanguageCode["YUE"] = "YUE";
    LanguageCode["NAN"] = "NAN";
})(LanguageCode = LanguageCode || (LanguageCode = {}));
export function isLanguageCode(value) {
    return value === LanguageCode.ABK
        || value === LanguageCode.AAR
        || value === LanguageCode.AFR
        || value === LanguageCode.AKA
        || value === LanguageCode.SQI
        || value === LanguageCode.AMH
        || value === LanguageCode.ARA
        || value === LanguageCode.ARG
        || value === LanguageCode.HYE
        || value === LanguageCode.ASM
        || value === LanguageCode.AVA
        || value === LanguageCode.AVE
        || value === LanguageCode.AYM
        || value === LanguageCode.AZE
        || value === LanguageCode.BAM
        || value === LanguageCode.BAK
        || value === LanguageCode.EUS
        || value === LanguageCode.BEL
        || value === LanguageCode.BEN
        || value === LanguageCode.BIS
        || value === LanguageCode.BOS
        || value === LanguageCode.BRE
        || value === LanguageCode.BUL
        || value === LanguageCode.MYA
        || value === LanguageCode.CAT
        || value === LanguageCode.CHA
        || value === LanguageCode.CHE
        || value === LanguageCode.NYA
        || value === LanguageCode.CHV
        || value === LanguageCode.COR
        || value === LanguageCode.COS
        || value === LanguageCode.CRE
        || value === LanguageCode.HRV
        || value === LanguageCode.CES
        || value === LanguageCode.DAN
        || value === LanguageCode.DIV
        || value === LanguageCode.NLD
        || value === LanguageCode.ENG
        || value === LanguageCode.EPO
        || value === LanguageCode.EST
        || value === LanguageCode.EWE
        || value === LanguageCode.FAO
        || value === LanguageCode.FIJ
        || value === LanguageCode.FIN
        || value === LanguageCode.FRE
        || value === LanguageCode.FUL
        || value === LanguageCode.FUC
        || value === LanguageCode.FUF
        || value === LanguageCode.GLG
        || value === LanguageCode.KAT
        || value === LanguageCode.DEU
        || value === LanguageCode.ELL
        || value === LanguageCode.GRN
        || value === LanguageCode.GUJ
        || value === LanguageCode.HAT
        || value === LanguageCode.HAU
        || value === LanguageCode.HEB
        || value === LanguageCode.HER
        || value === LanguageCode.HIN
        || value === LanguageCode.HMO
        || value === LanguageCode.HUM
        || value === LanguageCode.INA
        || value === LanguageCode.IND
        || value === LanguageCode.ILE
        || value === LanguageCode.GLE
        || value === LanguageCode.IBO
        || value === LanguageCode.IPK
        || value === LanguageCode.IDO
        || value === LanguageCode.ISL
        || value === LanguageCode.ITA
        || value === LanguageCode.IKU
        || value === LanguageCode.JPN
        || value === LanguageCode.JAV
        || value === LanguageCode.KAL
        || value === LanguageCode.KAN
        || value === LanguageCode.KAU
        || value === LanguageCode.KAS
        || value === LanguageCode.KAZ
        || value === LanguageCode.KHM
        || value === LanguageCode.KIK
        || value === LanguageCode.KIN
        || value === LanguageCode.KIR
        || value === LanguageCode.KOM
        || value === LanguageCode.KON
        || value === LanguageCode.KOR
        || value === LanguageCode.KUR
        || value === LanguageCode.KUA
        || value === LanguageCode.LAT
        || value === LanguageCode.LTX
        || value === LanguageCode.LUG
        || value === LanguageCode.LIM
        || value === LanguageCode.LIN
        || value === LanguageCode.LAO
        || value === LanguageCode.LIT
        || value === LanguageCode.LUB
        || value === LanguageCode.LAV
        || value === LanguageCode.GLV
        || value === LanguageCode.MKD
        || value === LanguageCode.MLG
        || value === LanguageCode.MSA
        || value === LanguageCode.MAL
        || value === LanguageCode.MLT
        || value === LanguageCode.MRI
        || value === LanguageCode.MAR
        || value === LanguageCode.MAH
        || value === LanguageCode.MON
        || value === LanguageCode.NAU
        || value === LanguageCode.NAV
        || value === LanguageCode.NOB
        || value === LanguageCode.NDE
        || value === LanguageCode.NEP
        || value === LanguageCode.NDO
        || value === LanguageCode.NNO
        || value === LanguageCode.NOR
        || value === LanguageCode.III
        || value === LanguageCode.NBL
        || value === LanguageCode.OCI
        || value === LanguageCode.OJI
        || value === LanguageCode.CHU
        || value === LanguageCode.ORM
        || value === LanguageCode.ORI
        || value === LanguageCode.OSS
        || value === LanguageCode.PAN
        || value === LanguageCode.PLI
        || value === LanguageCode.FAS
        || value === LanguageCode.POL
        || value === LanguageCode.PUS
        || value === LanguageCode.POR
        || value === LanguageCode.QUE
        || value === LanguageCode.ROH
        || value === LanguageCode.RUN
        || value === LanguageCode.RON
        || value === LanguageCode.RUS
        || value === LanguageCode.SAN
        || value === LanguageCode.SRD
        || value === LanguageCode.SND
        || value === LanguageCode.SME
        || value === LanguageCode.SMO
        || value === LanguageCode.SAG
        || value === LanguageCode.SRP
        || value === LanguageCode.GLA
        || value === LanguageCode.SNA
        || value === LanguageCode.SIN
        || value === LanguageCode.SLK
        || value === LanguageCode.SLV
        || value === LanguageCode.SOM
        || value === LanguageCode.SOT
        || value === LanguageCode.SPA
        || value === LanguageCode.SUN
        || value === LanguageCode.SWA
        || value === LanguageCode.SSW
        || value === LanguageCode.SWE
        || value === LanguageCode.TAM
        || value === LanguageCode.TEL
        || value === LanguageCode.TGK
        || value === LanguageCode.THA
        || value === LanguageCode.TIR
        || value === LanguageCode.BOD
        || value === LanguageCode.TUK
        || value === LanguageCode.TGL
        || value === LanguageCode.TSN
        || value === LanguageCode.TON
        || value === LanguageCode.TUR
        || value === LanguageCode.TSO
        || value === LanguageCode.TAT
        || value === LanguageCode.TWI
        || value === LanguageCode.TAH
        || value === LanguageCode.UIG
        || value === LanguageCode.UKR
        || value === LanguageCode.URD
        || value === LanguageCode.UZB
        || value === LanguageCode.VEN
        || value === LanguageCode.VIE
        || value === LanguageCode.VOL
        || value === LanguageCode.WLN
        || value === LanguageCode.CYM
        || value === LanguageCode.WOL
        || value === LanguageCode.FRY
        || value === LanguageCode.XHO
        || value === LanguageCode.YID
        || value === LanguageCode.YOR
        || value === LanguageCode.ZHA
        || value === LanguageCode.BHO
        || value === LanguageCode.ZHO
        || value === LanguageCode.CMN
        || value === LanguageCode.YUE
        || value === LanguageCode.NAN;
}
export function isLanguageCodeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isLanguageCode(value);
}
export var StreetType;
(function (StreetType) {
    StreetType["ALY"] = "ALY";
    StreetType["ANX"] = "ANX";
    StreetType["ARC"] = "ARC";
    StreetType["AVE"] = "AVE";
    StreetType["BYU"] = "BYU";
    StreetType["BCH"] = "BCH";
    StreetType["BND"] = "BND";
    StreetType["BLF"] = "BLF";
    StreetType["BLFS"] = "BLFS";
    StreetType["BTM"] = "BTM";
    StreetType["BLVD"] = "BLVD";
    StreetType["BR"] = "BR";
    StreetType["BRG"] = "BRG";
    StreetType["BRK"] = "BRK";
    StreetType["BRKS"] = "BRKS";
    StreetType["BG"] = "BG";
    StreetType["BGS"] = "BGS";
    StreetType["BYP"] = "BYP";
    StreetType["CP"] = "CP";
    StreetType["CYN"] = "CYN";
    StreetType["CPE"] = "CPE";
    StreetType["CSWY"] = "CSWY";
    StreetType["CTR"] = "CTR";
    StreetType["CTRS"] = "CTRS";
    StreetType["CIR"] = "CIR";
    StreetType["CIRS"] = "CIRS";
    StreetType["CLF"] = "CLF";
    StreetType["CLFS"] = "CLFS";
    StreetType["CLB"] = "CLB";
    StreetType["CMN"] = "CMN";
    StreetType["CMNS"] = "CMNS";
    StreetType["COR"] = "COR";
    StreetType["CORS"] = "CORS";
    StreetType["CRSE"] = "CRSE";
    StreetType["CT"] = "CT";
    StreetType["CTS"] = "CTS";
    StreetType["CV"] = "CV";
    StreetType["CVS"] = "CVS";
    StreetType["CRK"] = "CRK";
    StreetType["CRES"] = "CRES";
    StreetType["CRST"] = "CRST";
    StreetType["XING"] = "XING";
    StreetType["XRD"] = "XRD";
    StreetType["XRDS"] = "XRDS";
    StreetType["CURV"] = "CURV";
    StreetType["DL"] = "DL";
    StreetType["DM"] = "DM";
    StreetType["DV"] = "DV";
    StreetType["DR"] = "DR";
    StreetType["DRS"] = "DRS";
    StreetType["EST"] = "EST";
    StreetType["ESTS"] = "ESTS";
    StreetType["EXPY"] = "EXPY";
    StreetType["EXT"] = "EXT";
    StreetType["EXTS"] = "EXTS";
    StreetType["FALL"] = "FALL";
    StreetType["FLS"] = "FLS";
    StreetType["FRY"] = "FRY";
    StreetType["FLD"] = "FLD";
    StreetType["FLDS"] = "FLDS";
    StreetType["FLT"] = "FLT";
    StreetType["FLTS"] = "FLTS";
    StreetType["FRD"] = "FRD";
    StreetType["FRDS"] = "FRDS";
    StreetType["FRST"] = "FRST";
    StreetType["FRG"] = "FRG";
    StreetType["FRGS"] = "FRGS";
    StreetType["FRK"] = "FRK";
    StreetType["FRKS"] = "FRKS";
    StreetType["FT"] = "FT";
    StreetType["FWY"] = "FWY";
    StreetType["GDN"] = "GDN";
    StreetType["GDNS"] = "GDNS";
    StreetType["GTWY"] = "GTWY";
    StreetType["GLN"] = "GLN";
    StreetType["GLNS"] = "GLNS";
    StreetType["GRN"] = "GRN";
    StreetType["GRNS"] = "GRNS";
    StreetType["GRV"] = "GRV";
    StreetType["GRVS"] = "GRVS";
    StreetType["HBR"] = "HBR";
    StreetType["HBRS"] = "HBRS";
    StreetType["HVN"] = "HVN";
    StreetType["HTS"] = "HTS";
    StreetType["HL"] = "HL";
    StreetType["HLS"] = "HLS";
    StreetType["HOLW"] = "HOLW";
    StreetType["INLT"] = "INLT";
    StreetType["IS"] = "IS";
    StreetType["ISS"] = "ISS";
    StreetType["ISLE"] = "ISLE";
    StreetType["JCT"] = "JCT";
    StreetType["JCTS"] = "JCTS";
    StreetType["KY"] = "KY";
    StreetType["KYS"] = "KYS";
    StreetType["KNL"] = "KNL";
    StreetType["KNLS"] = "KNLS";
    StreetType["LK"] = "LK";
    StreetType["LKS"] = "LKS";
    StreetType["LAND"] = "LAND";
    StreetType["LNDG"] = "LNDG";
    StreetType["LN"] = "LN";
    StreetType["LGT"] = "LGT";
    StreetType["LGTS"] = "LGTS";
    StreetType["LF"] = "LF";
    StreetType["LCK"] = "LCK";
    StreetType["LCKS"] = "LCKS";
    StreetType["LDG"] = "LDG";
    StreetType["LOOP"] = "LOOP";
    StreetType["MALL"] = "MALL";
    StreetType["MNR"] = "MNR";
    StreetType["MNRS"] = "MNRS";
    StreetType["MDW"] = "MDW";
    StreetType["MDWS"] = "MDWS";
    StreetType["MEWS"] = "MEWS";
    StreetType["ML"] = "ML";
    StreetType["MLS"] = "MLS";
    StreetType["MSN"] = "MSN";
    StreetType["MTWY"] = "MTWY";
    StreetType["MT"] = "MT";
    StreetType["MTN"] = "MTN";
    StreetType["MTNS"] = "MTNS";
    StreetType["NCK"] = "NCK";
    StreetType["ORCH"] = "ORCH";
    StreetType["OVAL"] = "OVAL";
    StreetType["OPAS"] = "OPAS";
    StreetType["PARK"] = "PARK";
    StreetType["PKWY"] = "PKWY";
    StreetType["PASS"] = "PASS";
    StreetType["PSGE"] = "PSGE";
    StreetType["PATH"] = "PATH";
    StreetType["PIKE"] = "PIKE";
    StreetType["PNE"] = "PNE";
    StreetType["PNES"] = "PNES";
    StreetType["PL"] = "PL";
    StreetType["PLN"] = "PLN";
    StreetType["PLNS"] = "PLNS";
    StreetType["PLZ"] = "PLZ";
    StreetType["PT"] = "PT";
    StreetType["PTS"] = "PTS";
    StreetType["PRT"] = "PRT";
    StreetType["PRTS"] = "PRTS";
    StreetType["PR"] = "PR";
    StreetType["RADL"] = "RADL";
    StreetType["RAMP"] = "RAMP";
    StreetType["RNCH"] = "RNCH";
    StreetType["RPD"] = "RPD";
    StreetType["RPDS"] = "RPDS";
    StreetType["RST"] = "RST";
    StreetType["RDG"] = "RDG";
    StreetType["RDGS"] = "RDGS";
    StreetType["RIV"] = "RIV";
    StreetType["RD"] = "RD";
    StreetType["RDS"] = "RDS";
    StreetType["RTE"] = "RTE";
    StreetType["ROW"] = "ROW";
    StreetType["RUE"] = "RUE";
    StreetType["RUN"] = "RUN";
    StreetType["SHL"] = "SHL";
    StreetType["SHLS"] = "SHLS";
    StreetType["SHR"] = "SHR";
    StreetType["SHRS"] = "SHRS";
    StreetType["SKWY"] = "SKWY";
    StreetType["SPG"] = "SPG";
    StreetType["SPGS"] = "SPGS";
    StreetType["SPUR"] = "SPUR";
    StreetType["SQ"] = "SQ";
    StreetType["SQS"] = "SQS";
    StreetType["STA"] = "STA";
    StreetType["STRA"] = "STRA";
    StreetType["STRM"] = "STRM";
    StreetType["ST"] = "ST";
    StreetType["STS"] = "STS";
    StreetType["SMT"] = "SMT";
    StreetType["TER"] = "TER";
    StreetType["TRWY"] = "TRWY";
    StreetType["TRCE"] = "TRCE";
    StreetType["TRAK"] = "TRAK";
    StreetType["TRFY"] = "TRFY";
    StreetType["TRL"] = "TRL";
    StreetType["TRLR"] = "TRLR";
    StreetType["TUNL"] = "TUNL";
    StreetType["TPKE"] = "TPKE";
    StreetType["UPAS"] = "UPAS";
    StreetType["UN"] = "UN";
    StreetType["UNS"] = "UNS";
    StreetType["VLY"] = "VLY";
    StreetType["VLYS"] = "VLYS";
    StreetType["VIA"] = "VIA";
    StreetType["VDCT"] = "VDCT";
    StreetType["VW"] = "VW";
    StreetType["VWS"] = "VWS";
    StreetType["VLG"] = "VLG";
    StreetType["VLGS"] = "VLGS";
    StreetType["VL"] = "VL";
    StreetType["VIS"] = "VIS";
    StreetType["WALK"] = "WALK";
    StreetType["WALL"] = "WALL";
    StreetType["WAY"] = "WAY";
    StreetType["WAYS"] = "WAYS";
    StreetType["WL"] = "WL";
    StreetType["WLS"] = "WLS";
    StreetType["HWY"] = "HWY";
    StreetType["CR"] = "CR";
    StreetType["SR"] = "SR";
    StreetType["TSR"] = "TSR";
    StreetType["RR"] = "RR";
    StreetType["HC"] = "HC";
    StreetType["FM"] = "FM";
    StreetType["SH"] = "SH";
    StreetType["IH"] = "IH";
    StreetType["UR"] = "UR";
    StreetType["CLL"] = "CLL";
    StreetType["CMT"] = "CMT";
    StreetType["CAM"] = "CAM";
    StreetType["CER"] = "CER";
    StreetType["ENT"] = "ENT";
    StreetType["PSO"] = "PSO";
    StreetType["PLA"] = "PLA";
    StreetType["RCH"] = "RCH";
    StreetType["VER"] = "VER";
    StreetType["LCMT"] = "LCMT";
    StreetType["ECAM"] = "ECAM";
    StreetType["LCER"] = "LCER";
    StreetType["LENT"] = "LENT";
    StreetType["EPSO"] = "EPSO";
    StreetType["LPLA"] = "LPLA";
    StreetType["ERCH"] = "ERCH";
    StreetType["LVER"] = "LVER";
})(StreetType = StreetType || (StreetType = {}));
export function isStreetType(value) {
    return value === StreetType.ALY
        || value === StreetType.ANX
        || value === StreetType.ARC
        || value === StreetType.AVE
        || value === StreetType.BYU
        || value === StreetType.BCH
        || value === StreetType.BND
        || value === StreetType.BLF
        || value === StreetType.BLFS
        || value === StreetType.BTM
        || value === StreetType.BLVD
        || value === StreetType.BR
        || value === StreetType.BRG
        || value === StreetType.BRK
        || value === StreetType.BRKS
        || value === StreetType.BG
        || value === StreetType.BGS
        || value === StreetType.BYP
        || value === StreetType.CP
        || value === StreetType.CYN
        || value === StreetType.CPE
        || value === StreetType.CSWY
        || value === StreetType.CTR
        || value === StreetType.CTRS
        || value === StreetType.CIR
        || value === StreetType.CIRS
        || value === StreetType.CLF
        || value === StreetType.CLFS
        || value === StreetType.CLB
        || value === StreetType.CMN
        || value === StreetType.CMNS
        || value === StreetType.COR
        || value === StreetType.CORS
        || value === StreetType.CRSE
        || value === StreetType.CT
        || value === StreetType.CTS
        || value === StreetType.CV
        || value === StreetType.CVS
        || value === StreetType.CRK
        || value === StreetType.CRES
        || value === StreetType.CRST
        || value === StreetType.XING
        || value === StreetType.XRD
        || value === StreetType.XRDS
        || value === StreetType.CURV
        || value === StreetType.DL
        || value === StreetType.DM
        || value === StreetType.DV
        || value === StreetType.DR
        || value === StreetType.DRS
        || value === StreetType.EST
        || value === StreetType.ESTS
        || value === StreetType.EXPY
        || value === StreetType.EXT
        || value === StreetType.EXTS
        || value === StreetType.FALL
        || value === StreetType.FLS
        || value === StreetType.FRY
        || value === StreetType.FLD
        || value === StreetType.FLDS
        || value === StreetType.FLT
        || value === StreetType.FLTS
        || value === StreetType.FRD
        || value === StreetType.FRDS
        || value === StreetType.FRST
        || value === StreetType.FRG
        || value === StreetType.FRGS
        || value === StreetType.FRK
        || value === StreetType.FRKS
        || value === StreetType.FT
        || value === StreetType.FWY
        || value === StreetType.GDN
        || value === StreetType.GDNS
        || value === StreetType.GTWY
        || value === StreetType.GLN
        || value === StreetType.GLNS
        || value === StreetType.GRN
        || value === StreetType.GRNS
        || value === StreetType.GRV
        || value === StreetType.GRVS
        || value === StreetType.HBR
        || value === StreetType.HBRS
        || value === StreetType.HVN
        || value === StreetType.HTS
        || value === StreetType.HL
        || value === StreetType.HLS
        || value === StreetType.HOLW
        || value === StreetType.INLT
        || value === StreetType.IS
        || value === StreetType.ISS
        || value === StreetType.ISLE
        || value === StreetType.JCT
        || value === StreetType.JCTS
        || value === StreetType.KY
        || value === StreetType.KYS
        || value === StreetType.KNL
        || value === StreetType.KNLS
        || value === StreetType.LK
        || value === StreetType.LKS
        || value === StreetType.LAND
        || value === StreetType.LNDG
        || value === StreetType.LN
        || value === StreetType.LGT
        || value === StreetType.LGTS
        || value === StreetType.LF
        || value === StreetType.LCK
        || value === StreetType.LCKS
        || value === StreetType.LDG
        || value === StreetType.LOOP
        || value === StreetType.MALL
        || value === StreetType.MNR
        || value === StreetType.MNRS
        || value === StreetType.MDW
        || value === StreetType.MDWS
        || value === StreetType.MEWS
        || value === StreetType.ML
        || value === StreetType.MLS
        || value === StreetType.MSN
        || value === StreetType.MTWY
        || value === StreetType.MT
        || value === StreetType.MTN
        || value === StreetType.MTNS
        || value === StreetType.NCK
        || value === StreetType.ORCH
        || value === StreetType.OVAL
        || value === StreetType.OPAS
        || value === StreetType.PARK
        || value === StreetType.PKWY
        || value === StreetType.PASS
        || value === StreetType.PSGE
        || value === StreetType.PATH
        || value === StreetType.PIKE
        || value === StreetType.PNE
        || value === StreetType.PNES
        || value === StreetType.PL
        || value === StreetType.PLN
        || value === StreetType.PLNS
        || value === StreetType.PLZ
        || value === StreetType.PT
        || value === StreetType.PTS
        || value === StreetType.PRT
        || value === StreetType.PRTS
        || value === StreetType.PR
        || value === StreetType.RADL
        || value === StreetType.RAMP
        || value === StreetType.RNCH
        || value === StreetType.RPD
        || value === StreetType.RPDS
        || value === StreetType.RST
        || value === StreetType.RDG
        || value === StreetType.RDGS
        || value === StreetType.RIV
        || value === StreetType.RD
        || value === StreetType.RDS
        || value === StreetType.RTE
        || value === StreetType.ROW
        || value === StreetType.RUE
        || value === StreetType.RUN
        || value === StreetType.SHL
        || value === StreetType.SHLS
        || value === StreetType.SHR
        || value === StreetType.SHRS
        || value === StreetType.SKWY
        || value === StreetType.SPG
        || value === StreetType.SPGS
        || value === StreetType.SPUR
        || value === StreetType.SQ
        || value === StreetType.SQS
        || value === StreetType.STA
        || value === StreetType.STRA
        || value === StreetType.STRM
        || value === StreetType.ST
        || value === StreetType.STS
        || value === StreetType.SMT
        || value === StreetType.TER
        || value === StreetType.TRWY
        || value === StreetType.TRCE
        || value === StreetType.TRAK
        || value === StreetType.TRFY
        || value === StreetType.TRL
        || value === StreetType.TRLR
        || value === StreetType.TUNL
        || value === StreetType.TPKE
        || value === StreetType.UPAS
        || value === StreetType.UN
        || value === StreetType.UNS
        || value === StreetType.VLY
        || value === StreetType.VLYS
        || value === StreetType.VIA
        || value === StreetType.VDCT
        || value === StreetType.VW
        || value === StreetType.VWS
        || value === StreetType.VLG
        || value === StreetType.VLGS
        || value === StreetType.VL
        || value === StreetType.VIS
        || value === StreetType.WALK
        || value === StreetType.WALL
        || value === StreetType.WAY
        || value === StreetType.WAYS
        || value === StreetType.WL
        || value === StreetType.WLS
        || value === StreetType.HWY
        || value === StreetType.CR
        || value === StreetType.SR
        || value === StreetType.TSR
        || value === StreetType.RR
        || value === StreetType.HC
        || value === StreetType.FM
        || value === StreetType.SH
        || value === StreetType.IH
        || value === StreetType.UR
        || value === StreetType.CLL
        || value === StreetType.CMT
        || value === StreetType.CAM
        || value === StreetType.CER
        || value === StreetType.ENT
        || value === StreetType.PSO
        || value === StreetType.PLA
        || value === StreetType.RCH
        || value === StreetType.VER
        || value === StreetType.LCMT
        || value === StreetType.ECAM
        || value === StreetType.LCER
        || value === StreetType.LENT
        || value === StreetType.EPSO
        || value === StreetType.LPLA
        || value === StreetType.ERCH
        || value === StreetType.LVER;
}
export function isStreetTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isStreetType(value);
}
export var FacilityType;
(function (FacilityType) {
    FacilityType["PCT"] = "PCT";
    FacilityType["URB"] = "URB";
    FacilityType["ALT"] = "ALT";
    FacilityType["BDA"] = "BDA";
    FacilityType["BO"] = "BO";
    FacilityType["BOSQUE"] = "BOSQUE";
    FacilityType["BRISA"] = "BRISA";
    FacilityType["CIUDAD"] = "CIUDAD";
    FacilityType["COLINA"] = "COLINA";
    FacilityType["CHALETS"] = "CHALETS";
    FacilityType["COMUNIDAD"] = "COMUNIDAD";
    FacilityType["EST"] = "EST";
    FacilityType["EXT"] = "EXT";
    FacilityType["HACIENDA"] = "HACIENDA";
    FacilityType["JARD"] = "JARD";
    FacilityType["IND"] = "IND";
    FacilityType["LOMA"] = "LOMA";
    FacilityType["MANS"] = "MANS";
    FacilityType["PARQ"] = "PARQ";
    FacilityType["PARCELA"] = "PARCELA";
    FacilityType["PASEO"] = "PASEO";
    FacilityType["PRADERA"] = "PRADERA";
    FacilityType["PORTAL"] = "PORTAL";
    FacilityType["PORTALES"] = "PORTALES";
    FacilityType["QUINTAS"] = "QUINTAS";
    FacilityType["RES"] = "RES";
    FacilityType["REPTO"] = "REPTO";
    FacilityType["RIBERAS"] = "RIBERAS";
    FacilityType["SECT"] = "SECT";
    FacilityType["TERR"] = "TERR";
    FacilityType["VALLE"] = "VALLE";
    FacilityType["VILLA"] = "VILLA";
    FacilityType["VISTA"] = "VISTA";
    FacilityType["PIER"] = "PIER";
    FacilityType["MLRM"] = "MLRM";
    FacilityType["USAS"] = "USAS";
    FacilityType["USAV"] = "USAV";
    FacilityType["USCGC"] = "USCGC";
    FacilityType["USS"] = "USS";
    FacilityType["USNV"] = "USNV";
    FacilityType["USNS"] = "USNS";
    FacilityType["NOAAS"] = "NOAAS";
    FacilityType["PO"] = "PO";
    FacilityType["PSC"] = "PSC";
    FacilityType["CMR"] = "CMR";
    FacilityType["UMR"] = "UMR";
    FacilityType["RPO"] = "RPO";
    FacilityType["OMDC"] = "OMDC";
    FacilityType["RHO"] = "RHO";
})(FacilityType = FacilityType || (FacilityType = {}));
export function isFacilityType(value) {
    return value === FacilityType.PCT
        || value === FacilityType.URB
        || value === FacilityType.ALT
        || value === FacilityType.BDA
        || value === FacilityType.BO
        || value === FacilityType.BOSQUE
        || value === FacilityType.BRISA
        || value === FacilityType.CIUDAD
        || value === FacilityType.COLINA
        || value === FacilityType.CHALETS
        || value === FacilityType.COMUNIDAD
        || value === FacilityType.EST
        || value === FacilityType.EXT
        || value === FacilityType.HACIENDA
        || value === FacilityType.JARD
        || value === FacilityType.IND
        || value === FacilityType.LOMA
        || value === FacilityType.MANS
        || value === FacilityType.PARQ
        || value === FacilityType.PARCELA
        || value === FacilityType.PASEO
        || value === FacilityType.PRADERA
        || value === FacilityType.PORTAL
        || value === FacilityType.PORTALES
        || value === FacilityType.QUINTAS
        || value === FacilityType.RES
        || value === FacilityType.REPTO
        || value === FacilityType.RIBERAS
        || value === FacilityType.SECT
        || value === FacilityType.TERR
        || value === FacilityType.VALLE
        || value === FacilityType.VILLA
        || value === FacilityType.VISTA
        || value === FacilityType.PIER
        || value === FacilityType.MLRM
        || value === FacilityType.USAS
        || value === FacilityType.USAV
        || value === FacilityType.USCGC
        || value === FacilityType.USS
        || value === FacilityType.USNV
        || value === FacilityType.USNS
        || value === FacilityType.NOAAS
        || value === FacilityType.PO
        || value === FacilityType.PSC
        || value === FacilityType.CMR
        || value === FacilityType.UMR
        || value === FacilityType.RPO
        || value === FacilityType.OMDC
        || value === FacilityType.RHO;
}
export function isFacilityTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isFacilityType(value);
}
export var UnitAbbr;
(function (UnitAbbr) {
    UnitAbbr["APT"] = "APT";
    UnitAbbr["BSMT"] = "BSMT";
    UnitAbbr["BLDG"] = "BLDG";
    UnitAbbr["BOX"] = "BOX";
    UnitAbbr["DEPT"] = "DEPT";
    UnitAbbr["FL"] = "FL";
    UnitAbbr["FRNT"] = "FRNT";
    UnitAbbr["HNGR"] = "HNGR";
    UnitAbbr["KEY"] = "KEY";
    UnitAbbr["LBBY"] = "LBBY";
    UnitAbbr["LOT"] = "LOT";
    UnitAbbr["LOWR"] = "LOWR";
    UnitAbbr["OFC"] = "OFC";
    UnitAbbr["PH"] = "PH";
    UnitAbbr["PIER"] = "PIER";
    UnitAbbr["REAR"] = "REAR";
    UnitAbbr["RM"] = "RM";
    UnitAbbr["SIDE"] = "SIDE";
    UnitAbbr["SLIP"] = "SLIP";
    UnitAbbr["SPC"] = "SPC";
    UnitAbbr["STOP"] = "STOP";
    UnitAbbr["STE"] = "STE";
    UnitAbbr["TRLR"] = "TRLR";
    UnitAbbr["UNIT"] = "UNIT";
    UnitAbbr["UPPR"] = "UPPR";
    UnitAbbr["NO"] = "NO";
    UnitAbbr["LFT"] = "LFT";
    UnitAbbr["LV"] = "LV";
    UnitAbbr["COTTAGE"] = "COTTAGE";
    UnitAbbr["YT"] = "YT";
    UnitAbbr["DORM"] = "DORM";
})(UnitAbbr = UnitAbbr || (UnitAbbr = {}));
export function isUnitAbbr(value) {
    return value === UnitAbbr.APT
        || value === UnitAbbr.BSMT
        || value === UnitAbbr.BLDG
        || value === UnitAbbr.BOX
        || value === UnitAbbr.DEPT
        || value === UnitAbbr.FL
        || value === UnitAbbr.FRNT
        || value === UnitAbbr.HNGR
        || value === UnitAbbr.KEY
        || value === UnitAbbr.LBBY
        || value === UnitAbbr.LOT
        || value === UnitAbbr.LOWR
        || value === UnitAbbr.OFC
        || value === UnitAbbr.PH
        || value === UnitAbbr.PIER
        || value === UnitAbbr.REAR
        || value === UnitAbbr.RM
        || value === UnitAbbr.SIDE
        || value === UnitAbbr.SLIP
        || value === UnitAbbr.SPC
        || value === UnitAbbr.STOP
        || value === UnitAbbr.STE
        || value === UnitAbbr.TRLR
        || value === UnitAbbr.UNIT
        || value === UnitAbbr.UPPR
        || value === UnitAbbr.NO
        || value === UnitAbbr.LFT
        || value === UnitAbbr.LV
        || value === UnitAbbr.COTTAGE
        || value === UnitAbbr.YT
        || value === UnitAbbr.DORM;
}
export function isUnitAbbrOrNull(value) {
    if (value === null) {
        return true;
    }
    return isUnitAbbr(value);
}
export var PersonalIdentifier;
(function (PersonalIdentifier) {
    PersonalIdentifier["PMB"] = "PMB";
    PersonalIdentifier["MSC"] = "MSC";
    PersonalIdentifier["MS"] = "MS";
    PersonalIdentifier["PFN"] = "PFN";
    PersonalIdentifier["CEN"] = "CEN";
})(PersonalIdentifier = PersonalIdentifier || (PersonalIdentifier = {}));
export function isPersonalIdentifier(value) {
    return value === PersonalIdentifier.PMB
        || value === PersonalIdentifier.MSC
        || value === PersonalIdentifier.MS
        || value === PersonalIdentifier.PFN
        || value === PersonalIdentifier.CEN;
}
export function isPersonalIdentifierOrNull(value) {
    if (value === null) {
        return true;
    }
    return isPersonalIdentifier(value);
}
export var Directional;
(function (Directional) {
    Directional["N"] = "N";
    Directional["NE"] = "NE";
    Directional["NW"] = "NW";
    Directional["S"] = "S";
    Directional["SE"] = "SE";
    Directional["SW"] = "SW";
    Directional["E"] = "E";
    Directional["W"] = "W";
})(Directional = Directional || (Directional = {}));
export function isDirectional(value) {
    return value === Directional.N
        || value === Directional.NE
        || value === Directional.NW
        || value === Directional.S
        || value === Directional.SE
        || value === Directional.SW
        || value === Directional.E
        || value === Directional.W;
}
export function isDirectionalOrNull(value) {
    if (value === null) {
        return true;
    }
    return isDirectional(value);
}
export var State;
(function (State) {
    State["AL"] = "AL";
    State["AK"] = "AK";
    State["AS"] = "AS";
    State["AZ"] = "AZ";
    State["AR"] = "AR";
    State["CA"] = "CA";
    State["CO"] = "CO";
    State["CT"] = "CT";
    State["DE"] = "DE";
    State["DC"] = "DC";
    State["FM"] = "FM";
    State["FL"] = "FL";
    State["GA"] = "GA";
    State["GU"] = "GU";
    State["HI"] = "HI";
    State["ID"] = "ID";
    State["IL"] = "IL";
    State["IN"] = "IN";
    State["IA"] = "IA";
    State["KS"] = "KS";
    State["KY"] = "KY";
    State["LA"] = "LA";
    State["ME"] = "ME";
    State["MH"] = "MH";
    State["MD"] = "MD";
    State["MA"] = "MA";
    State["MI"] = "MI";
    State["MN"] = "MN";
    State["MS"] = "MS";
    State["MO"] = "MO";
    State["MT"] = "MT";
    State["NE"] = "NE";
    State["NV"] = "NV";
    State["NH"] = "NH";
    State["NJ"] = "NJ";
    State["NM"] = "NM";
    State["NY"] = "NY";
    State["NC"] = "NC";
    State["ND"] = "ND";
    State["MP"] = "MP";
    State["OH"] = "OH";
    State["OK"] = "OK";
    State["OR"] = "OR";
    State["PW"] = "PW";
    State["PA"] = "PA";
    State["PR"] = "PR";
    State["RI"] = "RI";
    State["SC"] = "SC";
    State["SD"] = "SD";
    State["TN"] = "TN";
    State["TX"] = "TX";
    State["UM"] = "UM";
    State["UT"] = "UT";
    State["VT"] = "VT";
    State["VI"] = "VI";
    State["VA"] = "VA";
    State["WA"] = "WA";
    State["WV"] = "WV";
    State["WI"] = "WI";
    State["WY"] = "WY";
    State["AB"] = "AB";
    State["BC"] = "BC";
    State["MB"] = "MB";
    State["NB"] = "NB";
    State["NL"] = "NL";
    State["NT"] = "NT";
    State["NS"] = "NS";
    State["NU"] = "NU";
    State["ON"] = "ON";
    State["PE"] = "PE";
    State["QC"] = "QC";
    State["SK"] = "SK";
    State["YT"] = "YT";
    State["ENG"] = "ENG";
    State["NIR"] = "NIR";
    State["SCT"] = "SCT";
    State["WLS"] = "WLS";
    State["AE"] = "AE";
    State["AP"] = "AP";
    State["AA"] = "AA";
})(State = State || (State = {}));
export function isState(value) {
    return value === State.AL
        || value === State.AK
        || value === State.AS
        || value === State.AZ
        || value === State.AR
        || value === State.CA
        || value === State.CO
        || value === State.CT
        || value === State.DE
        || value === State.DC
        || value === State.FM
        || value === State.FL
        || value === State.GA
        || value === State.GU
        || value === State.HI
        || value === State.ID
        || value === State.IL
        || value === State.IN
        || value === State.IA
        || value === State.KS
        || value === State.KY
        || value === State.LA
        || value === State.ME
        || value === State.MH
        || value === State.MD
        || value === State.MA
        || value === State.MI
        || value === State.MN
        || value === State.MS
        || value === State.MO
        || value === State.MT
        || value === State.NE
        || value === State.NV
        || value === State.NH
        || value === State.NJ
        || value === State.NM
        || value === State.NY
        || value === State.NC
        || value === State.ND
        || value === State.MP
        || value === State.OH
        || value === State.OK
        || value === State.OR
        || value === State.PW
        || value === State.PA
        || value === State.PR
        || value === State.RI
        || value === State.SC
        || value === State.SD
        || value === State.TN
        || value === State.TX
        || value === State.UM
        || value === State.UT
        || value === State.VT
        || value === State.VI
        || value === State.VA
        || value === State.WA
        || value === State.WV
        || value === State.WI
        || value === State.WY
        || value === State.AB
        || value === State.BC
        || value === State.MB
        || value === State.NB
        || value === State.NL
        || value === State.NT
        || value === State.NS
        || value === State.NU
        || value === State.ON
        || value === State.PE
        || value === State.QC
        || value === State.SK
        || value === State.YT
        || value === State.ENG
        || value === State.NIR
        || value === State.SCT
        || value === State.WLS
        || value === State.AE
        || value === State.AP
        || value === State.AA;
}
export function isStateOrNull(value) {
    if (value === null) {
        return true;
    }
    return isState(value);
}
export var Country;
(function (Country) {
    Country["ABW"] = "ABW";
    Country["AFG"] = "AFG";
    Country["AGO"] = "AGO";
    Country["AIA"] = "AIA";
    Country["ALA"] = "ALA";
    Country["ALB"] = "ALB";
    Country["AND"] = "AND";
    Country["ARE"] = "ARE";
    Country["ARG"] = "ARG";
    Country["ARM"] = "ARM";
    Country["ASM"] = "ASM";
    Country["ATA"] = "ATA";
    Country["ATF"] = "ATF";
    Country["ATG"] = "ATG";
    Country["AUS"] = "AUS";
    Country["AUT"] = "AUT";
    Country["AZE"] = "AZE";
    Country["BDI"] = "BDI";
    Country["BEL"] = "BEL";
    Country["BEN"] = "BEN";
    Country["BES"] = "BES";
    Country["BFA"] = "BFA";
    Country["BGD"] = "BGD";
    Country["BGR"] = "BGR";
    Country["BHR"] = "BHR";
    Country["BHS"] = "BHS";
    Country["BIH"] = "BIH";
    Country["BLM"] = "BLM";
    Country["BLR"] = "BLR";
    Country["BLZ"] = "BLZ";
    Country["BMU"] = "BMU";
    Country["BOL"] = "BOL";
    Country["BRA"] = "BRA";
    Country["BRB"] = "BRB";
    Country["BRN"] = "BRN";
    Country["BTN"] = "BTN";
    Country["BVT"] = "BVT";
    Country["BWA"] = "BWA";
    Country["CAF"] = "CAF";
    Country["CAN"] = "CAN";
    Country["CCK"] = "CCK";
    Country["CHE"] = "CHE";
    Country["CHL"] = "CHL";
    Country["CHN"] = "CHN";
    Country["CIV"] = "CIV";
    Country["CMR"] = "CMR";
    Country["COD"] = "COD";
    Country["COG"] = "COG";
    Country["COK"] = "COK";
    Country["COL"] = "COL";
    Country["COM"] = "COM";
    Country["CPV"] = "CPV";
    Country["CRI"] = "CRI";
    Country["CUB"] = "CUB";
    Country["CUW"] = "CUW";
    Country["CXR"] = "CXR";
    Country["CYM"] = "CYM";
    Country["CYP"] = "CYP";
    Country["CZE"] = "CZE";
    Country["DEU"] = "DEU";
    Country["DJI"] = "DJI";
    Country["DMA"] = "DMA";
    Country["DNK"] = "DNK";
    Country["DOM"] = "DOM";
    Country["DZA"] = "DZA";
    Country["ECU"] = "ECU";
    Country["EGY"] = "EGY";
    Country["ERI"] = "ERI";
    Country["ESH"] = "ESH";
    Country["ESP"] = "ESP";
    Country["EST"] = "EST";
    Country["ETH"] = "ETH";
    Country["FIN"] = "FIN";
    Country["FJI"] = "FJI";
    Country["FLK"] = "FLK";
    Country["FRA"] = "FRA";
    Country["FRO"] = "FRO";
    Country["FSM"] = "FSM";
    Country["GAB"] = "GAB";
    Country["GBR"] = "GBR";
    Country["GEO"] = "GEO";
    Country["GGY"] = "GGY";
    Country["GHA"] = "GHA";
    Country["GIB"] = "GIB";
    Country["GIN"] = "GIN";
    Country["GLP"] = "GLP";
    Country["GMB"] = "GMB";
    Country["GNB"] = "GNB";
    Country["GNQ"] = "GNQ";
    Country["GRC"] = "GRC";
    Country["GRD"] = "GRD";
    Country["GRL"] = "GRL";
    Country["GTM"] = "GTM";
    Country["GUF"] = "GUF";
    Country["GUM"] = "GUM";
    Country["GUY"] = "GUY";
    Country["HKG"] = "HKG";
    Country["HMD"] = "HMD";
    Country["HND"] = "HND";
    Country["HRV"] = "HRV";
    Country["HTI"] = "HTI";
    Country["HUN"] = "HUN";
    Country["IDN"] = "IDN";
    Country["IMN"] = "IMN";
    Country["IND"] = "IND";
    Country["IOT"] = "IOT";
    Country["IRL"] = "IRL";
    Country["IRN"] = "IRN";
    Country["IRQ"] = "IRQ";
    Country["ISL"] = "ISL";
    Country["ISR"] = "ISR";
    Country["ITA"] = "ITA";
    Country["JAM"] = "JAM";
    Country["JEY"] = "JEY";
    Country["JOR"] = "JOR";
    Country["JPN"] = "JPN";
    Country["KAZ"] = "KAZ";
    Country["KEN"] = "KEN";
    Country["KGZ"] = "KGZ";
    Country["KHM"] = "KHM";
    Country["KIR"] = "KIR";
    Country["KNA"] = "KNA";
    Country["KOR"] = "KOR";
    Country["KWT"] = "KWT";
    Country["LAO"] = "LAO";
    Country["LBN"] = "LBN";
    Country["LBR"] = "LBR";
    Country["LBY"] = "LBY";
    Country["LCA"] = "LCA";
    Country["LIE"] = "LIE";
    Country["LKA"] = "LKA";
    Country["LSO"] = "LSO";
    Country["LTU"] = "LTU";
    Country["LUX"] = "LUX";
    Country["LVA"] = "LVA";
    Country["MAC"] = "MAC";
    Country["MAF"] = "MAF";
    Country["MAR"] = "MAR";
    Country["MCO"] = "MCO";
    Country["MDA"] = "MDA";
    Country["MDG"] = "MDG";
    Country["MDV"] = "MDV";
    Country["MEX"] = "MEX";
    Country["MHL"] = "MHL";
    Country["MKD"] = "MKD";
    Country["MLI"] = "MLI";
    Country["MLT"] = "MLT";
    Country["MMR"] = "MMR";
    Country["MNE"] = "MNE";
    Country["MNG"] = "MNG";
    Country["MNP"] = "MNP";
    Country["MOZ"] = "MOZ";
    Country["MRT"] = "MRT";
    Country["MSR"] = "MSR";
    Country["MTQ"] = "MTQ";
    Country["MUS"] = "MUS";
    Country["MWI"] = "MWI";
    Country["MYS"] = "MYS";
    Country["MYT"] = "MYT";
    Country["NAM"] = "NAM";
    Country["NCL"] = "NCL";
    Country["NER"] = "NER";
    Country["NFK"] = "NFK";
    Country["NGA"] = "NGA";
    Country["NIC"] = "NIC";
    Country["NIU"] = "NIU";
    Country["NLD"] = "NLD";
    Country["NOR"] = "NOR";
    Country["NPL"] = "NPL";
    Country["NRU"] = "NRU";
    Country["NZL"] = "NZL";
    Country["OMN"] = "OMN";
    Country["PAK"] = "PAK";
    Country["PAN"] = "PAN";
    Country["PCN"] = "PCN";
    Country["PER"] = "PER";
    Country["PHL"] = "PHL";
    Country["PLW"] = "PLW";
    Country["PNG"] = "PNG";
    Country["POL"] = "POL";
    Country["PRI"] = "PRI";
    Country["PRK"] = "PRK";
    Country["PRT"] = "PRT";
    Country["PRY"] = "PRY";
    Country["PSE"] = "PSE";
    Country["PYF"] = "PYF";
    Country["QAT"] = "QAT";
    Country["REU"] = "REU";
    Country["ROU"] = "ROU";
    Country["RUS"] = "RUS";
    Country["RWA"] = "RWA";
    Country["SAU"] = "SAU";
    Country["SDN"] = "SDN";
    Country["SEN"] = "SEN";
    Country["SGP"] = "SGP";
    Country["SGS"] = "SGS";
    Country["SHN"] = "SHN";
    Country["SJM"] = "SJM";
    Country["SLB"] = "SLB";
    Country["SLE"] = "SLE";
    Country["SLV"] = "SLV";
    Country["SMR"] = "SMR";
    Country["SOM"] = "SOM";
    Country["SPM"] = "SPM";
    Country["SRB"] = "SRB";
    Country["SSD"] = "SSD";
    Country["STP"] = "STP";
    Country["SUR"] = "SUR";
    Country["SVK"] = "SVK";
    Country["SVN"] = "SVN";
    Country["SWE"] = "SWE";
    Country["SWZ"] = "SWZ";
    Country["SXM"] = "SXM";
    Country["SYC"] = "SYC";
    Country["SYR"] = "SYR";
    Country["TCA"] = "TCA";
    Country["TCD"] = "TCD";
    Country["TGO"] = "TGO";
    Country["THA"] = "THA";
    Country["TJK"] = "TJK";
    Country["TKL"] = "TKL";
    Country["TKM"] = "TKM";
    Country["TLS"] = "TLS";
    Country["TON"] = "TON";
    Country["TTO"] = "TTO";
    Country["TUN"] = "TUN";
    Country["TUR"] = "TUR";
    Country["TUV"] = "TUV";
    Country["TWN"] = "TWN";
    Country["TZA"] = "TZA";
    Country["UGA"] = "UGA";
    Country["UKR"] = "UKR";
    Country["UMI"] = "UMI";
    Country["URY"] = "URY";
    Country["USA"] = "USA";
    Country["UZB"] = "UZB";
    Country["VAT"] = "VAT";
    Country["VCT"] = "VCT";
    Country["VEN"] = "VEN";
    Country["VGB"] = "VGB";
    Country["VIR"] = "VIR";
    Country["VNM"] = "VNM";
    Country["VUT"] = "VUT";
    Country["WLF"] = "WLF";
    Country["WSM"] = "WSM";
    Country["YEM"] = "YEM";
    Country["ZAF"] = "ZAF";
    Country["ZMB"] = "ZMB";
    Country["ZWE"] = "ZWE";
    Country["UN"] = "UN";
    Country["NT"] = "NT";
    Country["FOREIGN"] = "FOREIGN";
})(Country = Country || (Country = {}));
export function isCountry(value) {
    return value === Country.ABW
        || value === Country.AFG
        || value === Country.AGO
        || value === Country.AIA
        || value === Country.ALA
        || value === Country.ALB
        || value === Country.AND
        || value === Country.ARE
        || value === Country.ARG
        || value === Country.ARM
        || value === Country.ASM
        || value === Country.ATA
        || value === Country.ATF
        || value === Country.ATG
        || value === Country.AUS
        || value === Country.AUT
        || value === Country.AZE
        || value === Country.BDI
        || value === Country.BEL
        || value === Country.BEN
        || value === Country.BES
        || value === Country.BFA
        || value === Country.BGD
        || value === Country.BGR
        || value === Country.BHR
        || value === Country.BHS
        || value === Country.BIH
        || value === Country.BLM
        || value === Country.BLR
        || value === Country.BLZ
        || value === Country.BMU
        || value === Country.BOL
        || value === Country.BRA
        || value === Country.BRB
        || value === Country.BRN
        || value === Country.BTN
        || value === Country.BVT
        || value === Country.BWA
        || value === Country.CAF
        || value === Country.CAN
        || value === Country.CCK
        || value === Country.CHE
        || value === Country.CHL
        || value === Country.CHN
        || value === Country.CIV
        || value === Country.CMR
        || value === Country.COD
        || value === Country.COG
        || value === Country.COK
        || value === Country.COL
        || value === Country.COM
        || value === Country.CPV
        || value === Country.CRI
        || value === Country.CUB
        || value === Country.CUW
        || value === Country.CXR
        || value === Country.CYM
        || value === Country.CYP
        || value === Country.CZE
        || value === Country.DEU
        || value === Country.DJI
        || value === Country.DMA
        || value === Country.DNK
        || value === Country.DOM
        || value === Country.DZA
        || value === Country.ECU
        || value === Country.EGY
        || value === Country.ERI
        || value === Country.ESH
        || value === Country.ESP
        || value === Country.EST
        || value === Country.ETH
        || value === Country.FIN
        || value === Country.FJI
        || value === Country.FLK
        || value === Country.FRA
        || value === Country.FRO
        || value === Country.FSM
        || value === Country.GAB
        || value === Country.GBR
        || value === Country.GEO
        || value === Country.GGY
        || value === Country.GHA
        || value === Country.GIB
        || value === Country.GIN
        || value === Country.GLP
        || value === Country.GMB
        || value === Country.GNB
        || value === Country.GNQ
        || value === Country.GRC
        || value === Country.GRD
        || value === Country.GRL
        || value === Country.GTM
        || value === Country.GUF
        || value === Country.GUM
        || value === Country.GUY
        || value === Country.HKG
        || value === Country.HMD
        || value === Country.HND
        || value === Country.HRV
        || value === Country.HTI
        || value === Country.HUN
        || value === Country.IDN
        || value === Country.IMN
        || value === Country.IND
        || value === Country.IOT
        || value === Country.IRL
        || value === Country.IRN
        || value === Country.IRQ
        || value === Country.ISL
        || value === Country.ISR
        || value === Country.ITA
        || value === Country.JAM
        || value === Country.JEY
        || value === Country.JOR
        || value === Country.JPN
        || value === Country.KAZ
        || value === Country.KEN
        || value === Country.KGZ
        || value === Country.KHM
        || value === Country.KIR
        || value === Country.KNA
        || value === Country.KOR
        || value === Country.KWT
        || value === Country.LAO
        || value === Country.LBN
        || value === Country.LBR
        || value === Country.LBY
        || value === Country.LCA
        || value === Country.LIE
        || value === Country.LKA
        || value === Country.LSO
        || value === Country.LTU
        || value === Country.LUX
        || value === Country.LVA
        || value === Country.MAC
        || value === Country.MAF
        || value === Country.MAR
        || value === Country.MCO
        || value === Country.MDA
        || value === Country.MDG
        || value === Country.MDV
        || value === Country.MEX
        || value === Country.MHL
        || value === Country.MKD
        || value === Country.MLI
        || value === Country.MLT
        || value === Country.MMR
        || value === Country.MNE
        || value === Country.MNG
        || value === Country.MNP
        || value === Country.MOZ
        || value === Country.MRT
        || value === Country.MSR
        || value === Country.MTQ
        || value === Country.MUS
        || value === Country.MWI
        || value === Country.MYS
        || value === Country.MYT
        || value === Country.NAM
        || value === Country.NCL
        || value === Country.NER
        || value === Country.NFK
        || value === Country.NGA
        || value === Country.NIC
        || value === Country.NIU
        || value === Country.NLD
        || value === Country.NOR
        || value === Country.NPL
        || value === Country.NRU
        || value === Country.NZL
        || value === Country.OMN
        || value === Country.PAK
        || value === Country.PAN
        || value === Country.PCN
        || value === Country.PER
        || value === Country.PHL
        || value === Country.PLW
        || value === Country.PNG
        || value === Country.POL
        || value === Country.PRI
        || value === Country.PRK
        || value === Country.PRT
        || value === Country.PRY
        || value === Country.PSE
        || value === Country.PYF
        || value === Country.QAT
        || value === Country.REU
        || value === Country.ROU
        || value === Country.RUS
        || value === Country.RWA
        || value === Country.SAU
        || value === Country.SDN
        || value === Country.SEN
        || value === Country.SGP
        || value === Country.SGS
        || value === Country.SHN
        || value === Country.SJM
        || value === Country.SLB
        || value === Country.SLE
        || value === Country.SLV
        || value === Country.SMR
        || value === Country.SOM
        || value === Country.SPM
        || value === Country.SRB
        || value === Country.SSD
        || value === Country.STP
        || value === Country.SUR
        || value === Country.SVK
        || value === Country.SVN
        || value === Country.SWE
        || value === Country.SWZ
        || value === Country.SXM
        || value === Country.SYC
        || value === Country.SYR
        || value === Country.TCA
        || value === Country.TCD
        || value === Country.TGO
        || value === Country.THA
        || value === Country.TJK
        || value === Country.TKL
        || value === Country.TKM
        || value === Country.TLS
        || value === Country.TON
        || value === Country.TTO
        || value === Country.TUN
        || value === Country.TUR
        || value === Country.TUV
        || value === Country.TWN
        || value === Country.TZA
        || value === Country.UGA
        || value === Country.UKR
        || value === Country.UMI
        || value === Country.URY
        || value === Country.USA
        || value === Country.UZB
        || value === Country.VAT
        || value === Country.VCT
        || value === Country.VEN
        || value === Country.VGB
        || value === Country.VIR
        || value === Country.VNM
        || value === Country.VUT
        || value === Country.WLF
        || value === Country.WSM
        || value === Country.YEM
        || value === Country.ZAF
        || value === Country.ZMB
        || value === Country.ZWE
        || value === Country.UN
        || value === Country.NT
        || value === Country.FOREIGN;
}
export function isCountryOrNull(value) {
    if (value === null) {
        return true;
    }
    return isCountry(value);
}
export var Ethnicity;
(function (Ethnicity) {
    Ethnicity["ASIAN"] = "ASIAN";
    Ethnicity["EAST_ASIAN"] = "EAST_ASIAN";
    Ethnicity["CHINESE"] = "CHINESE";
    Ethnicity["JAPANESE"] = "JAPANESE";
    Ethnicity["KOREAN"] = "KOREAN";
    Ethnicity["SOUTH_ASIAN"] = "SOUTH_ASIAN";
    Ethnicity["INDIAN"] = "INDIAN";
    Ethnicity["VIETNAMESE"] = "VIETNAMESE";
    Ethnicity["THAI"] = "THAI";
    Ethnicity["FILIPINO"] = "FILIPINO";
    Ethnicity["PAKISTANI"] = "PAKISTANI";
    Ethnicity["WEST_ASIAN"] = "WEST_ASIAN";
    Ethnicity["ARAB"] = "ARAB";
    Ethnicity["ISRAELI"] = "ISRAELI";
    Ethnicity["WHITE"] = "WHITE";
    Ethnicity["NORTH"] = "NORTH";
    Ethnicity["SWEDISH"] = "SWEDISH";
    Ethnicity["NORWEGIAN"] = "NORWEGIAN";
    Ethnicity["EAST"] = "EAST";
    Ethnicity["POLISH"] = "POLISH";
    Ethnicity["RUSSIAN"] = "RUSSIAN";
    Ethnicity["WEST"] = "WEST";
    Ethnicity["GERMAN"] = "GERMAN";
    Ethnicity["FRENCH"] = "FRENCH";
    Ethnicity["IRISH"] = "IRISH";
    Ethnicity["ITALIAN"] = "ITALIAN";
    Ethnicity["GREEK"] = "GREEK";
    Ethnicity["PORTUGUESE"] = "PORTUGUESE";
    Ethnicity["SCOTTISH"] = "SCOTTISH";
    Ethnicity["HISPANIC"] = "HISPANIC";
    Ethnicity["MEXICAN"] = "MEXICAN";
    Ethnicity["PUERTO_RICAN"] = "PUERTO_RICAN";
    Ethnicity["CUBAN"] = "CUBAN";
    Ethnicity["DOMINICAN"] = "DOMINICAN";
    Ethnicity["SALVADORAN"] = "SALVADORAN";
    Ethnicity["SPANISH"] = "SPANISH";
    Ethnicity["BLACK"] = "BLACK";
    Ethnicity["AFRICAN"] = "AFRICAN";
    Ethnicity["PACIFIC"] = "PACIFIC";
    Ethnicity["HAWAIIAN"] = "HAWAIIAN";
    Ethnicity["NATIVE"] = "NATIVE";
    Ethnicity["EURO"] = "EURO";
    Ethnicity["JEWISH"] = "JEWISH";
})(Ethnicity = Ethnicity || (Ethnicity = {}));
export function isEthnicity(value) {
    return value === Ethnicity.ASIAN
        || value === Ethnicity.EAST_ASIAN
        || value === Ethnicity.CHINESE
        || value === Ethnicity.JAPANESE
        || value === Ethnicity.KOREAN
        || value === Ethnicity.SOUTH_ASIAN
        || value === Ethnicity.INDIAN
        || value === Ethnicity.VIETNAMESE
        || value === Ethnicity.THAI
        || value === Ethnicity.FILIPINO
        || value === Ethnicity.PAKISTANI
        || value === Ethnicity.WEST_ASIAN
        || value === Ethnicity.ARAB
        || value === Ethnicity.ISRAELI
        || value === Ethnicity.WHITE
        || value === Ethnicity.NORTH
        || value === Ethnicity.SWEDISH
        || value === Ethnicity.NORWEGIAN
        || value === Ethnicity.EAST
        || value === Ethnicity.POLISH
        || value === Ethnicity.RUSSIAN
        || value === Ethnicity.WEST
        || value === Ethnicity.GERMAN
        || value === Ethnicity.FRENCH
        || value === Ethnicity.IRISH
        || value === Ethnicity.ITALIAN
        || value === Ethnicity.GREEK
        || value === Ethnicity.PORTUGUESE
        || value === Ethnicity.SCOTTISH
        || value === Ethnicity.HISPANIC
        || value === Ethnicity.MEXICAN
        || value === Ethnicity.PUERTO_RICAN
        || value === Ethnicity.CUBAN
        || value === Ethnicity.DOMINICAN
        || value === Ethnicity.SALVADORAN
        || value === Ethnicity.SPANISH
        || value === Ethnicity.BLACK
        || value === Ethnicity.AFRICAN
        || value === Ethnicity.PACIFIC
        || value === Ethnicity.HAWAIIAN
        || value === Ethnicity.NATIVE
        || value === Ethnicity.EURO
        || value === Ethnicity.JEWISH;
}
export function isEthnicityOrNull(value) {
    if (value === null) {
        return true;
    }
    return isEthnicity(value);
}
export var BallotType;
(function (BallotType) {
    BallotType["PL"] = "PL";
    BallotType["AB"] = "AB";
    BallotType["DB"] = "DB";
    BallotType["PO"] = "PO";
    BallotType["PD"] = "PD";
    BallotType["MO"] = "MO";
    BallotType["MD"] = "MD";
    BallotType["NR"] = "NR";
})(BallotType = BallotType || (BallotType = {}));
export function isBallotType(value) {
    return value === BallotType.PL
        || value === BallotType.AB
        || value === BallotType.DB
        || value === BallotType.PO
        || value === BallotType.PD
        || value === BallotType.MO
        || value === BallotType.MD
        || value === BallotType.NR;
}
export function isBallotTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isBallotType(value);
}
export var Gender;
(function (Gender) {
    Gender["M"] = "M";
    Gender["F"] = "F";
    Gender["X"] = "X";
    Gender["U"] = "U";
})(Gender = Gender || (Gender = {}));
export function isGender(value) {
    return value === Gender.M
        || value === Gender.F
        || value === Gender.X
        || value === Gender.U;
}
export function isGenderOrNull(value) {
    if (value === null) {
        return true;
    }
    return isGender(value);
}
export var NameSuffix;
(function (NameSuffix) {
    NameSuffix["JR"] = "JR";
    NameSuffix["SR"] = "SR";
    NameSuffix["II"] = "II";
    NameSuffix["III"] = "III";
    NameSuffix["IV"] = "IV";
    NameSuffix["V"] = "V";
    NameSuffix["VI"] = "VI";
    NameSuffix["VII"] = "VII";
    NameSuffix["VIII"] = "VIII";
    NameSuffix["IX"] = "IX";
    NameSuffix["X"] = "X";
})(NameSuffix = NameSuffix || (NameSuffix = {}));
export function isNameSuffix(value) {
    return value === NameSuffix.JR
        || value === NameSuffix.SR
        || value === NameSuffix.II
        || value === NameSuffix.III
        || value === NameSuffix.IV
        || value === NameSuffix.V
        || value === NameSuffix.VI
        || value === NameSuffix.VII
        || value === NameSuffix.VIII
        || value === NameSuffix.IX
        || value === NameSuffix.X;
}
export function isNameSuffixOrNull(value) {
    if (value === null) {
        return true;
    }
    return isNameSuffix(value);
}
export var PreNominal;
(function (PreNominal) {
    PreNominal["MR"] = "MR";
    PreNominal["MSS"] = "MSS";
    PreNominal["MS"] = "MS";
    PreNominal["MRS"] = "MRS";
    PreNominal["MX"] = "MX";
    PreNominal["MME"] = "MME";
    PreNominal["MLLE"] = "MLLE";
    PreNominal["MSSR"] = "MSSR";
    PreNominal["DR"] = "DR";
    PreNominal["PROF"] = "PROF";
    PreNominal["HON"] = "HON";
    PreNominal["JUS"] = "JUS";
    PreNominal["JUD"] = "JUD";
    PreNominal["REV"] = "REV";
    PreNominal["FR"] = "FR";
    PreNominal["PR"] = "PR";
    PreNominal["BR"] = "BR";
    PreNominal["SIS"] = "SIS";
    PreNominal["PVT"] = "PVT";
    PreNominal["PFC"] = "PFC";
    PreNominal["CPL"] = "CPL";
    PreNominal["SGT"] = "SGT";
    PreNominal["SSG"] = "SSG";
    PreNominal["MSG"] = "MSG";
    PreNominal["SG1"] = "SG1";
    PreNominal["SGM"] = "SGM";
    PreNominal["WO1"] = "WO1";
    PreNominal["CW2"] = "CW2";
    PreNominal["CW3"] = "CW3";
    PreNominal["CW4"] = "CW4";
    PreNominal["CW5"] = "CW5";
    PreNominal["LT2"] = "LT2";
    PreNominal["LT1"] = "LT1";
    PreNominal["CPT"] = "CPT";
    PreNominal["MAJ"] = "MAJ";
    PreNominal["LTC"] = "LTC";
    PreNominal["COL"] = "COL";
    PreNominal["BG"] = "BG";
    PreNominal["MG"] = "MG";
    PreNominal["LTG"] = "LTG";
    PreNominal["GEN"] = "GEN";
    PreNominal["PV2"] = "PV2";
    PreNominal["SPC"] = "SPC";
    PreNominal["SFC"] = "SFC";
    PreNominal["CSM"] = "CSM";
    PreNominal["SMA"] = "SMA";
    PreNominal["GA"] = "GA";
    PreNominal["AB"] = "AB";
    PreNominal["AMN"] = "AMN";
    PreNominal["A1C"] = "A1C";
    PreNominal["SRA"] = "SRA";
    PreNominal["TSGT"] = "TSGT";
    PreNominal["SMS"] = "SMS";
    PreNominal["CMS"] = "CMS";
    PreNominal["CCM"] = "CCM";
    PreNominal["GOAF"] = "GOAF";
    PreNominal["SR"] = "SR";
    PreNominal["SA"] = "SA";
    PreNominal["SN"] = "SN";
    PreNominal["PO3"] = "PO3";
    PreNominal["PO2"] = "PO2";
    PreNominal["PO1"] = "PO1";
    PreNominal["CPO"] = "CPO";
    PreNominal["SCPO"] = "SCPO";
    PreNominal["MCPO"] = "MCPO";
    PreNominal["MCPOC"] = "MCPOC";
    PreNominal["FLTCM"] = "FLTCM";
    PreNominal["FORCM"] = "FORCM";
    PreNominal["ENS"] = "ENS";
    PreNominal["LTJG"] = "LTJG";
    PreNominal["LT"] = "LT";
    PreNominal["LCDR"] = "LCDR";
    PreNominal["CDR"] = "CDR";
    PreNominal["RDML"] = "RDML";
    PreNominal["RADM"] = "RADM";
    PreNominal["VADM"] = "VADM";
    PreNominal["ADM"] = "ADM";
    PreNominal["FADM"] = "FADM";
    PreNominal["LCPL"] = "LCPL";
    PreNominal["GYSGT"] = "GYSGT";
    PreNominal["MGYSGT"] = "MGYSGT";
    PreNominal["SMMC"] = "SMMC";
})(PreNominal = PreNominal || (PreNominal = {}));
export function isPreNominal(value) {
    return value === PreNominal.MR
        || value === PreNominal.MSS
        || value === PreNominal.MS
        || value === PreNominal.MRS
        || value === PreNominal.MX
        || value === PreNominal.MME
        || value === PreNominal.MLLE
        || value === PreNominal.MSSR
        || value === PreNominal.DR
        || value === PreNominal.PROF
        || value === PreNominal.HON
        || value === PreNominal.JUS
        || value === PreNominal.JUD
        || value === PreNominal.REV
        || value === PreNominal.FR
        || value === PreNominal.PR
        || value === PreNominal.BR
        || value === PreNominal.SIS
        || value === PreNominal.PVT
        || value === PreNominal.PFC
        || value === PreNominal.CPL
        || value === PreNominal.SGT
        || value === PreNominal.SSG
        || value === PreNominal.MSG
        || value === PreNominal.SG1
        || value === PreNominal.SGM
        || value === PreNominal.WO1
        || value === PreNominal.CW2
        || value === PreNominal.CW3
        || value === PreNominal.CW4
        || value === PreNominal.CW5
        || value === PreNominal.LT2
        || value === PreNominal.LT1
        || value === PreNominal.CPT
        || value === PreNominal.MAJ
        || value === PreNominal.LTC
        || value === PreNominal.COL
        || value === PreNominal.BG
        || value === PreNominal.MG
        || value === PreNominal.LTG
        || value === PreNominal.GEN
        || value === PreNominal.PV2
        || value === PreNominal.SPC
        || value === PreNominal.SFC
        || value === PreNominal.CSM
        || value === PreNominal.SMA
        || value === PreNominal.GA
        || value === PreNominal.AB
        || value === PreNominal.AMN
        || value === PreNominal.A1C
        || value === PreNominal.SRA
        || value === PreNominal.TSGT
        || value === PreNominal.SMS
        || value === PreNominal.CMS
        || value === PreNominal.CCM
        || value === PreNominal.GOAF
        || value === PreNominal.SR
        || value === PreNominal.SA
        || value === PreNominal.SN
        || value === PreNominal.PO3
        || value === PreNominal.PO2
        || value === PreNominal.PO1
        || value === PreNominal.CPO
        || value === PreNominal.SCPO
        || value === PreNominal.MCPO
        || value === PreNominal.MCPOC
        || value === PreNominal.FLTCM
        || value === PreNominal.FORCM
        || value === PreNominal.ENS
        || value === PreNominal.LTJG
        || value === PreNominal.LT
        || value === PreNominal.LCDR
        || value === PreNominal.CDR
        || value === PreNominal.RDML
        || value === PreNominal.RADM
        || value === PreNominal.VADM
        || value === PreNominal.ADM
        || value === PreNominal.FADM
        || value === PreNominal.LCPL
        || value === PreNominal.GYSGT
        || value === PreNominal.MGYSGT
        || value === PreNominal.SMMC;
}
export function isPreNominalOrNull(value) {
    if (value === null) {
        return true;
    }
    return isPreNominal(value);
}
export var PostNominal;
(function (PostNominal) {
    PostNominal["ESQ"] = "ESQ";
    PostNominal["PC"] = "PC";
    PostNominal["QC"] = "QC";
    PostNominal["CL"] = "CL";
    PostNominal["SCL"] = "SCL";
    PostNominal["CLU"] = "CLU";
    PostNominal["CHFC"] = "CHFC";
    PostNominal["CFP"] = "CFP";
    PostNominal["CPA"] = "CPA";
    PostNominal["BA"] = "BA";
    PostNominal["BS"] = "BS";
    PostNominal["LLB"] = "LLB";
    PostNominal["BCL"] = "BCL";
    PostNominal["BENG"] = "BENG";
    PostNominal["BED"] = "BED";
    PostNominal["LLM"] = "LLM";
    PostNominal["MA"] = "MA";
    PostNominal["MFA"] = "MFA";
    PostNominal["MS"] = "MS";
    PostNominal["MBA"] = "MBA";
    PostNominal["MD"] = "MD";
    PostNominal["MPHL"] = "MPHL";
    PostNominal["PHD"] = "PHD";
    PostNominal["JD"] = "JD";
    PostNominal["LLD"] = "LLD";
    PostNominal["DO"] = "DO";
    PostNominal["DC"] = "DC";
})(PostNominal = PostNominal || (PostNominal = {}));
export function isPostNominal(value) {
    return value === PostNominal.ESQ
        || value === PostNominal.PC
        || value === PostNominal.QC
        || value === PostNominal.CL
        || value === PostNominal.SCL
        || value === PostNominal.CLU
        || value === PostNominal.CHFC
        || value === PostNominal.CFP
        || value === PostNominal.CPA
        || value === PostNominal.BA
        || value === PostNominal.BS
        || value === PostNominal.LLB
        || value === PostNominal.BCL
        || value === PostNominal.BENG
        || value === PostNominal.BED
        || value === PostNominal.LLM
        || value === PostNominal.MA
        || value === PostNominal.MFA
        || value === PostNominal.MS
        || value === PostNominal.MBA
        || value === PostNominal.MD
        || value === PostNominal.MPHL
        || value === PostNominal.PHD
        || value === PostNominal.JD
        || value === PostNominal.LLD
        || value === PostNominal.DO
        || value === PostNominal.DC;
}
export function isPostNominalOrNull(value) {
    if (value === null) {
        return true;
    }
    return isPostNominal(value);
}
export var ResidenceUseType;
(function (ResidenceUseType) {
    ResidenceUseType["FAM"] = "FAM";
    ResidenceUseType["MULT"] = "MULT";
    ResidenceUseType["SMALL"] = "SMALL";
    ResidenceUseType["BIG"] = "BIG";
    ResidenceUseType["SRO"] = "SRO";
    ResidenceUseType["EDU"] = "EDU";
    ResidenceUseType["JAIL"] = "JAIL";
    ResidenceUseType["MED"] = "MED";
})(ResidenceUseType = ResidenceUseType || (ResidenceUseType = {}));
export function isResidenceUseType(value) {
    return value === ResidenceUseType.FAM
        || value === ResidenceUseType.MULT
        || value === ResidenceUseType.SMALL
        || value === ResidenceUseType.BIG
        || value === ResidenceUseType.SRO
        || value === ResidenceUseType.EDU
        || value === ResidenceUseType.JAIL
        || value === ResidenceUseType.MED;
}
export function isResidenceUseTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isResidenceUseType(value);
}
export var CommercialUseType;
(function (CommercialUseType) {
    CommercialUseType["OFFICE"] = "OFFICE";
    CommercialUseType["RETAIL"] = "RETAIL";
    CommercialUseType["GOV"] = "GOV";
    CommercialUseType["IND"] = "IND";
    CommercialUseType["INST"] = "INST";
    CommercialUseType["AGR"] = "AGR";
    CommercialUseType["MISC"] = "MISC";
})(CommercialUseType = CommercialUseType || (CommercialUseType = {}));
export function isCommercialUseType(value) {
    return value === CommercialUseType.OFFICE
        || value === CommercialUseType.RETAIL
        || value === CommercialUseType.GOV
        || value === CommercialUseType.IND
        || value === CommercialUseType.INST
        || value === CommercialUseType.AGR
        || value === CommercialUseType.MISC;
}
export function isCommercialUseTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isCommercialUseType(value);
}
export var AccuracyType;
(function (AccuracyType) {
    AccuracyType["ROOFTOP"] = "ROOFTOP";
    AccuracyType["POINT"] = "POINT";
    AccuracyType["INTERPOLATION"] = "INTERPOLATION";
    AccuracyType["NEAREST"] = "NEAREST";
    AccuracyType["INTERSECTION"] = "INTERSECTION";
    AccuracyType["STREET"] = "STREET";
    AccuracyType["PLACE"] = "PLACE";
    AccuracyType["COUNTY"] = "COUNTY";
    AccuracyType["STATE"] = "STATE";
    AccuracyType["NEAREST_PRECINCT_BOUNDS"] = "NEAREST_PRECINCT_BOUNDS";
})(AccuracyType = AccuracyType || (AccuracyType = {}));
export function isAccuracyType(value) {
    return value === AccuracyType.ROOFTOP
        || value === AccuracyType.POINT
        || value === AccuracyType.INTERPOLATION
        || value === AccuracyType.NEAREST
        || value === AccuracyType.INTERSECTION
        || value === AccuracyType.STREET
        || value === AccuracyType.PLACE
        || value === AccuracyType.COUNTY
        || value === AccuracyType.STATE
        || value === AccuracyType.NEAREST_PRECINCT_BOUNDS;
}
export function isAccuracyTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isAccuracyType(value);
}
export var TurfType;
(function (TurfType) {
    TurfType["ADMIN"] = "ADMIN";
    TurfType["LEGIS"] = "LEGIS";
    TurfType["LOCAL"] = "LOCAL";
    TurfType["POSTAL"] = "POSTAL";
    TurfType["STAT"] = "STAT";
    TurfType["CUSTOM"] = "CUSTOM";
})(TurfType = TurfType || (TurfType = {}));
export function isTurfType(value) {
    return value === TurfType.ADMIN
        || value === TurfType.LEGIS
        || value === TurfType.LOCAL
        || value === TurfType.POSTAL
        || value === TurfType.STAT
        || value === TurfType.CUSTOM;
}
export function isTurfTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isTurfType(value);
}
export var PhoneSystem;
(function (PhoneSystem) {
    PhoneSystem["CELL"] = "CELL";
    PhoneSystem["LAND"] = "LAND";
    PhoneSystem["FAX"] = "FAX";
    PhoneSystem["VOIP"] = "VOIP";
    PhoneSystem["TOLLFREE"] = "TOLLFREE";
    PhoneSystem["OTHER"] = "OTHER";
})(PhoneSystem = PhoneSystem || (PhoneSystem = {}));
export function isPhoneSystem(value) {
    return value === PhoneSystem.CELL
        || value === PhoneSystem.LAND
        || value === PhoneSystem.FAX
        || value === PhoneSystem.VOIP
        || value === PhoneSystem.TOLLFREE
        || value === PhoneSystem.OTHER;
}
export function isPhoneSystemOrNull(value) {
    if (value === null) {
        return true;
    }
    return isPhoneSystem(value);
}
export var PhoneType;
(function (PhoneType) {
    PhoneType["HOME"] = "HOME";
    PhoneType["PERS"] = "PERS";
    PhoneType["WORK"] = "WORK";
    PhoneType["OTHER"] = "OTHER";
})(PhoneType = PhoneType || (PhoneType = {}));
export function isPhoneType(value) {
    return value === PhoneType.HOME
        || value === PhoneType.PERS
        || value === PhoneType.WORK
        || value === PhoneType.OTHER;
}
export function isPhoneTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isPhoneType(value);
}
export var AddressType;
(function (AddressType) {
    AddressType["RENT"] = "RENT";
    AddressType["CONT"] = "CONT";
    AddressType["SUB"] = "SUB";
    AddressType["BMR"] = "BMR";
    AddressType["OWN"] = "OWN";
    AddressType["LOWN"] = "LOWN";
    AddressType["RES"] = "RES";
    AddressType["MAIL"] = "MAIL";
    AddressType["WORK"] = "WORK";
    AddressType["INV"] = "INV";
    AddressType["OTHER"] = "OTHER";
})(AddressType = AddressType || (AddressType = {}));
export function isAddressType(value) {
    return value === AddressType.RENT
        || value === AddressType.CONT
        || value === AddressType.SUB
        || value === AddressType.BMR
        || value === AddressType.OWN
        || value === AddressType.LOWN
        || value === AddressType.RES
        || value === AddressType.MAIL
        || value === AddressType.WORK
        || value === AddressType.INV
        || value === AddressType.OTHER;
}
export function isAddressTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isAddressType(value);
}
export var ElectionType;
(function (ElectionType) {
    ElectionType["PRIMARY"] = "PRIMARY";
    ElectionType["GENERAL"] = "GENERAL";
    ElectionType["SPECIAL"] = "SPECIAL";
    ElectionType["LOCAL"] = "LOCAL";
})(ElectionType = ElectionType || (ElectionType = {}));
export function isElectionType(value) {
    return value === ElectionType.PRIMARY
        || value === ElectionType.GENERAL
        || value === ElectionType.SPECIAL
        || value === ElectionType.LOCAL;
}
export function isElectionTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isElectionType(value);
}
export var Education;
(function (Education) {
    Education["MS"] = "MS";
    Education["GED"] = "GED";
    Education["HS"] = "HS";
    Education["VOC"] = "VOC";
    Education["ASS"] = "ASS";
    Education["BACH"] = "BACH";
    Education["GRAD"] = "GRAD";
    Education["DOC"] = "DOC";
})(Education = Education || (Education = {}));
export function isEducation(value) {
    return value === Education.MS
        || value === Education.GED
        || value === Education.HS
        || value === Education.VOC
        || value === Education.ASS
        || value === Education.BACH
        || value === Education.GRAD
        || value === Education.DOC;
}
export function isEducationOrNull(value) {
    if (value === null) {
        return true;
    }
    return isEducation(value);
}
export var Religion;
(function (Religion) {
    Religion["ATHEIST"] = "ATHEIST";
    Religion["SPIRITUAL"] = "SPIRITUAL";
    Religion["JEWISH"] = "JEWISH";
    Religion["MUSLIM"] = "MUSLIM";
    Religion["MORMAN"] = "MORMAN";
    Religion["DRUZE"] = "DRUZE";
    Religion["CHRISTIAN"] = "CHRISTIAN";
    Religion["CATHOLIC"] = "CATHOLIC";
    Religion["EVANGELICAL"] = "EVANGELICAL";
    Religion["EASTERN_ORTHODOX"] = "EASTERN_ORTHODOX";
    Religion["ROMAN_CATHOLIC"] = "ROMAN_CATHOLIC";
    Religion["PROTESTANT"] = "PROTESTANT";
    Religion["LUTHERAN"] = "LUTHERAN";
    Religion["CONFUCIAN"] = "CONFUCIAN";
    Religion["SHINTO"] = "SHINTO";
    Religion["TAOIST"] = "TAOIST";
    Religion["CHEONDO"] = "CHEONDO";
    Religion["HINDU"] = "HINDU";
    Religion["BUDDHIST"] = "BUDDHIST";
    Religion["JAIN"] = "JAIN";
    Religion["SIKH"] = "SIKH";
    Religion["VODUN"] = "VODUN";
    Religion["OTHER"] = "OTHER";
})(Religion = Religion || (Religion = {}));
export function isReligion(value) {
    return value === Religion.ATHEIST
        || value === Religion.SPIRITUAL
        || value === Religion.JEWISH
        || value === Religion.MUSLIM
        || value === Religion.MORMAN
        || value === Religion.DRUZE
        || value === Religion.CHRISTIAN
        || value === Religion.CATHOLIC
        || value === Religion.EVANGELICAL
        || value === Religion.EASTERN_ORTHODOX
        || value === Religion.ROMAN_CATHOLIC
        || value === Religion.PROTESTANT
        || value === Religion.LUTHERAN
        || value === Religion.CONFUCIAN
        || value === Religion.SHINTO
        || value === Religion.TAOIST
        || value === Religion.CHEONDO
        || value === Religion.HINDU
        || value === Religion.BUDDHIST
        || value === Religion.JAIN
        || value === Religion.SIKH
        || value === Religion.VODUN
        || value === Religion.OTHER;
}
export function isReligionOrNull(value) {
    if (value === null) {
        return true;
    }
    return isReligion(value);
}
export var AccountType;
(function (AccountType) {
    AccountType["VAN"] = "VAN";
    AccountType["CAT"] = "CAT";
    AccountType["TS"] = "TS";
    AccountType["PDI"] = "PDI";
    AccountType["NB"] = "NB";
    AccountType["FB"] = "FB";
    AccountType["TW"] = "TW";
    AccountType["LI"] = "LI";
    AccountType["UNK"] = "UNK";
})(AccountType = AccountType || (AccountType = {}));
export function isAccountType(value) {
    return value === AccountType.VAN
        || value === AccountType.CAT
        || value === AccountType.TS
        || value === AccountType.PDI
        || value === AccountType.NB
        || value === AccountType.FB
        || value === AccountType.TW
        || value === AccountType.LI
        || value === AccountType.UNK;
}
export function isAccountTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isAccountType(value);
}
export var ExperienceType;
(function (ExperienceType) {
    ExperienceType["FULL"] = "FULL";
    ExperienceType["PART"] = "PART";
    ExperienceType["CONT"] = "CONT";
    ExperienceType["VOL"] = "VOL";
    ExperienceType["SELF"] = "SELF";
    ExperienceType["FREE"] = "FREE";
    ExperienceType["APPR"] = "APPR";
    ExperienceType["SEAS"] = "SEAS";
    ExperienceType["UNK"] = "UNK";
})(ExperienceType = ExperienceType || (ExperienceType = {}));
export function isExperienceType(value) {
    return value === ExperienceType.FULL
        || value === ExperienceType.PART
        || value === ExperienceType.CONT
        || value === ExperienceType.VOL
        || value === ExperienceType.SELF
        || value === ExperienceType.FREE
        || value === ExperienceType.APPR
        || value === ExperienceType.SEAS
        || value === ExperienceType.UNK;
}
export function isExperienceTypeOrNull(value) {
    if (value === null) {
        return true;
    }
    return isExperienceType(value);
}
export var MilitaryStatus;
(function (MilitaryStatus) {
    MilitaryStatus["CIVILIAN"] = "CIVILIAN";
    MilitaryStatus["MILITARY"] = "MILITARY";
    MilitaryStatus["ACTIVE"] = "ACTIVE";
    MilitaryStatus["RESERVE"] = "RESERVE";
    MilitaryStatus["VETERAN"] = "VETERAN";
})(MilitaryStatus = MilitaryStatus || (MilitaryStatus = {}));
export function isMilitaryStatus(value) {
    return value === MilitaryStatus.CIVILIAN
        || value === MilitaryStatus.MILITARY
        || value === MilitaryStatus.ACTIVE
        || value === MilitaryStatus.RESERVE
        || value === MilitaryStatus.VETERAN;
}
export function isMilitaryStatusOrNull(value) {
    if (value === null) {
        return true;
    }
    return isMilitaryStatus(value);
}
export const ENUMS = {
    Party: Party,
    LanguageCode: LanguageCode,
    StreetType: StreetType,
    FacilityType: FacilityType,
    UnitAbbr: UnitAbbr,
    PersonalIdentifier: PersonalIdentifier,
    Directional: Directional,
    State: State,
    Country: Country,
    Ethnicity: Ethnicity,
    BallotType: BallotType,
    Gender: Gender,
    NameSuffix: NameSuffix,
    PreNominal: PreNominal,
    PostNominal: PostNominal,
    ResidenceUseType: ResidenceUseType,
    CommercialUseType: CommercialUseType,
    AccuracyType: AccuracyType,
    TurfType: TurfType,
    PhoneSystem: PhoneSystem,
    PhoneType: PhoneType,
    AddressType: AddressType,
    ElectionType: ElectionType,
    Education: Education,
    Religion: Religion,
    AccountType: AccountType,
    ExperienceType: ExperienceType,
    MilitaryStatus: MilitaryStatus,
};
//# sourceMappingURL=data:application/json;base64,