import * as helpers from './helpers.js';
export var ModelType;
(function (ModelType) {
    ModelType["METADATA"] = "Metadata";
    ModelType["ADDRESS"] = "Address";
    ModelType["TURF"] = "Turf";
    ModelType["EMAIL"] = "Email";
    ModelType["PHONE"] = "Phone";
    ModelType["PERSON_ADDRESS"] = "PersonAddress";
    ModelType["PERSON_PHONE"] = "PersonPhone";
    ModelType["ACCOUNT"] = "Account";
    ModelType["EXPERIENCE"] = "Experience";
    ModelType["CAMPAIGN"] = "Campaign";
    ModelType["CONTEST"] = "Contest";
    ModelType["ELECTION"] = "Election";
    ModelType["VOTE"] = "Vote";
    ModelType["RETURNS"] = "Returns";
    ModelType["SCORE"] = "Score";
    ModelType["PERSON"] = "Person";
})(ModelType = ModelType || (ModelType = {}));
export function isModelType(name) {
    return name === ModelType.METADATA || name === ModelType.ADDRESS || name === ModelType.TURF || name === ModelType.EMAIL || name === ModelType.PHONE || name === ModelType.PERSON_ADDRESS || name === ModelType.PERSON_PHONE || name === ModelType.ACCOUNT || name === ModelType.EXPERIENCE || name === ModelType.CAMPAIGN || name === ModelType.CONTEST || name === ModelType.ELECTION || name === ModelType.VOTE || name === ModelType.RETURNS || name === ModelType.SCORE || name === ModelType.PERSON || false;
}
export const ModelKeysLookup = {
    MetadataKeys: helpers.Metadata.keys(),
    AddressKeys: helpers.Address.keys(),
    TurfKeys: helpers.Turf.keys(),
    EmailKeys: helpers.Email.keys(),
    PhoneKeys: helpers.Phone.keys(),
    PersonAddressKeys: helpers.PersonAddress.keys(),
    PersonPhoneKeys: helpers.PersonPhone.keys(),
    AccountKeys: helpers.Account.keys(),
    ExperienceKeys: helpers.Experience.keys(),
    CampaignKeys: helpers.Campaign.keys(),
    ContestKeys: helpers.Contest.keys(),
    ElectionKeys: helpers.Election.keys(),
    VoteKeys: helpers.Vote.keys(),
    ReturnsKeys: helpers.Returns.keys(),
    ScoreKeys: helpers.Score.keys(),
    PersonKeys: helpers.Person.keys(),
};
export const ModelTypesLookup = {
    MetadataTypes: helpers.Metadata.types(),
    AddressTypes: helpers.Address.types(),
    TurfTypes: helpers.Turf.types(),
    EmailTypes: helpers.Email.types(),
    PhoneTypes: helpers.Phone.types(),
    PersonAddressTypes: helpers.PersonAddress.types(),
    PersonPhoneTypes: helpers.PersonPhone.types(),
    AccountTypes: helpers.Account.types(),
    ExperienceTypes: helpers.Experience.types(),
    CampaignTypes: helpers.Campaign.types(),
    ContestTypes: helpers.Contest.types(),
    ElectionTypes: helpers.Election.types(),
    VoteTypes: helpers.Vote.types(),
    ReturnsTypes: helpers.Returns.types(),
    ScoreTypes: helpers.Score.types(),
    PersonTypes: helpers.Person.types(),
};
export function diffMetadata(before, after) {
    const beforeDiff = before ? ({
        key: before.key,
        value: (before?.value !== undefined && before?.value !== after?.value) ? before?.value : undefined,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        key: after.key,
        value: (after?.value !== undefined && before?.value !== after?.value && ++changes) ? after?.value : undefined,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.METADATA,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffAddress(before, after) {
    const beforeDiff = before ? ({
        id: before.id,
        createdAt: (before?.createdAt !== undefined && before?.createdAt !== after?.createdAt) ? before?.createdAt : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        deletedAt: (before?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt) ? before?.deletedAt : undefined,
        care: (before?.care !== undefined && before?.care !== after?.care) ? before?.care : undefined,
        facility: (before?.facility !== undefined && before?.facility !== after?.facility) ? before?.facility : undefined,
        facilityType: (before?.facilityType !== undefined && before?.facilityType !== after?.facilityType) ? before?.facilityType : undefined,
        pinNum: (before?.pinNum !== undefined && before?.pinNum !== after?.pinNum) ? before?.pinNum : undefined,
        pinType: (before?.pinType !== undefined && before?.pinType !== after?.pinType) ? before?.pinType : undefined,
        number: (before?.number !== undefined && before?.number !== after?.number) ? before?.number : undefined,
        streetPreDir: (before?.streetPreDir !== undefined && before?.streetPreDir !== after?.streetPreDir) ? before?.streetPreDir : undefined,
        streetName: (before?.streetName !== undefined && before?.streetName !== after?.streetName) ? before?.streetName : undefined,
        streetType: (before?.streetType !== undefined && before?.streetType !== after?.streetType) ? before?.streetType : undefined,
        streetPostDir: (before?.streetPostDir !== undefined && before?.streetPostDir !== after?.streetPostDir) ? before?.streetPostDir : undefined,
        unitAbbr: (before?.unitAbbr !== undefined && before?.unitAbbr !== after?.unitAbbr) ? before?.unitAbbr : undefined,
        unitNum: (before?.unitNum !== undefined && before?.unitNum !== after?.unitNum) ? before?.unitNum : undefined,
        city: (before?.city !== undefined && before?.city !== after?.city) ? before?.city : undefined,
        state: (before?.state !== undefined && before?.state !== after?.state) ? before?.state : undefined,
        zip: (before?.zip !== undefined && before?.zip !== after?.zip) ? before?.zip : undefined,
        zip4: (before?.zip4 !== undefined && before?.zip4 !== after?.zip4) ? before?.zip4 : undefined,
        country: (before?.country !== undefined && before?.country !== after?.country) ? before?.country : undefined,
        verifiedAt: (before?.verifiedAt !== undefined && before?.verifiedAt !== after?.verifiedAt) ? before?.verifiedAt : undefined,
        verification: (before?.verification !== undefined && before?.verification !== after?.verification) ? before?.verification : undefined,
        carrierRoute: (before?.carrierRoute !== undefined && before?.carrierRoute !== after?.carrierRoute) ? before?.carrierRoute : undefined,
        lineOfTravel: (before?.lineOfTravel !== undefined && before?.lineOfTravel !== after?.lineOfTravel) ? before?.lineOfTravel : undefined,
        deliveryPoint: (before?.deliveryPoint !== undefined && before?.deliveryPoint !== after?.deliveryPoint) ? before?.deliveryPoint : undefined,
        lat: (before?.lat !== undefined && before?.lat !== after?.lat) ? before?.lat : undefined,
        lng: (before?.lng !== undefined && before?.lng !== after?.lng) ? before?.lng : undefined,
        elv: (before?.elv !== undefined && before?.elv !== after?.elv) ? before?.elv : undefined,
        accuracyScore: (before?.accuracyScore !== undefined && before?.accuracyScore !== after?.accuracyScore) ? before?.accuracyScore : undefined,
        accuracyType: (before?.accuracyType !== undefined && before?.accuracyType !== after?.accuracyType) ? before?.accuracyType : undefined,
        legLat: (before?.legLat !== undefined && before?.legLat !== after?.legLat) ? before?.legLat : undefined,
        legLng: (before?.legLng !== undefined && before?.legLng !== after?.legLng) ? before?.legLng : undefined,
        owner: (before?.owner !== undefined && before?.owner !== after?.owner) ? before?.owner : undefined,
        value: (before?.value !== undefined && before?.value !== after?.value) ? before?.value : undefined,
        area: (before?.area !== undefined && before?.area !== after?.area) ? before?.area : undefined,
        yearBuilt: (before?.yearBuilt !== undefined && before?.yearBuilt !== after?.yearBuilt) ? before?.yearBuilt : undefined,
        residentialCode: (before?.residentialCode !== undefined && before?.residentialCode !== after?.residentialCode) ? before?.residentialCode : undefined,
        commercialCode: (before?.commercialCode !== undefined && before?.commercialCode !== after?.commercialCode) ? before?.commercialCode : undefined,
        assessorCode: (before?.assessorCode !== undefined && before?.assessorCode !== after?.assessorCode) ? before?.assessorCode : undefined,
        footprint: (before?.footprint !== undefined && before?.footprint !== after?.footprint) ? before?.footprint : undefined,
        stories: (before?.stories !== undefined && before?.stories !== after?.stories) ? before?.stories : undefined,
        doors: (before?.doors !== undefined && before?.doors !== after?.doors) ? before?.doors : undefined,
        units: (before?.units !== undefined && before?.units !== after?.units) ? before?.units : undefined,
        squareFeet: (before?.squareFeet !== undefined && before?.squareFeet !== after?.squareFeet) ? before?.squareFeet : undefined,
        floors: (before?.floors !== undefined && before?.floors !== after?.floors) ? before?.floors : undefined,
        rooms: (before?.rooms !== undefined && before?.rooms !== after?.rooms) ? before?.rooms : undefined,
        bedrooms: (before?.bedrooms !== undefined && before?.bedrooms !== after?.bedrooms) ? before?.bedrooms : undefined,
        bathrooms: (before?.bathrooms !== undefined && before?.bathrooms !== after?.bathrooms) ? before?.bathrooms : undefined,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        id: after.id,
        createdAt: (after?.createdAt !== undefined && before?.createdAt !== after?.createdAt && ++changes) ? after?.createdAt : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        deletedAt: (after?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt && ++changes) ? after?.deletedAt : undefined,
        care: (after?.care !== undefined && before?.care !== after?.care && ++changes) ? after?.care : undefined,
        facility: (after?.facility !== undefined && before?.facility !== after?.facility && ++changes) ? after?.facility : undefined,
        facilityType: (after?.facilityType !== undefined && before?.facilityType !== after?.facilityType && ++changes) ? after?.facilityType : undefined,
        pinNum: (after?.pinNum !== undefined && before?.pinNum !== after?.pinNum && ++changes) ? after?.pinNum : undefined,
        pinType: (after?.pinType !== undefined && before?.pinType !== after?.pinType && ++changes) ? after?.pinType : undefined,
        number: (after?.number !== undefined && before?.number !== after?.number && ++changes) ? after?.number : undefined,
        streetPreDir: (after?.streetPreDir !== undefined && before?.streetPreDir !== after?.streetPreDir && ++changes) ? after?.streetPreDir : undefined,
        streetName: (after?.streetName !== undefined && before?.streetName !== after?.streetName && ++changes) ? after?.streetName : undefined,
        streetType: (after?.streetType !== undefined && before?.streetType !== after?.streetType && ++changes) ? after?.streetType : undefined,
        streetPostDir: (after?.streetPostDir !== undefined && before?.streetPostDir !== after?.streetPostDir && ++changes) ? after?.streetPostDir : undefined,
        unitAbbr: (after?.unitAbbr !== undefined && before?.unitAbbr !== after?.unitAbbr && ++changes) ? after?.unitAbbr : undefined,
        unitNum: (after?.unitNum !== undefined && before?.unitNum !== after?.unitNum && ++changes) ? after?.unitNum : undefined,
        city: (after?.city !== undefined && before?.city !== after?.city && ++changes) ? after?.city : undefined,
        state: (after?.state !== undefined && before?.state !== after?.state && ++changes) ? after?.state : undefined,
        zip: (after?.zip !== undefined && before?.zip !== after?.zip && ++changes) ? after?.zip : undefined,
        zip4: (after?.zip4 !== undefined && before?.zip4 !== after?.zip4 && ++changes) ? after?.zip4 : undefined,
        country: (after?.country !== undefined && before?.country !== after?.country && ++changes) ? after?.country : undefined,
        verifiedAt: (after?.verifiedAt !== undefined && before?.verifiedAt !== after?.verifiedAt && ++changes) ? after?.verifiedAt : undefined,
        verification: (after?.verification !== undefined && before?.verification !== after?.verification && ++changes) ? after?.verification : undefined,
        carrierRoute: (after?.carrierRoute !== undefined && before?.carrierRoute !== after?.carrierRoute && ++changes) ? after?.carrierRoute : undefined,
        lineOfTravel: (after?.lineOfTravel !== undefined && before?.lineOfTravel !== after?.lineOfTravel && ++changes) ? after?.lineOfTravel : undefined,
        deliveryPoint: (after?.deliveryPoint !== undefined && before?.deliveryPoint !== after?.deliveryPoint && ++changes) ? after?.deliveryPoint : undefined,
        lat: (after?.lat !== undefined && before?.lat !== after?.lat && ++changes) ? after?.lat : undefined,
        lng: (after?.lng !== undefined && before?.lng !== after?.lng && ++changes) ? after?.lng : undefined,
        elv: (after?.elv !== undefined && before?.elv !== after?.elv && ++changes) ? after?.elv : undefined,
        accuracyScore: (after?.accuracyScore !== undefined && before?.accuracyScore !== after?.accuracyScore && ++changes) ? after?.accuracyScore : undefined,
        accuracyType: (after?.accuracyType !== undefined && before?.accuracyType !== after?.accuracyType && ++changes) ? after?.accuracyType : undefined,
        legLat: (after?.legLat !== undefined && before?.legLat !== after?.legLat && ++changes) ? after?.legLat : undefined,
        legLng: (after?.legLng !== undefined && before?.legLng !== after?.legLng && ++changes) ? after?.legLng : undefined,
        owner: (after?.owner !== undefined && before?.owner !== after?.owner && ++changes) ? after?.owner : undefined,
        value: (after?.value !== undefined && before?.value !== after?.value && ++changes) ? after?.value : undefined,
        area: (after?.area !== undefined && before?.area !== after?.area && ++changes) ? after?.area : undefined,
        yearBuilt: (after?.yearBuilt !== undefined && before?.yearBuilt !== after?.yearBuilt && ++changes) ? after?.yearBuilt : undefined,
        residentialCode: (after?.residentialCode !== undefined && before?.residentialCode !== after?.residentialCode && ++changes) ? after?.residentialCode : undefined,
        commercialCode: (after?.commercialCode !== undefined && before?.commercialCode !== after?.commercialCode && ++changes) ? after?.commercialCode : undefined,
        assessorCode: (after?.assessorCode !== undefined && before?.assessorCode !== after?.assessorCode && ++changes) ? after?.assessorCode : undefined,
        footprint: (after?.footprint !== undefined && before?.footprint !== after?.footprint && ++changes) ? after?.footprint : undefined,
        stories: (after?.stories !== undefined && before?.stories !== after?.stories && ++changes) ? after?.stories : undefined,
        doors: (after?.doors !== undefined && before?.doors !== after?.doors && ++changes) ? after?.doors : undefined,
        units: (after?.units !== undefined && before?.units !== after?.units && ++changes) ? after?.units : undefined,
        squareFeet: (after?.squareFeet !== undefined && before?.squareFeet !== after?.squareFeet && ++changes) ? after?.squareFeet : undefined,
        floors: (after?.floors !== undefined && before?.floors !== after?.floors && ++changes) ? after?.floors : undefined,
        rooms: (after?.rooms !== undefined && before?.rooms !== after?.rooms && ++changes) ? after?.rooms : undefined,
        bedrooms: (after?.bedrooms !== undefined && before?.bedrooms !== after?.bedrooms && ++changes) ? after?.bedrooms : undefined,
        bathrooms: (after?.bathrooms !== undefined && before?.bathrooms !== after?.bathrooms && ++changes) ? after?.bathrooms : undefined,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.ADDRESS,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffTurf(before, after) {
    const beforeDiff = before ? ({
        id: before.id,
        shape: (before?.shape !== undefined && before?.shape !== after?.shape) ? before?.shape : undefined,
        createdAt: (before?.createdAt !== undefined && before?.createdAt !== after?.createdAt) ? before?.createdAt : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        deletedAt: (before?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt) ? before?.deletedAt : undefined,
        type: (before?.type !== undefined && before?.type !== after?.type) ? before?.type : undefined,
        state: (before?.state !== undefined && before?.state !== after?.state) ? before?.state : undefined,
        county: (before?.county !== undefined && before?.county !== after?.county) ? before?.county : undefined,
        group: (before?.group !== undefined && before?.group !== after?.group) ? before?.group : undefined,
        name: (before?.name !== undefined && before?.name !== after?.name) ? before?.name : undefined,
        lat: (before?.lat !== undefined && before?.lat !== after?.lat) ? before?.lat : undefined,
        lng: (before?.lng !== undefined && before?.lng !== after?.lng) ? before?.lng : undefined,
        latMin: (before?.latMin !== undefined && before?.latMin !== after?.latMin) ? before?.latMin : undefined,
        latMax: (before?.latMax !== undefined && before?.latMax !== after?.latMax) ? before?.latMax : undefined,
        lngMin: (before?.lngMin !== undefined && before?.lngMin !== after?.lngMin) ? before?.lngMin : undefined,
        lngMax: (before?.lngMax !== undefined && before?.lngMax !== after?.lngMax) ? before?.lngMax : undefined,
        area: (before?.area !== undefined && before?.area !== after?.area) ? before?.area : undefined,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        id: after.id,
        shape: (after?.shape !== undefined && before?.shape !== after?.shape && ++changes) ? after?.shape : undefined,
        createdAt: (after?.createdAt !== undefined && before?.createdAt !== after?.createdAt && ++changes) ? after?.createdAt : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        deletedAt: (after?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt && ++changes) ? after?.deletedAt : undefined,
        type: (after?.type !== undefined && before?.type !== after?.type && ++changes) ? after?.type : undefined,
        state: (after?.state !== undefined && before?.state !== after?.state && ++changes) ? after?.state : undefined,
        county: (after?.county !== undefined && before?.county !== after?.county && ++changes) ? after?.county : undefined,
        group: (after?.group !== undefined && before?.group !== after?.group && ++changes) ? after?.group : undefined,
        name: (after?.name !== undefined && before?.name !== after?.name && ++changes) ? after?.name : undefined,
        lat: (after?.lat !== undefined && before?.lat !== after?.lat && ++changes) ? after?.lat : undefined,
        lng: (after?.lng !== undefined && before?.lng !== after?.lng && ++changes) ? after?.lng : undefined,
        latMin: (after?.latMin !== undefined && before?.latMin !== after?.latMin && ++changes) ? after?.latMin : undefined,
        latMax: (after?.latMax !== undefined && before?.latMax !== after?.latMax && ++changes) ? after?.latMax : undefined,
        lngMin: (after?.lngMin !== undefined && before?.lngMin !== after?.lngMin && ++changes) ? after?.lngMin : undefined,
        lngMax: (after?.lngMax !== undefined && before?.lngMax !== after?.lngMax && ++changes) ? after?.lngMax : undefined,
        area: (after?.area !== undefined && before?.area !== after?.area && ++changes) ? after?.area : undefined,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.TURF,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffEmail(before, after) {
    const beforeDiff = before ? ({
        email: before.email,
        createdAt: (before?.createdAt !== undefined && before?.createdAt !== after?.createdAt) ? before?.createdAt : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        deletedAt: (before?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt) ? before?.deletedAt : undefined,
        deliverable: (before?.deliverable !== undefined && before?.deliverable !== after?.deliverable) ? before?.deliverable : undefined,
        personId: before.personId,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        email: after.email,
        createdAt: (after?.createdAt !== undefined && before?.createdAt !== after?.createdAt && ++changes) ? after?.createdAt : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        deletedAt: (after?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt && ++changes) ? after?.deletedAt : undefined,
        deliverable: (after?.deliverable !== undefined && before?.deliverable !== after?.deliverable && ++changes) ? after?.deliverable : undefined,
        personId: after.personId,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.EMAIL,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffPhone(before, after) {
    const beforeDiff = before ? ({
        number: before.number,
        createdAt: (before?.createdAt !== undefined && before?.createdAt !== after?.createdAt) ? before?.createdAt : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        deletedAt: (before?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt) ? before?.deletedAt : undefined,
        system: (before?.system !== undefined && before?.system !== after?.system) ? before?.system : undefined,
        sms: (before?.sms !== undefined && before?.sms !== after?.sms) ? before?.sms : undefined,
        voice: (before?.voice !== undefined && before?.voice !== after?.voice) ? before?.voice : undefined,
        ndnc: (before?.ndnc !== undefined && before?.ndnc !== after?.ndnc) ? before?.ndnc : undefined,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        number: after.number,
        createdAt: (after?.createdAt !== undefined && before?.createdAt !== after?.createdAt && ++changes) ? after?.createdAt : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        deletedAt: (after?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt && ++changes) ? after?.deletedAt : undefined,
        system: (after?.system !== undefined && before?.system !== after?.system && ++changes) ? after?.system : undefined,
        sms: (after?.sms !== undefined && before?.sms !== after?.sms && ++changes) ? after?.sms : undefined,
        voice: (after?.voice !== undefined && before?.voice !== after?.voice && ++changes) ? after?.voice : undefined,
        ndnc: (after?.ndnc !== undefined && before?.ndnc !== after?.ndnc && ++changes) ? after?.ndnc : undefined,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.PHONE,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffPersonAddress(before, after) {
    const beforeDiff = before ? ({
        createdAt: (before?.createdAt !== undefined && before?.createdAt !== after?.createdAt) ? before?.createdAt : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        deletedAt: (before?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt) ? before?.deletedAt : undefined,
        ncoa: (before?.ncoa !== undefined && before?.ncoa !== after?.ncoa) ? before?.ncoa : undefined,
        type: (before?.type !== undefined && before?.type !== after?.type) ? before?.type : undefined,
        personId: before.personId,
        addressId: before.addressId,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        createdAt: (after?.createdAt !== undefined && before?.createdAt !== after?.createdAt && ++changes) ? after?.createdAt : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        deletedAt: (after?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt && ++changes) ? after?.deletedAt : undefined,
        ncoa: (after?.ncoa !== undefined && before?.ncoa !== after?.ncoa && ++changes) ? after?.ncoa : undefined,
        type: (after?.type !== undefined && before?.type !== after?.type && ++changes) ? after?.type : undefined,
        personId: after.personId,
        addressId: after.addressId,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.PERSON_ADDRESS,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffPersonPhone(before, after) {
    const beforeDiff = before ? ({
        createdAt: (before?.createdAt !== undefined && before?.createdAt !== after?.createdAt) ? before?.createdAt : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        deletedAt: (before?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt) ? before?.deletedAt : undefined,
        type: (before?.type !== undefined && before?.type !== after?.type) ? before?.type : undefined,
        personId: before.personId,
        phoneId: before.phoneId,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        createdAt: (after?.createdAt !== undefined && before?.createdAt !== after?.createdAt && ++changes) ? after?.createdAt : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        deletedAt: (after?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt && ++changes) ? after?.deletedAt : undefined,
        type: (after?.type !== undefined && before?.type !== after?.type && ++changes) ? after?.type : undefined,
        personId: after.personId,
        phoneId: after.phoneId,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.PERSON_PHONE,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffAccount(before, after) {
    const beforeDiff = before ? ({
        accountType: before.accountType,
        accountId: before.accountId,
        createdAt: (before?.createdAt !== undefined && before?.createdAt !== after?.createdAt) ? before?.createdAt : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        deletedAt: (before?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt) ? before?.deletedAt : undefined,
        personId: before.personId,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        accountType: after.accountType,
        accountId: after.accountId,
        createdAt: (after?.createdAt !== undefined && before?.createdAt !== after?.createdAt && ++changes) ? after?.createdAt : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        deletedAt: (after?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt && ++changes) ? after?.deletedAt : undefined,
        personId: after.personId,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.ACCOUNT,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffExperience(before, after) {
    const beforeDiff = before ? ({
        type: before.type,
        employer: before.employer,
        role: before.role,
        startDate: (before?.startDate !== undefined && before?.startDate !== after?.startDate) ? before?.startDate : undefined,
        endDate: (before?.endDate !== undefined && before?.endDate !== after?.endDate) ? before?.endDate : undefined,
        createdAt: (before?.createdAt !== undefined && before?.createdAt !== after?.createdAt) ? before?.createdAt : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        deletedAt: (before?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt) ? before?.deletedAt : undefined,
        personId: before.personId,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        type: after.type,
        employer: after.employer,
        role: after.role,
        startDate: (after?.startDate !== undefined && before?.startDate !== after?.startDate && ++changes) ? after?.startDate : undefined,
        endDate: (after?.endDate !== undefined && before?.endDate !== after?.endDate && ++changes) ? after?.endDate : undefined,
        createdAt: (after?.createdAt !== undefined && before?.createdAt !== after?.createdAt && ++changes) ? after?.createdAt : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        deletedAt: (after?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt && ++changes) ? after?.deletedAt : undefined,
        personId: after.personId,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.EXPERIENCE,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffCampaign(before, after) {
    const beforeDiff = before ? ({
        id: before.id,
        name: (before?.name !== undefined && before?.name !== after?.name) ? before?.name : undefined,
        contestId: (before?.contestId !== undefined && before?.contestId !== after?.contestId) ? before?.contestId : undefined,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        id: after.id,
        name: (after?.name !== undefined && before?.name !== after?.name && ++changes) ? after?.name : undefined,
        contestId: (after?.contestId !== undefined && before?.contestId !== after?.contestId && ++changes) ? after?.contestId : undefined,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.CAMPAIGN,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffContest(before, after) {
    const beforeDiff = before ? ({
        id: before.id,
        name: (before?.name !== undefined && before?.name !== after?.name) ? before?.name : undefined,
        electionId: (before?.electionId !== undefined && before?.electionId !== after?.electionId) ? before?.electionId : undefined,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        id: after.id,
        name: (after?.name !== undefined && before?.name !== after?.name && ++changes) ? after?.name : undefined,
        electionId: (after?.electionId !== undefined && before?.electionId !== after?.electionId && ++changes) ? after?.electionId : undefined,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.CONTEST,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffElection(before, after) {
    const beforeDiff = before ? ({
        id: before.id,
        electionDate: (before?.electionDate !== undefined && before?.electionDate !== after?.electionDate) ? before?.electionDate : undefined,
        name: (before?.name !== undefined && before?.name !== after?.name) ? before?.name : undefined,
        type: (before?.type !== undefined && before?.type !== after?.type) ? before?.type : undefined,
        turf: (before?.turf !== undefined && before?.turf !== after?.turf) ? before?.turf : undefined,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        id: after.id,
        electionDate: (after?.electionDate !== undefined && before?.electionDate !== after?.electionDate && ++changes) ? after?.electionDate : undefined,
        name: (after?.name !== undefined && before?.name !== after?.name && ++changes) ? after?.name : undefined,
        type: (after?.type !== undefined && before?.type !== after?.type && ++changes) ? after?.type : undefined,
        turf: (after?.turf !== undefined && before?.turf !== after?.turf && ++changes) ? after?.turf : undefined,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.ELECTION,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffVote(before, after) {
    const beforeDiff = before ? ({
        method: (before?.method !== undefined && before?.method !== after?.method) ? before?.method : undefined,
        party: (before?.party !== undefined && before?.party !== after?.party) ? before?.party : undefined,
        issued: (before?.issued !== undefined && before?.issued !== after?.issued) ? before?.issued : undefined,
        returned: (before?.returned !== undefined && before?.returned !== after?.returned) ? before?.returned : undefined,
        counted: (before?.counted !== undefined && before?.counted !== after?.counted) ? before?.counted : undefined,
        personId: before.personId,
        electionId: before.electionId,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        method: (after?.method !== undefined && before?.method !== after?.method && ++changes) ? after?.method : undefined,
        party: (after?.party !== undefined && before?.party !== after?.party && ++changes) ? after?.party : undefined,
        issued: (after?.issued !== undefined && before?.issued !== after?.issued && ++changes) ? after?.issued : undefined,
        returned: (after?.returned !== undefined && before?.returned !== after?.returned && ++changes) ? after?.returned : undefined,
        counted: (after?.counted !== undefined && before?.counted !== after?.counted && ++changes) ? after?.counted : undefined,
        personId: after.personId,
        electionId: after.electionId,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.VOTE,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffReturns(before, after) {
    const beforeDiff = before ? ({
        party: before.party,
        rank: before.rank,
        tally: (before?.tally !== undefined && before?.tally !== after?.tally) ? before?.tally : undefined,
        contestId: before.contestId,
        turfId: before.turfId,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        party: after.party,
        rank: after.rank,
        tally: (after?.tally !== undefined && before?.tally !== after?.tally && ++changes) ? after?.tally : undefined,
        contestId: after.contestId,
        turfId: after.turfId,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.RETURNS,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffScore(before, after) {
    const beforeDiff = before ? ({
        name: before.name,
        value: (before?.value !== undefined && before?.value !== after?.value) ? before?.value : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        personId: before.personId,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        name: after.name,
        value: (after?.value !== undefined && before?.value !== after?.value && ++changes) ? after?.value : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        personId: after.personId,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.SCORE,
        before: beforeDiff,
        after: afterDiff,
    };
}
export function diffPerson(before, after) {
    const beforeDiff = before ? ({
        id: before.id,
        countyId: (before?.countyId !== undefined && before?.countyId !== after?.countyId) ? before?.countyId : undefined,
        affidavitNum: (before?.affidavitNum !== undefined && before?.affidavitNum !== after?.affidavitNum) ? before?.affidavitNum : undefined,
        precinct: (before?.precinct !== undefined && before?.precinct !== after?.precinct) ? before?.precinct : undefined,
        createdAt: (before?.createdAt !== undefined && before?.createdAt !== after?.createdAt) ? before?.createdAt : undefined,
        updatedAt: (before?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt) ? before?.updatedAt : undefined,
        deletedAt: (before?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt) ? before?.deletedAt : undefined,
        preNominal: (before?.preNominal !== undefined && before?.preNominal !== after?.preNominal) ? before?.preNominal : undefined,
        firstName: (before?.firstName !== undefined && before?.firstName !== after?.firstName) ? before?.firstName : undefined,
        middleName: (before?.middleName !== undefined && before?.middleName !== after?.middleName) ? before?.middleName : undefined,
        lastName: (before?.lastName !== undefined && before?.lastName !== after?.lastName) ? before?.lastName : undefined,
        suffix: (before?.suffix !== undefined && before?.suffix !== after?.suffix) ? before?.suffix : undefined,
        postNominal: (before?.postNominal !== undefined && before?.postNominal !== after?.postNominal) ? before?.postNominal : undefined,
        nickname: (before?.nickname !== undefined && before?.nickname !== after?.nickname) ? before?.nickname : undefined,
        birthDate: (before?.birthDate !== undefined && before?.birthDate !== after?.birthDate) ? before?.birthDate : undefined,
        birthState: (before?.birthState !== undefined && before?.birthState !== after?.birthState) ? before?.birthState : undefined,
        birthCountry: (before?.birthCountry !== undefined && before?.birthCountry !== after?.birthCountry) ? before?.birthCountry : undefined,
        gender: (before?.gender !== undefined && before?.gender !== after?.gender) ? before?.gender : undefined,
        party: (before?.party !== undefined && before?.party !== after?.party) ? before?.party : undefined,
        ballot: (before?.ballot !== undefined && before?.ballot !== after?.ballot) ? before?.ballot : undefined,
        religion: (before?.religion !== undefined && before?.religion !== after?.religion) ? before?.religion : undefined,
        education: (before?.education !== undefined && before?.education !== after?.education) ? before?.education : undefined,
        military: (before?.military !== undefined && before?.military !== after?.military) ? before?.military : undefined,
        income: (before?.income !== undefined && before?.income !== after?.income) ? before?.income : undefined,
        primaryLanguageCode: (before?.primaryLanguageCode !== undefined && before?.primaryLanguageCode !== after?.primaryLanguageCode) ? before?.primaryLanguageCode : undefined,
        secondaryLanguageCode: (before?.secondaryLanguageCode !== undefined && before?.secondaryLanguageCode !== after?.secondaryLanguageCode) ? before?.secondaryLanguageCode : undefined,
        primaryEthnicityCode: (before?.primaryEthnicityCode !== undefined && before?.primaryEthnicityCode !== after?.primaryEthnicityCode) ? before?.primaryEthnicityCode : undefined,
        secondaryEthnicityCode: (before?.secondaryEthnicityCode !== undefined && before?.secondaryEthnicityCode !== after?.secondaryEthnicityCode) ? before?.secondaryEthnicityCode : undefined,
    }) : null;
    let changes = 0;
    const afterDiff = after ? ({
        id: after.id,
        countyId: (after?.countyId !== undefined && before?.countyId !== after?.countyId && ++changes) ? after?.countyId : undefined,
        affidavitNum: (after?.affidavitNum !== undefined && before?.affidavitNum !== after?.affidavitNum && ++changes) ? after?.affidavitNum : undefined,
        precinct: (after?.precinct !== undefined && before?.precinct !== after?.precinct && ++changes) ? after?.precinct : undefined,
        createdAt: (after?.createdAt !== undefined && before?.createdAt !== after?.createdAt && ++changes) ? after?.createdAt : undefined,
        updatedAt: (after?.updatedAt !== undefined && before?.updatedAt !== after?.updatedAt && ++changes) ? after?.updatedAt : undefined,
        deletedAt: (after?.deletedAt !== undefined && before?.deletedAt !== after?.deletedAt && ++changes) ? after?.deletedAt : undefined,
        preNominal: (after?.preNominal !== undefined && before?.preNominal !== after?.preNominal && ++changes) ? after?.preNominal : undefined,
        firstName: (after?.firstName !== undefined && before?.firstName !== after?.firstName && ++changes) ? after?.firstName : undefined,
        middleName: (after?.middleName !== undefined && before?.middleName !== after?.middleName && ++changes) ? after?.middleName : undefined,
        lastName: (after?.lastName !== undefined && before?.lastName !== after?.lastName && ++changes) ? after?.lastName : undefined,
        suffix: (after?.suffix !== undefined && before?.suffix !== after?.suffix && ++changes) ? after?.suffix : undefined,
        postNominal: (after?.postNominal !== undefined && before?.postNominal !== after?.postNominal && ++changes) ? after?.postNominal : undefined,
        nickname: (after?.nickname !== undefined && before?.nickname !== after?.nickname && ++changes) ? after?.nickname : undefined,
        birthDate: (after?.birthDate !== undefined && before?.birthDate !== after?.birthDate && ++changes) ? after?.birthDate : undefined,
        birthState: (after?.birthState !== undefined && before?.birthState !== after?.birthState && ++changes) ? after?.birthState : undefined,
        birthCountry: (after?.birthCountry !== undefined && before?.birthCountry !== after?.birthCountry && ++changes) ? after?.birthCountry : undefined,
        gender: (after?.gender !== undefined && before?.gender !== after?.gender && ++changes) ? after?.gender : undefined,
        party: (after?.party !== undefined && before?.party !== after?.party && ++changes) ? after?.party : undefined,
        ballot: (after?.ballot !== undefined && before?.ballot !== after?.ballot && ++changes) ? after?.ballot : undefined,
        religion: (after?.religion !== undefined && before?.religion !== after?.religion && ++changes) ? after?.religion : undefined,
        education: (after?.education !== undefined && before?.education !== after?.education && ++changes) ? after?.education : undefined,
        military: (after?.military !== undefined && before?.military !== after?.military && ++changes) ? after?.military : undefined,
        income: (after?.income !== undefined && before?.income !== after?.income && ++changes) ? after?.income : undefined,
        primaryLanguageCode: (after?.primaryLanguageCode !== undefined && before?.primaryLanguageCode !== after?.primaryLanguageCode && ++changes) ? after?.primaryLanguageCode : undefined,
        secondaryLanguageCode: (after?.secondaryLanguageCode !== undefined && before?.secondaryLanguageCode !== after?.secondaryLanguageCode && ++changes) ? after?.secondaryLanguageCode : undefined,
        primaryEthnicityCode: (after?.primaryEthnicityCode !== undefined && before?.primaryEthnicityCode !== after?.primaryEthnicityCode && ++changes) ? after?.primaryEthnicityCode : undefined,
        secondaryEthnicityCode: (after?.secondaryEthnicityCode !== undefined && before?.secondaryEthnicityCode !== after?.secondaryEthnicityCode && ++changes) ? after?.secondaryEthnicityCode : undefined,
    }) : null;
    if (before && after && changes === 0) {
        return null;
    }
    return {
        model: ModelType.PERSON,
        before: beforeDiff,
        after: afterDiff,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlmZnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdHlwZXMvZGlmZnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUEsT0FBTyxLQUFLLE9BQU8sTUFBTSxjQUFjLENBQUM7QUFFeEMsTUFBTSxDQUFOLElBQVksU0FpQlg7QUFqQkQsV0FBWSxTQUFTO0lBQ25CLGtDQUFxQixDQUFBO0lBQ3JCLGdDQUFtQixDQUFBO0lBQ25CLDBCQUFhLENBQUE7SUFDYiw0QkFBZSxDQUFBO0lBQ2YsNEJBQWUsQ0FBQTtJQUNmLDZDQUFnQyxDQUFBO0lBQ2hDLHlDQUE0QixDQUFBO0lBQzVCLGdDQUFtQixDQUFBO0lBQ25CLHNDQUF5QixDQUFBO0lBQ3pCLGtDQUFxQixDQUFBO0lBQ3JCLGdDQUFtQixDQUFBO0lBQ25CLGtDQUFxQixDQUFBO0lBQ3JCLDBCQUFhLENBQUE7SUFDYixnQ0FBbUIsQ0FBQTtJQUNuQiw0QkFBZSxDQUFBO0lBQ2YsOEJBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQWpCVyxTQUFTLEdBQVQsU0FBUyxLQUFULFNBQVMsUUFpQnBCO0FBQ0QsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUFhO0lBQ3ZDLE9BQU8sSUFBSSxLQUFLLFNBQVMsQ0FBQyxRQUFRLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxPQUFPLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxJQUFJLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxLQUFLLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxLQUFLLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxjQUFjLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxZQUFZLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxPQUFPLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxVQUFVLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxRQUFRLElBQUksSUFBSSxLQUFLLFNBQVMsQ0FBQyxPQUFPLElBQUksSUFBSSxLQUFLLFNB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UyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdEgsU0FBUyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdEgsU0FBUyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdEgsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLElBQUksS0FBSyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDN0YsUUFBUSxFQUFFLENBQUMsTUFBTSxFQUFFLFFBQVEsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFFBQVEsS0FBSyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakgsWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLFlBQVksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFlBQVksS0FBSyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDckksTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE9BQU8sS0FBSyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDNUcsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLFlBQVksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFlBQVksS0FBSyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDckksVUFBVSxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQVUsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFVBQVUsS0FBSyxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDM0gsVUFBVSxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQVUsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFVBQVUsS0FBSyxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDM0gsYUFBYSxFQUFFLENBQUMsTUFBTSxFQUFFLGFBQWEsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLGFBQWEsS0FBSyxLQUFLLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDMUksUUFBUSxFQUFFLENBQUMsTUFBTSxFQUFFLFFBQVEsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFFBQVEsS0FBSyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakgsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE9BQU8sS0FBSyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDNUcsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLElBQUksS0FBSyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDN0YsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbEcsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEdBQUcsS0FBSyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDeEYsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLElBQUksS0FBSyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDN0YsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE9BQU8sS0FBSyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDNUcsVUFBVSxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQVUsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFVBQVUsS0FBSyxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDM0gsWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLFlBQVksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFlBQVksS0FBSyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDckksWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLFlBQVksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFlBQVksS0FBSyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDckksWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLFlBQVksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFlBQVksS0FBSyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDckksYUFBYSxFQUFFLENBQUMsTUFBTSxFQUFFLGFBQWEsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLGFBQWEsS0FBSyxLQUFLLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDMUksR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEdBQUcsS0FBSyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDeEYsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEdBQUcsS0FBSyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDeEYsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEdBQUcsS0FBSyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDeEYsYUFBYSxFQUFFLENBQUMsTUFBTSxFQUFFLGFBQWEsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLGFBQWEsS0FBSyxLQUFLLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDMUksWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLFlBQVksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFlBQVksS0FBSyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDckksTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbEcsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbEcsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLElBQUksS0FBSyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDN0YsU0FBUyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdEgsZUFBZSxFQUFFLENBQUMsTUFBTSxFQUFFLGVBQWUsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLGVBQWUsS0FBSyxLQUFLLEVBQUUsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxlQUFlLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDcEosY0FBYyxFQUFFLENBQUMsTUFBTSxFQUFFLGNBQWMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLGNBQWMsS0FBSyxLQUFLLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDL0ksWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLFlBQVksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFlBQVksS0FBSyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDckksU0FBUyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdEgsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE9BQU8sS0FBSyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDNUcsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbEcsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbEcsVUFBVSxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQVUsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFVBQVUsS0FBSyxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDM0gsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbEcsUUFBUSxFQUFFLENBQUMsTUFBTSxFQUFFLFFBQVEsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFFBQVEsS0FBSyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakgsU0FBUyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7S0FDdkgsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFFVixJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDaEIsTUFBTSxTQUFTLEdBQWtDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4RCxFQUFFLEVBQUUsS0FBSyxDQUFDLEVBQUU7UUFDWixTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN4RyxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM1SCxZQUFZLEVBQUUsQ0FBQyxLQUFLLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNoSixNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsT0FBTyxLQUFLLEtBQUssRUFBRSxPQUFPLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2SCxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxZQUFZLEVBQUUsQ0FBQyxLQUFLLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNoSixVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SSxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SSxhQUFhLEVBQUUsQ0FBQyxLQUFLLEVBQUUsYUFBYSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsYUFBYSxLQUFLLEtBQUssRUFBRSxhQUFhLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNySixRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM1SCxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsT0FBTyxLQUFLLEtBQUssRUFBRSxPQUFPLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2SCxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN4RyxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsR0FBRyxLQUFLLEtBQUssRUFBRSxHQUFHLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNuRyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN4RyxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsT0FBTyxLQUFLLEtBQUssRUFBRSxPQUFPLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2SCxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SSxZQUFZLEVBQUUsQ0FBQyxLQUFLLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNoSixZQUFZLEVBQUUsQ0FBQyxLQUFLLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNoSixZQUFZLEVBQUUsQ0FBQyxLQUFLLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNoSixhQUFhLEVBQUUsQ0FBQyxLQUFLLEVBQUUsYUFBYSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsYUFBYSxLQUFLLEtBQUssRUFBRSxhQUFhLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNySixHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsR0FBRyxLQUFLLEtBQUssRUFBRSxHQUFHLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNuRyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsR0FBRyxLQUFLLEtBQUssRUFBRSxHQUFHLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNuRyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsR0FBRyxLQUFLLEtBQUssRUFBRSxHQUFHLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNuRyxhQUFhLEVBQUUsQ0FBQyxLQUFLLEVBQUUsYUFBYSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsYUFBYSxLQUFLLEtBQUssRUFBRSxhQUFhLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNySixZQUFZLEVBQUUsQ0FBQyxLQUFLLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNoSixNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN4RyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxlQUFlLEVBQUUsQ0FBQyxLQUFLLEVBQUUsZUFBZSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsZUFBZSxLQUFLLEtBQUssRUFBRSxlQUFlLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLGVBQWUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUMvSixjQUFjLEVBQUUsQ0FBQyxLQUFLLEVBQUUsY0FBYyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsY0FBYyxLQUFLLEtBQUssRUFBRSxjQUFjLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUMxSixZQUFZLEVBQUUsQ0FBQyxLQUFLLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNoSixTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsT0FBTyxLQUFLLEtBQUssRUFBRSxPQUFPLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2SCxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SSxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM1SCxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztLQUNsSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNWLElBQUksTUFBTSxJQUFJLEtBQUssSUFBSSxPQUFPLEtBQUssQ0FBQyxFQUFFO1FBQUUsT0FBTyxJQUFJLENBQUM7S0FBRTtJQUV0RCxPQUFPO1FBQ0wsS0FBSyxFQUFFLFNBQVMsQ0FBQyxPQUFPO1FBQ3hCLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLEtBQUssRUFBRSxTQUFTO0tBQ1UsQ0FBQztBQUMvQixDQUFDO0FBS0QsTUFBTSxVQUFVLFFBQVEsQ0FBQyxNQUFpRCxFQUFFLEtBQWdEO0lBQzFILE1BQU0sVUFBVSxHQUErQixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkQsRUFBRSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1FBQ2IsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbEcsU0FBUyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdEgsU0FBUyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdEgsU0FBUyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdEgsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLElBQUksS0FBSyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDN0YsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbEcsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbEcsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLElBQUksS0FBSyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDN0YsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEdBQUcsS0FBSyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDeEYsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEdBQUcsS0FBSyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDeEYsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDdkcsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLElBQUksS0FBSyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7S0FDOUYsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFFVixJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDaEIsTUFBTSxTQUFTLEdBQStCLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyRCxFQUFFLEVBQUUsS0FBSyxDQUFDLEVBQUU7UUFDWixLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN4RyxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN4RyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsR0FBRyxLQUFLLEtBQUssRUFBRSxHQUFHLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNuRyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsR0FBRyxLQUFLLEtBQUssRUFBRSxHQUFHLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNuRyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztLQUN6RyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNWLElBQUksTUFBTSxJQUFJLEtBQUssSUFBSSxPQUFPLEtBQUssQ0FBQyxFQUFFO1FBQUUsT0FBTyxJQUFJLENBQUM7S0FBRTtJQUV0RCxPQUFPO1FBQ0wsS0FBSyxFQUFFLFNBQVMsQ0FBQyxJQUFJO1FBQ3JCLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLEtBQUssRUFBRSxTQUFTO0tBQ08sQ0FBQztBQUM1QixDQUFDO0FBS0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxNQUFtRCxFQUFFLEtBQWtEO0lBQy9ILE1BQU0sVUFBVSxHQUFnQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEQsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO1FBQ25CLFNBQVMsRUFBRSxDQUFDLE1BQU0sRUFBRSxTQUFTLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxTQUFTLEtBQUssS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ3RILFNBQVMsRUFBRSxDQUFDLE1BQU0sRUFBRSxTQUFTLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxTQUFTLEtBQUssS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ3RILFNBQVMsRUFBRSxDQUFDLE1BQU0sRUFBRSxTQUFTLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxTQUFTLEtBQUssS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ3RILFdBQVcsRUFBRSxDQUFDLE1BQU0sRUFBRSxXQUFXLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxXQUFXLEtBQUssS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ2hJLFFBQVEsRUFBRSxNQUFNLENBQUMsUUFBUTtLQUMxQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUVWLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQztJQUNoQixNQUFNLFNBQVMsR0FBZ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RELEtBQUssRUFBRSxLQUFLLENBQUMsS0FBSztRQUNsQixTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxXQUFXLEVBQUUsQ0FBQyxLQUFLLEVBQUUsV0FBVyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsV0FBVyxLQUFLLEtBQUssRUFBRSxXQUFXLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUMzSSxRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQVE7S0FDekIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDVixJQUFJLE1BQU0sSUFBSSxLQUFLLElBQUksT0FBTyxLQUFLLENBQUMsRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFFdEQsT0FBTztRQUNMLEtBQUssRUFBRSxTQUFTLENBQUMsS0FBSztRQUN0QixNQUFNLEVBQUUsVUFBVTtRQUNsQixLQUFLLEVBQUUsU0FBUztLQUNRLENBQUM7QUFDN0IsQ0FBQztBQUtELE1BQU0sVUFBVSxTQUFTLENBQUMsTUFBbUQsRUFBRSxLQUFrRDtJQUMvSCxNQUFNLFVBQVUsR0FBZ0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sRUFBRSxNQUFNLENBQUMsTUFBTTtRQUNyQixTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxNQUFNLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2RyxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUUsR0FBRyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsR0FBRyxLQUFLLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN4RixLQUFLLEVBQUUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsRyxJQUFJLEVBQUUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztLQUM5RixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUVWLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQztJQUNoQixNQUFNLFNBQVMsR0FBZ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RELE1BQU0sRUFBRSxLQUFLLENBQUMsTUFBTTtRQUNwQixTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsR0FBRyxLQUFLLEtBQUssRUFBRSxHQUFHLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNuRyxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztLQUN6RyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNWLElBQUksTUFBTSxJQUFJLEtBQUssSUFBSSxPQUFPLEtBQUssQ0FBQyxFQUFFO1FBQUUsT0FBTyxJQUFJLENBQUM7S0FBRTtJQUV0RCxPQUFPO1FBQ0wsS0FBSyxFQUFFLFNBQVMsQ0FBQyxLQUFLO1FBQ3RCLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLEtBQUssRUFBRSxTQUFTO0tBQ1EsQ0FBQztBQUM3QixDQUFDO0FBS0QsTUFBTSxVQUFVLGlCQUFpQixDQUFDLE1BQW1FLEVBQUUsS0FBa0U7SUFDdkssTUFBTSxVQUFVLEdBQXdDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNoRSxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxJQUFJLEVBQUUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RixJQUFJLEVBQUUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RixRQUFRLEVBQUUsTUFBTSxDQUFDLFFBQVE7UUFDekIsU0FBUyxFQUFFLE1BQU0sQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBRVYsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ2hCLE1BQU0sU0FBUyxHQUF3QyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUQsU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakksU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakksU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakksSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLElBQUksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLElBQUksS0FBSyxLQUFLLEVBQUUsSUFBSSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDeEcsSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLElBQUksS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLElBQUksS0FBSyxLQUFLLEVBQUUsSUFBSSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDeEcsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRO1FBQ3hCLFNBQVMsRUFBRSxLQUFLLENBQUMsU0FBUztLQUMzQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNWLElBQUksTUFBTSxJQUFJLEtBQUssSUFBSSxPQUFPLEtBQUssQ0FBQyxFQUFFO1FBQUUsT0FBTyxJQUFJLENBQUM7S0FBRTtJQUV0RCxPQUFPO1FBQ0wsS0FBSyxFQUFFLFNBQVMsQ0FBQyxjQUFjO1FBQy9CLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLEtBQUssRUFBRSxTQUFTO0tBQ2lCLENBQUM7QUFDdEMsQ0FBQztBQUtELE1BQU0sVUFBVSxlQUFlLENBQUMs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QUFXLEVBQUUsTUFBTSxDQUFDLFdBQVc7UUFDL0IsU0FBUyxFQUFFLE1BQU0sQ0FBQyxTQUFTO1FBQzNCLFNBQVMsRUFBRSxDQUFDLE1BQU0sRUFBRSxTQUFTLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxTQUFTLEtBQUssS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ3RILFNBQVMsRUFBRSxDQUFDLE1BQU0sRUFBRSxTQUFTLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxTQUFTLEtBQUssS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ3RILFNBQVMsRUFBRSxDQUFDLE1BQU0sRUFBRSxTQUFTLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxTQUFTLEtBQUssS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ3RILFFBQVEsRUFBRSxNQUFNLENBQUMsUUFBUTtLQUMxQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUVWLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQztJQUNoQixNQUFNLFNBQVMsR0FBa0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hELFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVztRQUM5QixTQUFTLEVBQUUsS0FBSyxDQUFDLFNBQVM7UUFDMUIsU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakksU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakksU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakksUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRO0tBQ3pCLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ1YsSUFBSSxNQUFNLElBQUksS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLEVBQUU7UUFBRSxPQUFPLElBQUksQ0FBQztLQUFFO0lBRXRELE9BQU87UUFDTCxLQUFLLEVBQUUsU0FBUyxDQUFDLE9BQU87UUFDeEIsTUFBTSxFQUFFLFVBQVU7UUFDbEIsS0FBSyxFQUFFLFNBQVM7S0FDVSxDQUFDO0FBQy9CLENBQUM7QUFLRCxNQUFNLFVBQVUsY0FBYyxDQUFDLE1BQTZELEVBQUUsS0FBNEQ7SUFDeEosTUFBTSxVQUFVLEdBQXFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3RCxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUk7UUFDakIsUUFBUSxFQUFFLE1BQU0sQ0FBQyxRQUFRO1FBQ3pCLElBQUksRUFBRSxNQUFNLENBQUMsSUFBSTtRQUNqQixTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxPQUFPLEVBQUUsQ0FBQyxNQUFNLEVBQUUsT0FBTyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsT0FBTyxLQUFLLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM1RyxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxRQUFRLEVBQUUsTUFBTSxDQUFDLFFBQVE7S0FDMUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFFVixJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDaEIsTUFBTSxTQUFTLEdBQXFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzRCxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUk7UUFDaEIsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRO1FBQ3hCLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSTtRQUNoQixTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxPQUFPLEVBQUUsQ0FBQyxL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VUFBVSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVM7S0FDdkksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDVixJQUFJLE1BQU0sSUFBSSxLQUFLLElBQUksT0FBTyxLQUFLLENBQUMsRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFFdEQsT0FBTztRQUNMLEtBQUssRUFBRSxTQUFTLENBQUMsT0FBTztRQUN4QixNQUFNLEVBQUUsVUFBVTtRQUNsQixLQUFLLEVBQUUsU0FBUztLQUNVLENBQUM7QUFDL0IsQ0FBQztBQUtELE1BQU0sVUFBVSxZQUFZLENBQUMsTUFBeUQsRUFBRSxLQUF3RDtJQUM5SSxNQUFNLFVBQVUsR0FBbUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNELEVBQUUsRUFBRSxNQUFNLENBQUMsRUFBRTtRQUNiLFlBQVksRUFBRSxDQUFDLE1BQU0sRUFBRSxZQUFZLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxZQUFZLEtBQUssS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ3JJLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxJQUFJLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxJQUFJLEtBQUssS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQzdGLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxJQUFJLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxJQUFJLEtBQUssS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQzdGLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxJQUFJLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxJQUFJLEtB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QUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQzVHLFFBQVEsRUFBRSxNQUFNLENBQUMsUUFBUTtRQUN6QixVQUFVLEVBQUUsTUFBTSxDQUFDLFVBQVU7S0FDOUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFFVixJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDaEIsTUFBTSxTQUFTLEdBQStCLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyRCxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM1SCxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsT0FBTyxLQUFLLEtBQUssRUFBRSxPQUFPLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2SCxRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQVE7UUFDeEIsVUFBVSxFQUFFLEtBQUssQ0FBQyxVQUFVO0tBQzdCLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ1YsSUFBSSxNQUFNLElBQUksS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLEVBQUU7UUFBRSxPQUFPLElBQUksQ0FBQztLQUFFO0lBRXRELE9BQU87UUFDTCxLQUFLLEVBQUUsU0FBUyxDQUFDLElBQUk7UUFDckIsTUFBTSxFQUFFLFVBQVU7UUFDbEIsS0FBSyxFQUFFLFNBQVM7S0FDTyxDQUFDO0FBQzVCLENBQUM7QUFLRCxNQUFNLFVBQVUsV0FBVyxDQUFDLE1BQXVELEVBQUUsS0FBc0Q7SUFDekksTUFBTSxVQUFVLEdBQWtDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxRCxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUs7UUFDbkIsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJO1FBQ2pCLEtBQUssRUFBRSxDQUFDLE1BQU0sRUFBRSxLQUFLLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxLQUFLLEtBQUssS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ2xHLFNBQVMsRUFBRSxNQUFNLENBQUMsU0FBUztRQUMzQixNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU07S0FDdEIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFFVixJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDaEIsTUFBTSxTQUFTLEdBQWtDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4RCxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7UUFDbEIsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO1FBQ2hCLEtBQUssRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxLQUFLLEtBQUssS0FBSyxFQUFFLEtBQUssSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQzdHLFNBQVMsRUFBRSxLQUFLLENBQUMsU0FBUztRQUMxQixNQUFNLEVBQUUsS0FBSyxDQUFDLE1BQU07S0FDckIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDVixJQUFJLE1BQU0sSUFBSSxLQUFLLElBQUksT0FBTyxLQUFLLENBQUMsRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFFdEQsT0FBTztRQUNMLEtBQUssRUFBRSxTQUFTLENBQUMsT0FBTztRQUN4QixNQUFNLEVBQUUsVUFBVTtRQUNsQixLQUFLLEVBQUUsU0FBUztLQUNVLENBQUM7QUFDL0IsQ0FBQztBQUtELE1BQU0sVUFBVSxTQUFTLENBQUMsTUFBbUQsRUFBRSxLQUFrRDtJQUMvSCxNQUFNLFVBQVUsR0FBZ0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hELElBQUksRUFBRSxNQUFNLENBQUMsSUFBSTtRQUNqQixLQUFLLEVBQUUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsRyxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxRQUFRLEVBQUUsTUFBTSxDQUFDLFFBQVE7S0FDMUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFFVixJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDaEIsTUFBTSxTQUFTLEdBQWdDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0RCxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUk7UUFDaEIsS0FBSyxFQUFFLENBQUMsS0FBSyxFQUFFLEtBQUssS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLEtBQUssS0FBSyxLQUFLLEVBQUUsS0FBSyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDN0csU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLFNBQVMsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLFNBQVMsS0FBSyxLQUFLLEVBQUUsU0FBUyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakksUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRO0tBQ3pCLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ1YsSUFBSSxNQUFNLElBQUksS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLEVBQUU7UUFBRSxPQUFPLElBQUksQ0FBQztLQUFFO0lBRXRELE9BQU87UUFDTCxLQUFLLEVBQUUsU0FBUyxDQUFDLEtBQUs7UUFDdEIsTUFBTSxFQUFFLFVBQVU7UUFDbEIsS0FBSyxFQUFFLFNBQVM7S0FDUSxDQUFDO0FBQzdCLENBQUM7QUFLRCxNQUFNLFVBQVUsVUFBVSxDQUFDLE1BQXFELEVBQUUsS0FBb0Q7SUFDcEksTUFBTSxVQUFVLEdBQWlDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6RCxFQUFFLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDYixRQUFRLEVBQUUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSCxZQUFZLEVBQUUsQ0FBQyxNQUFNLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNySSxRQUFRLEVBQUUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxVQUFVLEVBQUUsQ0FBQyxNQUFNLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUMzSCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxVQUFVLEVBQUUsQ0FBQyxNQUFNLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUMzSCxRQUFRLEVBQUUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSCxNQUFNLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2RyxXQUFXLEVBQUUsQ0FBQyxNQUFNLEVBQUUsV0FBVyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsV0FBVyxLQUFLLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNoSSxRQUFRLEVBQUUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSCxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SCxVQUFVLEVBQUUsQ0FBQyxNQUFNLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUMzSCxZQUFZLEVBQUUsQ0FBQyxNQUFNLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNySSxNQUFNLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2RyxLQUFLLEVBQUUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsRyxNQUFNLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2RyxRQUFRLEVBQUUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FB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LENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SSxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM1SCxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxXQUFXLEVBQUUsQ0FBQyxLQUFLLEVBQUUsV0FBVyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsV0FBVyxLQUFLLEtBQUssRUFBRSxXQUFXLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUMzSSxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM1SCxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsVUFBVSxLQUFLLEtBQUssRUFBRSxVQUFVLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN0SSxZQUFZLEVBQUUsQ0FBQyxLQUFLLEVBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsWUFBWSxLQUFLLEtBQUssRUFBRSxZQUFZLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNoSixNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsS0FBSyxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM3RyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM1SCxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsU0FBUyxLQUFLLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNqSSxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsUUFBUSxLQUFLLEtBQUssRUFBRSxRQUFRLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUM1SCxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNsSCxtQkFBbUIsRUFBRSxDQUFDLEtBQUssRUFBRSxtQkFBbUIsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLG1CQUFtQixLQUFLLEtBQUssRUFBRSxtQkFBbUIsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbkwscUJBQXFCLEVBQUUsQ0FBQyxLQUFLLEVBQUUscUJBQXFCLEtBQUssU0FBUyxJQUFJLE1BQU0sRUFBRSxxQkFBcUIsS0FBSyxLQUFLLEVBQUUscUJBQXFCLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQzdMLG9CQUFvQixFQUFFLENBQUMsS0FBSyxFQUFFLG9CQUFvQixLQUFLLFNBQVMsSUFBSSxNQUFNLEVBQUUsb0JBQW9CLEtBQUssS0FBSyxFQUFFLG9CQUFvQixJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN4TCxzQkFBc0IsRUFBRSxDQUFDLEtBQUssRUFBRSxzQkFBc0IsS0FBSyxTQUFTLElBQUksTUFBTSxFQUFFLHNCQUFzQixLQUFLLEtBQUssRUFBRSxzQkFBc0IsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsc0JBQXNCLENBQUMsQ0FBQyxDQUFDLFNBQVM7S0FDbk0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDVixJQUFJLE1BQU0sSUFBSSxLQUFLLElBQUksT0FBTyxLQUFLLENBQUMsRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFFdEQsT0FBTztRQUNMLEtBQUssRUFBRSxTQUFTLENBQUMsTUFBTTtRQUN2QixNQUFNLEVBQUUsVUFBVTtRQUNsQixLQUFLLEVBQUUsU0FBUztLQUNTLENBQUM7QUFDOUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG4vKlxuKiBDT0RFIEdFTkVSQVRFRCBBVVRPTUFUSUNBTExZXG4qIFRISVMgRklMRSBTSE9VTEQgTk9UIEJFIEVESVRFRCBCWSBIQU5EXG4qL1xuaW1wb3J0ICogYXMgbW9kZWxzIGZyb20gJy4vbW9kZWxzLmpzJztcbmltcG9ydCAqIGFzIGhlbHBlcnMgZnJvbSAnLi9oZWxwZXJzLmpzJztcblxuZXhwb3J0IGVudW0gTW9kZWxUeXBlIHtcbiAgTUVUQURBVEEgPSBcIk1ldGFkYXRhXCIsXG4gIEFERFJFU1MgPSBcIkFkZHJlc3NcIixcbiAgVFVSRiA9IFwiVHVyZlwiLFxuICBFTUFJTCA9IFwiRW1haWxcIixcbiAgUEhPTkUgPSBcIlBob25lXCIsXG4gIFBFUlNPTl9BRERSRVNTID0gXCJQZXJzb25BZGRyZXNzXCIsXG4gIFBFUlNPTl9QSE9ORSA9IFwiUGVyc29uUGhvbmVcIixcbiAgQUNDT1VOVCA9IFwiQWNjb3VudFwiLFxuICBFWFBFUklFTkNFID0gXCJFeHBlcmllbmNlXCIsXG4gIENBTVBBSUdOID0gXCJDYW1wYWlnblwiLFxuICBDT05URVNUID0gXCJDb250ZXN0XCIsXG4gIEVMRUNUSU9OID0gXCJFbGVjdGlvblwiLFxuICBWT1RFID0gXCJWb3RlXCIsXG4gIFJFVFVSTlMgPSBcIlJldHVybnNcIixcbiAgU0NPUkUgPSBcIlNjb3JlXCIsXG4gIFBFUlNPTiA9IFwiUGVyc29uXCIsXG59XG5leHBvcnQgZnVuY3Rpb24gaXNNb2RlbFR5cGUobmFtZTogdW5rbm93bik6IG5hbWUgaXMgTW9kZWxUeXBlIHtcbiAgcmV0dXJuIG5hbWUgPT09IE1vZGVsVHlwZS5NRVRBREFUQSB8fCBuYW1lID09PSBNb2RlbFR5cGUuQUREUkVTUyB8fCBuYW1lID09PSBNb2RlbFR5cGUuVFVSRiB8fCBuYW1lID09PSBNb2RlbFR5cGUuRU1BSUwgfHwgbmFtZSA9PT0gTW9kZWxUeXBlLlBIT05FIHx8IG5hbWUgPT09IE1vZGVsVHlwZS5QRVJTT05fQUREUkVTUyB8fCBuYW1lID09PSBNb2RlbFR5cGUuUEVSU09OX1BIT05FIHx8IG5hbWUgPT09IE1vZGVsVHlwZS5BQ0NPVU5UIHx8IG5hbWUgPT09IE1vZGVsVHlwZS5FWFBFUklFTkNFIHx8IG5hbWUgPT09IE1vZGVsVHlwZS5DQU1QQUlHTiB8fCBuYW1lID09PSBNb2RlbFR5cGUuQ09OVEVTVCB8fCBuYW1lID09PSBNb2RlbFR5cGUuRUxFQ1RJT04gfHwgbmFtZSA9PT0gTW9kZWxUeXBlLlZPVEUgfHwgbmFtZSA9PT0gTW9kZWxUeXBlLlJFVFVSTlMgfHwgbmFtZSA9PT0gTW9kZWxUeXBlLlNDT1JFIHx8IG5hbWUgPT09IE1vZGVsVHlwZS5QRVJTT04gfHwgZmFsc2U7XG59XG5leHBvcnQgaW50ZXJmYWNlIElNb2RlbExvb2t1cCB7XG4gIFtNb2RlbFR5cGUuTUVUQURBVEFdOiBtb2RlbHMuSU1ldGFkYXRhO1xuICBbTW9kZWxUeXBlLkFERFJFU1NdOiBtb2RlbHMuSUFkZHJlc3M7XG4gIFtNb2RlbFR5cGUuVFVSRl06IG1vZGVscy5JVHVyZjtcbiAgW01vZGVsVHlwZS5FTUFJTF06IG1vZGVscy5JRW1haWw7XG4gIFtNb2RlbFR5cGUuUEhPTkVdOiBtb2RlbHMuSVBob25lO1xuICBbTW9kZWxUeXBlLlBFUlNPTl9BRERSRVNTXTogbW9kZWxzLklQZXJzb25BZGRyZXNzO1xuICBbTW9kZWxUeXBlLlBFUlNPTl9QSE9ORV06IG1vZGVscy5JUGVyc29uUGhvbmU7XG4gIFtNb2RlbFR5cGUuQUNDT1VOVF06IG1vZGVscy5JQWNjb3VudDtcbiAgW01vZGVsVHlwZS5FWFBFUklFTkNFXTogbW9kZWxzLklFeHBlcmllbmNlO1xuICBbTW9kZWxUeXBlLkNBTVBBSUdOXTogbW9kZWxzLklDYW1wYWlnbjtcbiAgW01vZGVsVHlwZS5DT05URVNUXTogbW9kZWxzLklDb250ZXN0O1xuICBbTW9kZWxUeXBlLkVMRUNUSU9OXTogbW9kZWxzLklFbGVjdGlvbjtcbiAgW01vZGVsVHlwZS5WT1RFXTogbW9kZWxzLklWb3RlO1xuICBbTW9kZWxUeXBlLlJFVFVSTlNdOiBtb2RlbHMuSVJldHVybnM7XG4gIFtNb2RlbFR5cGUuU0NPUkVdOiBtb2RlbHMuSVNjb3JlO1xuICBbTW9kZWxUeXBlLlBFUlNPTl06IG1vZGVscy5JUGVyc29uO1xufVxuZXhwb3J0IGludGVyZmFjZSBJUGFydGlhbE1vZGVsTG9va3VwIHtcbiAgW01vZGVsVHlwZS5NRVRBREFUQV06IG1vZGVscy5JUGFydGlhbE1ldGFkYXRhO1xuICBbTW9kZWxUeXBlLkFERFJFU1NdOiBtb2RlbHMuSVBhcnRpYWxBZGRyZXNzO1xuICBbTW9kZWxUeXBlLlRVUkZdOiBtb2RlbHMuSVBhcnRpYWxUdXJmO1xuICBbTW9kZWxUeXBlLkVNQUlMXTogbW9kZWxzLklQYXJ0aWFsRW1haWw7XG4gIFtNb2RlbFR5cGUuUEhPTkVdOiBtb2RlbHMuSVBhcnRpYWxQaG9uZTtcbiAgW01vZGVsVHlwZS5QRVJTT05fQUREUkVTU106IG1vZGVscy5JUGFydGlhbFBlcnNvbkFkZHJlc3M7XG4gIFtNb2RlbFR5cGUuUEVSU09OX1BIT05FXTogbW9kZWxzLklQYXJ0aWFsUGVyc29uUGhvbmU7XG4gIFtNb2RlbFR5cGUuQUNDT1VOVF06IG1vZGVscy5JUGFydGlhbEFjY291bnQ7XG4gIFtNb2RlbFR5cGUuRVhQRVJJRU5DRV06IG1vZGVscy5JUGFydGlhbEV4cGVyaWVuY2U7XG4gIFtNb2RlbFR5cGUuQ0FNUEFJR05dOiBtb2RlbHMuSVBhcnRpYWxDYW1wYWlnbjtcbiAgW01vZGVsVHlwZS5DT05URVNUXTogbW9kZWxzLklQYXJ0aWFsQ29udGVzdDtcbiAgW01vZGVsVHlwZS5FTEVDVElPTl06IG1vZGVscy5JUGFydGlhbEVsZWN0aW9uO1xuICBbTW9kZWxUeXBlLlZPVEVdOiBtb2RlbHMuSVBhcnRpYWxWb3RlO1xuICBbTW9kZWxUeXBlLlJFVFVSTlNdOiBtb2RlbHMuSVBhcnRpYWxSZXR1cm5zO1xuICBbTW9kZWxUeXBlLlNDT1JFXTogbW9kZWxzLklQYXJ0aWFsU2NvcmU7XG4gIFtNb2RlbFR5cGUuUEVSU09OXTogbW9kZWxzLklQYXJ0aWFsUGVyc29uO1xufVxuZXhwb3J0IGNvbnN0IE1vZGVsS2V5c0xvb2t1cCA9IHtcbiAgTWV0YWRhdGFLZXlzOiBoZWxwZXJzLk1ldGFkYXRhLmtleXMoKSxcbiAgQWRkcmVzc0tleXM6IGhlbHBlcnMuQWRkcmVzcy5rZXlzKCksXG4gIFR1cmZLZXlzOiBoZWxwZXJzLlR1cmYua2V5cygpLFxuICBFbWFpbEtleXM6IGhlbHBlcnMuRW1haWwua2V5cygpLFxuICBQaG9uZUtleXM6IGhlbHBlcnMuUGhvbmUua2V5cygpLFxuICBQZXJzb25BZGRyZXNzS2V5czogaGVscGVycy5QZXJzb25BZGRyZXNzLmtleXMoKSxcbiAgUGVyc29uUGhvbmVLZXlzOiBoZWxwZXJzLlBlcnNvblBob25lLmtleXMoKSxcbiAgQWNjb3VudEtleXM6IGhlbHBlcnMuQWNjb3VudC5rZXlzKCksXG4gIEV4cGVyaWVuY2VLZXlzOiBoZWxwZXJzLkV4cGVyaWVuY2Uua2V5cygpLFxuICBDYW1wYWlnbktleXM6IGhlbHBlcnMuQ2FtcGFpZ24ua2V5cygpLFxuICBDb250ZXN0S2V5czogaGVscGVycy5Db250ZXN0LmtleXMoKSxcbiAgRWxlY3Rpb25LZXlzOiBoZWxwZXJzLkVsZWN0aW9uLmtleXMoKSxcbiAgVm90ZUtleXM6IGhlbHBlcnMuVm90ZS5rZXlzKCksXG4gIFJldHVybnNLZXlzOiBoZWxwZXJzLlJldHVybnMua2V5cygpLFxuICBTY29yZUtleXM6IGhlbHBlcnMuU2NvcmUua2V5cygpLFxuICBQZXJzb25LZXlzOiBoZWxwZXJzLlBlcnNvbi5rZXlzKCksXG59XG5leHBvcnQgY29uc3QgTW9kZWxUeXBlc0xvb2t1cCA9IHtcbiAgTWV0YWRhdGFUeXBlczogaGVscGVycy5NZXRhZGF0YS50eXBlcygpLFxuICBBZGRyZXNzVHlwZXM6IGhlbHBlcnMuQWRkcmVzcy50eXBlcygpLFxuICBUdXJmVHlwZXM6IGhlbHBlcnMuVHVyZi50eXBlcygpLFxuICBFbWFpbFR5cGVzOiBoZWxwZXJzLkVtYWlsLnR5cGVzKCksXG4gIFBob25lVHlwZXM6IGhlbHBlcnMuUGhvbmUudHlwZXMoKSxcbiAgUGVyc29uQWRkcmVzc1R5cGVzOiBoZWxwZXJzLlBlcnNvbkFkZHJlc3MudHlwZXMoKSxcbiAgUGVyc29uUGhvbmVUeXBlczogaGVscGVycy5QZXJzb25QaG9uZS50eXBlcygpLFxuICBBY2NvdW50VHlwZXM6IGhlbHBlcnMuQWNjb3VudC50eXBlcygpLFxuICBFeHBlcmllbmNlVHlwZXM6IGhlbHBlcnMuRXhwZXJpZW5jZS50eXBlcygpLFxuICBDYW1wYWlnblR5cGVzOiBoZWxwZXJzLkNhbXBhaWduLnR5cGVzKCksXG4gIENvbnRlc3RUeXBlczogaGVscGVycy5Db250ZXN0LnR5cGVzKCksXG4gIEVsZWN0aW9uVHlwZXM6IGhlbHBlcnMuRWxlY3Rpb24udHlwZXMoKSxcbiAgVm90ZVR5cGVzOiBoZWxwZXJzLlZvdGUudHlwZXMoKSxcbiAgUmV0dXJuc1R5cGVzOiBoZWxwZXJzLlJldHVybnMudHlwZXMoKSxcbiAgU2NvcmVUeXBlczogaGVscGVycy5TY29yZS50eXBlcygpLFxuICBQZXJzb25UeXBlczogaGVscGVycy5QZXJzb24udHlwZXMoKSxcbn1cbmV4cG9ydCBpbnRlcmZhY2UgQ3JlYXRlRGlmZjxUIGV4dGVuZHMgTW9kZWxUeXBlPiB7XG4gIG1vZGVsOiBUO1xuICBiZWZvcmU6IG51bGw7XG4gIGFmdGVyOiBJUGFydGlhbE1vZGVsTG9va3VwW1RdO1xufVxuZXhwb3J0IGludGVyZmFjZSBVcGRhdGVEaWZmPFQgZXh0ZW5kcyBNb2RlbFR5cGU+IHtcbiAgbW9kZWw6IFQ7XG4gIGJlZm9yZTogSVBhcnRpYWxNb2RlbExvb2t1cFtUXTtcbiAgYWZ0ZXI6IElQYXJ0aWFsTW9kZWxMb29rdXBbVF07XG59XG5leHBvcnQgaW50ZXJmYWNlIERlbGV0ZURpZmY8VCBleHRlbmRzIE1vZGVsVHlwZT4ge1xuICBtb2RlbDogVDtcbiAgYmVmb3JlOiBJUGFydGlhbE1vZGVsTG9va3VwW1RdO1xuICBhZnRlcjogbnVsbDtcbn1cbmV4cG9ydCB0eXBlIERpZmY8VCBleHRlbmRzIE1vZGVsVHlwZT4gPSBDcmVhdGVEaWZmPFQ+IHwgRGVsZXRlRGlmZjxUPiB8IFVwZGF0ZURpZmY8VD47ZXhwb3J0IHR5cGUgVW5pdmVyc2VEaWZmID0gKFxuICAgIERpZmY8TW9kZWxUeXBlLk1FVEFEQVRBPlxuICB8IERpZmY8TW9kZWxUeXBlLkFERFJFU1M+XG4gIHwgRGlmZjxNb2RlbFR5cGUuVFVSRj5cbiAgfCBEaWZmPE1vZGVsVHlwZS5FTUFJTD5cbiAgfCBEaWZmPE1vZGVsVHlwZS5QSE9ORT5cbiAgfCBEaWZmPE1vZGVsVHlwZS5QRVJTT05fQUREUkVTUz5cbiAgfCBEaWZmPE1vZGVsVHlwZS5QRVJTT05fUEhPTkU+XG4gIHwgRGlmZjxNb2RlbFR5cGUuQUNDT1VOVD5cbiAgfCBEaWZmPE1vZGVsVHlwZS5FWFBFUklFTkNFPlxuICB8IERpZmY8TW9kZWxUeXBlLkNBTVBBSUdOPlxuICB8IERpZmY8TW9kZWxUeXBlLkNPTlRFU1Q+XG4gIHwgRGlmZjxNb2RlbFR5cGUuRUxFQ1RJT04+XG4gIHwgRGlmZjxNb2RlbFR5cGUuVk9URT5cbiAgfCBEaWZmPE1vZGVsVHlwZS5SRVRVUk5TPlxuICB8IERpZmY8TW9kZWxUeXBlLlNDT1JFPlxuICB8IERpZmY8TW9kZWxUeXBlLlBFUlNPTj5cbik7XG5leHBvcnQgZnVuY3Rpb24gZGlmZk1ldGFkYXRhKGJlZm9yZTogbnVsbCwgYWZ0ZXI6IG1vZGVscy5JTWV0YWRhdGEgfCBtb2RlbHMuSVBhcnRpYWxNZXRhZGF0YSk6IENyZWF0ZURpZmY8TW9kZWxUeXBlLk1FVEFEQVRBPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZNZXRhZGF0YShiZWZvcmU6IG1vZGVscy5JTWV0YWRhdGEgfCBtb2RlbHMuSVBhcnRpYWxNZXRhZGF0YSwgYWZ0ZXI6IG51bGwpOiBEZWxldGVEaWZmPE1vZGVsVHlwZS5NRVRBREFUQT5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmTWV0YWRhdGEoYmVmb3JlOiBtb2RlbHMuSU1ldGFkYXRhIHwgbW9kZWxzLklQYXJ0aWFsTWV0YWRhdGEsIGFmdGVyOiBtb2RlbHMuSU1ldGFkYXRhIHwgbW9kZWxzLklQYXJ0aWFsTWV0YWRhdGEpOiBVcGRhdGVEaWZmPE1vZGVsVHlwZS5NRVRBREFUQT4gfCBudWxsXG5leHBvcnQgZnVuY3Rpb24gZGlmZk1ldGFkYXRhKGJlZm9yZTogbW9kZWxzLklNZXRhZGF0YSB8IG1vZGVscy5JUGFydGlhbE1ldGFkYXRhIHwgbnVsbCwgYWZ0ZXI6IG1vZGVscy5JTWV0YWRhdGEgfCBtb2RlbHMuSVBhcnRpYWxNZXRhZGF0YSB8IG51bGwpOiBEaWZmPE1vZGVsVHlwZS5NRVRBREFUQT4gfCBudWxsIHtcbiAgY29uc3QgYmVmb3JlRGlmZjogbW9kZWxzLklQYXJ0aWFsTWV0YWRhdGEgfCBudWxsID0gYmVmb3JlID8gKHtcbiAgICBrZXk6IGJlZm9yZS5rZXksXG4gICAgdmFsdWU6IChiZWZvcmU/LnZhbHVlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy52YWx1ZSAhPT0gYWZ0ZXI/LnZhbHVlKSA/IGJlZm9yZT8udmFsdWUgOiB1bmRlZmluZWQsXG4gIH0pIDogbnVsbDtcbiAgXG4gIGxldCBjaGFuZ2VzID0gMDtcbiAgY29uc3QgYWZ0ZXJEaWZmOiBtb2RlbHMuSVBhcnRpYWxNZXRhZGF0YSB8IG51bGwgPSBhZnRlciA/ICh7XG4gICAga2V5OiBhZnRlci5rZXksXG4gICAgdmFsdWU6IChhZnRlcj8udmFsdWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnZhbHVlICE9PSBhZnRlcj8udmFsdWUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy52YWx1ZSA6IHVuZGVmaW5lZCxcbiAgfSkgOiBudWxsO1xuICBpZiAoYmVmb3JlICYmIGFmdGVyICYmIGNoYW5nZXMgPT09IDApIHsgcmV0dXJuIG51bGw7IH1cbiAgXG4gIHJldHVybiB7XG4gICAgbW9kZWw6IE1vZGVsVHlwZS5NRVRBREFUQSxcbiAgICBiZWZvcmU6IGJlZm9yZURpZmYsXG4gICAgYWZ0ZXI6IGFmdGVyRGlmZixcbiAgfSBhcyBEaWZmPE1vZGVsVHlwZS5NRVRBREFUQT47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQWRkcmVzcyhiZWZvcmU6IG51bGwsIGFmdGVyOiBtb2RlbHMuSUFkZHJlc3MgfCBtb2RlbHMuSVBhcnRpYWxBZGRyZXNzKTogQ3JlYXRlRGlmZjxNb2RlbFR5cGUuQUREUkVTUz5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQWRkcmVzcyhiZWZvcmU6IG1vZGVscy5JQWRkcmVzcyB8IG1vZGVscy5JUGFydGlhbEFkZHJlc3MsIGFmdGVyOiBudWxsKTogRGVsZXRlRGlmZjxNb2RlbFR5cGUuQUREUkVTUz5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQWRkcmVzcyhiZWZvcmU6IG1vZGVscy5JQWRkcmVzcyB8IG1vZGVscy5JUGFydGlhbEFkZHJlc3MsIGFmdGVyOiBtb2RlbHMuSUFkZHJlc3MgfCBtb2RlbHMuSVBhcnRpYWxBZGRyZXNzKTogVXBkYXRlRGlmZjxNb2RlbFR5cGUuQUREUkVTUz4gfCBudWxsXG5leHBvcnQgZnVuY3Rpb24gZGlmZkFkZHJlc3MoYmVmb3JlOiBtb2RlbHMuSUFkZHJlc3MgfCBtb2RlbHMuSVBhcnRpYWxBZGRyZXNzIHwgbnVsbCwgYWZ0ZXI6IG1vZGVscy5JQWRkcmVzcyB8IG1vZGVscy5JUGFydGlhbEFkZHJlc3MgfCBudWxsKTogRGlmZjxNb2RlbFR5cGUuQUREUkVTUz4gfCBudWxsIHtcbiAgY29uc3QgYmVmb3JlRGlmZjogbW9kZWxzLklQYXJ0aWFsQWRkcmVzcyB8IG51bGwgPSBiZWZvcmUgPyAoe1xuICAgIGlkOiBiZWZvcmUuaWQsXG4gICAgY3JlYXRlZEF0OiAoYmVmb3JlPy5jcmVhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gYWZ0ZXI/LmNyZWF0ZWRBdCkgPyBiZWZvcmU/LmNyZWF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB1cGRhdGVkQXQ6IChiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udXBkYXRlZEF0ICE9PSBhZnRlcj8udXBkYXRlZEF0KSA/IGJlZm9yZT8udXBkYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGRlbGV0ZWRBdDogKGJlZm9yZT8uZGVsZXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxldGVkQXQgIT09IGFmdGVyPy5kZWxldGVkQXQpID8gYmVmb3JlPy5kZWxldGVkQXQgOiB1bmRlZmluZWQsXG4gICAgY2FyZTogKGJlZm9yZT8uY2FyZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY2FyZSAhPT0gYWZ0ZXI/LmNhcmUpID8gYmVmb3JlPy5jYXJlIDogdW5kZWZpbmVkLFxuICAgIGZhY2lsaXR5OiAoYmVmb3JlPy5mYWNpbGl0eSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZmFjaWxpdHkgIT09IGFmdGVyPy5mYWNpbGl0eSkgPyBiZWZvcmU/LmZhY2lsaXR5IDogdW5kZWZpbmVkLFxuICAgIGZhY2lsaXR5VHlwZTogKGJlZm9yZT8uZmFjaWxpdHlUeXBlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5mYWNpbGl0eVR5cGUgIT09IGFmdGVyPy5mYWNpbGl0eVR5cGUpID8gYmVmb3JlPy5mYWNpbGl0eVR5cGUgOiB1bmRlZmluZWQsXG4gICAgcGluTnVtOiAoYmVmb3JlPy5waW5OdW0gIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnBpbk51bSAhPT0gYWZ0ZXI/LnBpbk51bSkgPyBiZWZvcmU/LnBpbk51bSA6IHVuZGVmaW5lZCxcbiAgICBwaW5UeXBlOiAoYmVmb3JlPy5waW5UeXBlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5waW5UeXBlICE9PSBhZnRlcj8ucGluVHlwZSkgPyBiZWZvcmU/LnBpblR5cGUgOiB1bmRlZmluZWQsXG4gICAgbnVtYmVyOiAoYmVmb3JlPy5udW1iZXIgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm51bWJlciAhPT0gYWZ0ZXI/Lm51bWJlcikgPyBiZWZvcmU/Lm51bWJlciA6IHVuZGVmaW5lZCxcbiAgICBzdHJlZXRQcmVEaXI6IChiZWZvcmU/LnN0cmVldFByZURpciAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3RyZWV0UHJlRGlyICE9PSBhZnRlcj8uc3RyZWV0UHJlRGlyKSA/IGJlZm9yZT8uc3RyZWV0UHJlRGlyIDogdW5kZWZpbmVkLFxuICAgIHN0cmVldE5hbWU6IChiZWZvcmU/LnN0cmVldE5hbWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnN0cmVldE5hbWUgIT09IGFmdGVyPy5zdHJlZXROYW1lKSA/IGJlZm9yZT8uc3RyZWV0TmFtZSA6IHVuZGVmaW5lZCxcbiAgICBzdHJlZXRUeXBlOiAoYmVmb3JlPy5zdHJlZXRUeXBlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5zdHJlZXRUeXBlICE9PSBhZnRlcj8uc3RyZWV0VHlwZSkgPyBiZWZvcmU/LnN0cmVldFR5cGUgOiB1bmRlZmluZWQsXG4gICAgc3RyZWV0UG9zdERpcjogKGJlZm9yZT8uc3RyZWV0UG9zdERpciAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3RyZWV0UG9zdERpciAhPT0gYWZ0ZXI/LnN0cmVldFBvc3REaXIpID8gYmVmb3JlPy5zdHJlZXRQb3N0RGlyIDogdW5kZWZpbmVkLFxuICAgIHVuaXRBYmJyOiAoYmVmb3JlPy51bml0QWJiciAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udW5pdEFiYnIgIT09IGFmdGVyPy51bml0QWJicikgPyBiZWZvcmU/LnVuaXRBYmJyIDogdW5kZWZpbmVkLFxuICAgIHVuaXROdW06IChiZWZvcmU/LnVuaXROdW0gIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnVuaXROdW0gIT09IGFmdGVyPy51bml0TnVtKSA/IGJlZm9yZT8udW5pdE51bSA6IHVuZGVmaW5lZCxcbiAgICBjaXR5OiAoYmVmb3JlPy5jaXR5ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jaXR5ICE9PSBhZnRlcj8uY2l0eSkgPyBiZWZvcmU/LmNpdHkgOiB1bmRlZmluZWQsXG4gICAgc3RhdGU6IChiZWZvcmU/LnN0YXRlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5zdGF0ZSAhPT0gYWZ0ZXI/LnN0YXRlKSA/IGJlZm9yZT8uc3RhdGUgOiB1bmRlZmluZWQsXG4gICAgemlwOiAoYmVmb3JlPy56aXAgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnppcCAhPT0gYWZ0ZXI/LnppcCkgPyBiZWZvcmU/LnppcCA6IHVuZGVmaW5lZCxcbiAgICB6aXA0OiAoYmVmb3JlPy56aXA0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy56aXA0ICE9PSBhZnRlcj8uemlwNCkgPyBiZWZvcmU/LnppcDQgOiB1bmRlZmluZWQsXG4gICAgY291bnRyeTogKGJlZm9yZT8uY291bnRyeSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY291bnRyeSAhPT0gYWZ0ZXI/LmNvdW50cnkpID8gYmVmb3JlPy5jb3VudHJ5IDogdW5kZWZpbmVkLFxuICAgIHZlcmlmaWVkQXQ6IChiZWZvcmU/LnZlcmlmaWVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnZlcmlmaWVkQXQgIT09IGFmdGVyPy52ZXJpZmllZEF0KSA/IGJlZm9yZT8udmVyaWZpZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB2ZXJpZmljYXRpb246IChiZWZvcmU/LnZlcmlmaWNhdGlvbiAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udmVyaWZpY2F0aW9uICE9PSBhZnRlcj8udmVyaWZpY2F0aW9uKSA/IGJlZm9yZT8udmVyaWZpY2F0aW9uIDogdW5kZWZpbmVkLFxuICAgIGNhcnJpZXJSb3V0ZTogKGJlZm9yZT8uY2FycmllclJvdXRlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jYXJyaWVyUm91dGUgIT09IGFmdGVyPy5jYXJyaWVyUm91dGUpID8gYmVmb3JlPy5jYXJyaWVyUm91dGUgOiB1bmRlZmluZWQsXG4gICAgbGluZU9mVHJhdmVsOiAoYmVmb3JlPy5saW5lT2ZUcmF2ZWwgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmxpbmVPZlRyYXZlbCAhPT0gYWZ0ZXI/LmxpbmVPZlRyYXZlbCkgPyBiZWZvcmU/LmxpbmVPZlRyYXZlbCA6IHVuZGVmaW5lZCxcbiAgICBkZWxpdmVyeVBvaW50OiAoYmVmb3JlPy5kZWxpdmVyeVBvaW50ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxpdmVyeVBvaW50ICE9PSBhZnRlcj8uZGVsaXZlcnlQb2ludCkgPyBiZWZvcmU/LmRlbGl2ZXJ5UG9pbnQgOiB1bmRlZmluZWQsXG4gICAgbGF0OiAoYmVmb3JlPy5sYXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmxhdCAhPT0gYWZ0ZXI/LmxhdCkgPyBiZWZvcmU/LmxhdCA6IHVuZGVmaW5lZCxcbiAgICBsbmc6IChiZWZvcmU/LmxuZyAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubG5nICE9PSBhZnRlcj8ubG5nKSA/IGJlZm9yZT8ubG5nIDogdW5kZWZpbmVkLFxuICAgIGVsdjogKGJlZm9yZT8uZWx2ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5lbHYgIT09IGFmdGVyPy5lbHYpID8gYmVmb3JlPy5lbHYgOiB1bmRlZmluZWQsXG4gICAgYWNjdXJhY3lTY29yZTogKGJlZm9yZT8uYWNjdXJhY3lTY29yZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYWNjdXJhY3lTY29yZSAhPT0gYWZ0ZXI/LmFjY3VyYWN5U2NvcmUpID8gYmVmb3JlPy5hY2N1cmFjeVNjb3JlIDogdW5kZWZpbmVkLFxuICAgIGFjY3VyYWN5VHlwZTogKGJlZm9yZT8uYWNjdXJhY3lUeXBlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5hY2N1cmFjeVR5cGUgIT09IGFmdGVyPy5hY2N1cmFjeVR5cGUpID8gYmVmb3JlPy5hY2N1cmFjeVR5cGUgOiB1bmRlZmluZWQsXG4gICAgbGVnTGF0OiAoYmVmb3JlPy5sZWdMYXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmxlZ0xhdCAhPT0gYWZ0ZXI/LmxlZ0xhdCkgPyBiZWZvcmU/LmxlZ0xhdCA6IHVuZGVmaW5lZCxcbiAgICBsZWdMbmc6IChiZWZvcmU/LmxlZ0xuZyAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubGVnTG5nICE9PSBhZnRlcj8ubGVnTG5nKSA/IGJlZm9yZT8ubGVnTG5nIDogdW5kZWZpbmVkLFxuICAgIG93bmVyOiAoYmVmb3JlPy5vd25lciAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ub3duZXIgIT09IGFmdGVyPy5vd25lcikgPyBiZWZvcmU/Lm93bmVyIDogdW5kZWZpbmVkLFxuICAgIHZhbHVlOiAoYmVmb3JlPy52YWx1ZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udmFsdWUgIT09IGFmdGVyPy52YWx1ZSkgPyBiZWZvcmU/LnZhbHVlIDogdW5kZWZpbmVkLFxuICAgIGFyZWE6IChiZWZvcmU/LmFyZWEgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmFyZWEgIT09IGFmdGVyPy5hcmVhKSA/IGJlZm9yZT8uYXJlYSA6IHVuZGVmaW5lZCxcbiAgICB5ZWFyQnVpbHQ6IChiZWZvcmU/LnllYXJCdWlsdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ueWVhckJ1aWx0ICE9PSBhZnRlcj8ueWVhckJ1aWx0KSA/IGJlZm9yZT8ueWVhckJ1aWx0IDogdW5kZWZpbmVkLFxuICAgIHJlc2lkZW50aWFsQ29kZTogKGJlZm9yZT8ucmVzaWRlbnRpYWxDb2RlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5yZXNpZGVudGlhbENvZGUgIT09IGFmdGVyPy5yZXNpZGVudGlhbENvZGUpID8gYmVmb3JlPy5yZXNpZGVudGlhbENvZGUgOiB1bmRlZmluZWQsXG4gICAgY29tbWVyY2lhbENvZGU6IChiZWZvcmU/LmNvbW1lcmNpYWxDb2RlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jb21tZXJjaWFsQ29kZSAhPT0gYWZ0ZXI/LmNvbW1lcmNpYWxDb2RlKSA/IGJlZm9yZT8uY29tbWVyY2lhbENvZGUgOiB1bmRlZmluZWQsXG4gICAgYXNzZXNzb3JDb2RlOiAoYmVmb3JlPy5hc3Nlc3NvckNvZGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmFzc2Vzc29yQ29kZSAhPT0gYWZ0ZXI/LmFzc2Vzc29yQ29kZSkgPyBiZWZvcmU/LmFzc2Vzc29yQ29kZSA6IHVuZGVmaW5lZCxcbiAgICBmb290cHJpbnQ6IChiZWZvcmU/LmZvb3RwcmludCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZm9vdHByaW50ICE9PSBhZnRlcj8uZm9vdHByaW50KSA/IGJlZm9yZT8uZm9vdHByaW50IDogdW5kZWZpbmVkLFxuICAgIHN0b3JpZXM6IChiZWZvcmU/LnN0b3JpZXMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnN0b3JpZXMgIT09IGFmdGVyPy5zdG9yaWVzKSA/IGJlZm9yZT8uc3RvcmllcyA6IHVuZGVmaW5lZCxcbiAgICBkb29yczogKGJlZm9yZT8uZG9vcnMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmRvb3JzICE9PSBhZnRlcj8uZG9vcnMpID8gYmVmb3JlPy5kb29ycyA6IHVuZGVmaW5lZCxcbiAgICB1bml0czogKGJlZm9yZT8udW5pdHMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnVuaXRzICE9PSBhZnRlcj8udW5pdHMpID8gYmVmb3JlPy51bml0cyA6IHVuZGVmaW5lZCxcbiAgICBzcXVhcmVGZWV0OiAoYmVmb3JlPy5zcXVhcmVGZWV0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5zcXVhcmVGZWV0ICE9PSBhZnRlcj8uc3F1YXJlRmVldCkgPyBiZWZvcmU/LnNxdWFyZUZlZXQgOiB1bmRlZmluZWQsXG4gICAgZmxvb3JzOiAoYmVmb3JlPy5mbG9vcnMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmZsb29ycyAhPT0gYWZ0ZXI/LmZsb29ycykgPyBiZWZvcmU/LmZsb29ycyA6IHVuZGVmaW5lZCxcbiAgICByb29tczogKGJlZm9yZT8ucm9vbXMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnJvb21zICE9PSBhZnRlcj8ucm9vbXMpID8gYmVmb3JlPy5yb29tcyA6IHVuZGVmaW5lZCxcbiAgICBiZWRyb29tczogKGJlZm9yZT8uYmVkcm9vbXMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmJlZHJvb21zICE9PSBhZnRlcj8uYmVkcm9vbXMpID8gYmVmb3JlPy5iZWRyb29tcyA6IHVuZGVmaW5lZCxcbiAgICBiYXRocm9vbXM6IChiZWZvcmU/LmJhdGhyb29tcyAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYmF0aHJvb21zICE9PSBhZnRlcj8uYmF0aHJvb21zKSA/IGJlZm9yZT8uYmF0aHJvb21zIDogdW5kZWZpbmVkLFxuICB9KSA6IG51bGw7XG4gIFxuICBsZXQgY2hhbmdlcyA9IDA7XG4gIGNvbnN0IGFmdGVyRGlmZjogbW9kZWxzLklQYXJ0aWFsQWRkcmVzcyB8IG51bGwgPSBhZnRlciA/ICh7XG4gICAgaWQ6IGFmdGVyLmlkLFxuICAgIGNyZWF0ZWRBdDogKGFmdGVyPy5jcmVhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gYWZ0ZXI/LmNyZWF0ZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmNyZWF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB1cGRhdGVkQXQ6IChhZnRlcj8udXBkYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy51cGRhdGVkQXQgIT09IGFmdGVyPy51cGRhdGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy51cGRhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgZGVsZXRlZEF0OiAoYWZ0ZXI/LmRlbGV0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZGVsZXRlZEF0ICE9PSBhZnRlcj8uZGVsZXRlZEF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8uZGVsZXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGNhcmU6IChhZnRlcj8uY2FyZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY2FyZSAhPT0gYWZ0ZXI/LmNhcmUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5jYXJlIDogdW5kZWZpbmVkLFxuICAgIGZhY2lsaXR5OiAoYWZ0ZXI/LmZhY2lsaXR5ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5mYWNpbGl0eSAhPT0gYWZ0ZXI/LmZhY2lsaXR5ICYmICsrY2hhbmdlcykgPyBhZnRlcj8uZmFjaWxpdHkgOiB1bmRlZmluZWQsXG4gICAgZmFjaWxpdHlUeXBlOiAoYWZ0ZXI/LmZhY2lsaXR5VHlwZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZmFjaWxpdHlUeXBlICE9PSBhZnRlcj8uZmFjaWxpdHlUeXBlICYmICsrY2hhbmdlcykgPyBhZnRlcj8uZmFjaWxpdHlUeXBlIDogdW5kZWZpbmVkLFxuICAgIHBpbk51bTogKGFmdGVyPy5waW5OdW0gIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnBpbk51bSAhPT0gYWZ0ZXI/LnBpbk51bSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnBpbk51bSA6IHVuZGVmaW5lZCxcbiAgICBwaW5UeXBlOiAoYWZ0ZXI/LnBpblR5cGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnBpblR5cGUgIT09IGFmdGVyPy5waW5UeXBlICYmICsrY2hhbmdlcykgPyBhZnRlcj8ucGluVHlwZSA6IHVuZGVmaW5lZCxcbiAgICBudW1iZXI6IChhZnRlcj8ubnVtYmVyICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5udW1iZXIgIT09IGFmdGVyPy5udW1iZXIgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5udW1iZXIgOiB1bmRlZmluZWQsXG4gICAgc3RyZWV0UHJlRGlyOiAoYWZ0ZXI/LnN0cmVldFByZURpciAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3RyZWV0UHJlRGlyICE9PSBhZnRlcj8uc3RyZWV0UHJlRGlyICYmICsrY2hhbmdlcykgPyBhZnRlcj8uc3RyZWV0UHJlRGlyIDogdW5kZWZpbmVkLFxuICAgIHN0cmVldE5hbWU6IChhZnRlcj8uc3RyZWV0TmFtZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3RyZWV0TmFtZSAhPT0gYWZ0ZXI/LnN0cmVldE5hbWUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5zdHJlZXROYW1lIDogdW5kZWZpbmVkLFxuICAgIHN0cmVldFR5cGU6IChhZnRlcj8uc3RyZWV0VHlwZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3RyZWV0VHlwZSAhPT0gYWZ0ZXI/LnN0cmVldFR5cGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5zdHJlZXRUeXBlIDogdW5kZWZpbmVkLFxuICAgIHN0cmVldFBvc3REaXI6IChhZnRlcj8uc3RyZWV0UG9zdERpciAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3RyZWV0UG9zdERpciAhPT0gYWZ0ZXI/LnN0cmVldFBvc3REaXIgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5zdHJlZXRQb3N0RGlyIDogdW5kZWZpbmVkLFxuICAgIHVuaXRBYmJyOiAoYWZ0ZXI/LnVuaXRBYmJyICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy51bml0QWJiciAhPT0gYWZ0ZXI/LnVuaXRBYmJyICYmICsrY2hhbmdlcykgPyBhZnRlcj8udW5pdEFiYnIgOiB1bmRlZmluZWQsXG4gICAgdW5pdE51bTogKGFmdGVyPy51bml0TnVtICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy51bml0TnVtICE9PSBhZnRlcj8udW5pdE51bSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnVuaXROdW0gOiB1bmRlZmluZWQsXG4gICAgY2l0eTogKGFmdGVyPy5jaXR5ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jaXR5ICE9PSBhZnRlcj8uY2l0eSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmNpdHkgOiB1bmRlZmluZWQsXG4gICAgc3RhdGU6IChhZnRlcj8uc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnN0YXRlICE9PSBhZnRlcj8uc3RhdGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5zdGF0ZSA6IHVuZGVmaW5lZCxcbiAgICB6aXA6IChhZnRlcj8uemlwICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy56aXAgIT09IGFmdGVyPy56aXAgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy56aXAgOiB1bmRlZmluZWQsXG4gICAgemlwNDogKGFmdGVyPy56aXA0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy56aXA0ICE9PSBhZnRlcj8uemlwNCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnppcDQgOiB1bmRlZmluZWQsXG4gICAgY291bnRyeTogKGFmdGVyPy5jb3VudHJ5ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jb3VudHJ5ICE9PSBhZnRlcj8uY291bnRyeSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmNvdW50cnkgOiB1bmRlZmluZWQsXG4gICAgdmVyaWZpZWRBdDogKGFmdGVyPy52ZXJpZmllZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy52ZXJpZmllZEF0ICE9PSBhZnRlcj8udmVyaWZpZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnZlcmlmaWVkQXQgOiB1bmRlZmluZWQsXG4gICAgdmVyaWZpY2F0aW9uOiAoYWZ0ZXI/LnZlcmlmaWNhdGlvbiAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udmVyaWZpY2F0aW9uICE9PSBhZnRlcj8udmVyaWZpY2F0aW9uICYmICsrY2hhbmdlcykgPyBhZnRlcj8udmVyaWZpY2F0aW9uIDogdW5kZWZpbmVkLFxuICAgIGNhcnJpZXJSb3V0ZTogKGFmdGVyPy5jYXJyaWVyUm91dGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNhcnJpZXJSb3V0ZSAhPT0gYWZ0ZXI/LmNhcnJpZXJSb3V0ZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmNhcnJpZXJSb3V0ZSA6IHVuZGVmaW5lZCxcbiAgICBsaW5lT2ZUcmF2ZWw6IChhZnRlcj8ubGluZU9mVHJhdmVsICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5saW5lT2ZUcmF2ZWwgIT09IGFmdGVyPy5saW5lT2ZUcmF2ZWwgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5saW5lT2ZUcmF2ZWwgOiB1bmRlZmluZWQsXG4gICAgZGVsaXZlcnlQb2ludDogKGFmdGVyPy5kZWxpdmVyeVBvaW50ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxpdmVyeVBvaW50ICE9PSBhZnRlcj8uZGVsaXZlcnlQb2ludCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmRlbGl2ZXJ5UG9pbnQgOiB1bmRlZmluZWQsXG4gICAgbGF0OiAoYWZ0ZXI/LmxhdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubGF0ICE9PSBhZnRlcj8ubGF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8ubGF0IDogdW5kZWZpbmVkLFxuICAgIGxuZzogKGFmdGVyPy5sbmcgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmxuZyAhPT0gYWZ0ZXI/LmxuZyAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmxuZyA6IHVuZGVmaW5lZCxcbiAgICBlbHY6IChhZnRlcj8uZWx2ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5lbHYgIT09IGFmdGVyPy5lbHYgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5lbHYgOiB1bmRlZmluZWQsXG4gICAgYWNjdXJhY3lTY29yZTogKGFmdGVyPy5hY2N1cmFjeVNjb3JlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5hY2N1cmFjeVNjb3JlICE9PSBhZnRlcj8uYWNjdXJhY3lTY29yZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmFjY3VyYWN5U2NvcmUgOiB1bmRlZmluZWQsXG4gICAgYWNjdXJhY3lUeXBlOiAoYWZ0ZXI/LmFjY3VyYWN5VHlwZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYWNjdXJhY3lUeXBlICE9PSBhZnRlcj8uYWNjdXJhY3lUeXBlICYmICsrY2hhbmdlcykgPyBhZnRlcj8uYWNjdXJhY3lUeXBlIDogdW5kZWZpbmVkLFxuICAgIGxlZ0xhdDogKGFmdGVyPy5sZWdMYXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmxlZ0xhdCAhPT0gYWZ0ZXI/LmxlZ0xhdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmxlZ0xhdCA6IHVuZGVmaW5lZCxcbiAgICBsZWdMbmc6IChhZnRlcj8ubGVnTG5nICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5sZWdMbmcgIT09IGFmdGVyPy5sZWdMbmcgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5sZWdMbmcgOiB1bmRlZmluZWQsXG4gICAgb3duZXI6IChhZnRlcj8ub3duZXIgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm93bmVyICE9PSBhZnRlcj8ub3duZXIgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5vd25lciA6IHVuZGVmaW5lZCxcbiAgICB2YWx1ZTogKGFmdGVyPy52YWx1ZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udmFsdWUgIT09IGFmdGVyPy52YWx1ZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnZhbHVlIDogdW5kZWZpbmVkLFxuICAgIGFyZWE6IChhZnRlcj8uYXJlYSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYXJlYSAhPT0gYWZ0ZXI/LmFyZWEgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5hcmVhIDogdW5kZWZpbmVkLFxuICAgIHllYXJCdWlsdDogKGFmdGVyPy55ZWFyQnVpbHQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnllYXJCdWlsdCAhPT0gYWZ0ZXI/LnllYXJCdWlsdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnllYXJCdWlsdCA6IHVuZGVmaW5lZCxcbiAgICByZXNpZGVudGlhbENvZGU6IChhZnRlcj8ucmVzaWRlbnRpYWxDb2RlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5yZXNpZGVudGlhbENvZGUgIT09IGFmdGVyPy5yZXNpZGVudGlhbENvZGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5yZXNpZGVudGlhbENvZGUgOiB1bmRlZmluZWQsXG4gICAgY29tbWVyY2lhbENvZGU6IChhZnRlcj8uY29tbWVyY2lhbENvZGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNvbW1lcmNpYWxDb2RlICE9PSBhZnRlcj8uY29tbWVyY2lhbENvZGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5jb21tZXJjaWFsQ29kZSA6IHVuZGVmaW5lZCxcbiAgICBhc3Nlc3NvckNvZGU6IChhZnRlcj8uYXNzZXNzb3JDb2RlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5hc3Nlc3NvckNvZGUgIT09IGFmdGVyPy5hc3Nlc3NvckNvZGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5hc3Nlc3NvckNvZGUgOiB1bmRlZmluZWQsXG4gICAgZm9vdHByaW50OiAoYWZ0ZXI/LmZvb3RwcmludCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZm9vdHByaW50ICE9PSBhZnRlcj8uZm9vdHByaW50ICYmICsrY2hhbmdlcykgPyBhZnRlcj8uZm9vdHByaW50IDogdW5kZWZpbmVkLFxuICAgIHN0b3JpZXM6IChhZnRlcj8uc3RvcmllcyAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3RvcmllcyAhPT0gYWZ0ZXI/LnN0b3JpZXMgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5zdG9yaWVzIDogdW5kZWZpbmVkLFxuICAgIGRvb3JzOiAoYWZ0ZXI/LmRvb3JzICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kb29ycyAhPT0gYWZ0ZXI/LmRvb3JzICYmICsrY2hhbmdlcykgPyBhZnRlcj8uZG9vcnMgOiB1bmRlZmluZWQsXG4gICAgdW5pdHM6IChhZnRlcj8udW5pdHMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnVuaXRzICE9PSBhZnRlcj8udW5pdHMgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy51bml0cyA6IHVuZGVmaW5lZCxcbiAgICBzcXVhcmVGZWV0OiAoYWZ0ZXI/LnNxdWFyZUZlZXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnNxdWFyZUZlZXQgIT09IGFmdGVyPy5zcXVhcmVGZWV0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8uc3F1YXJlRmVldCA6IHVuZGVmaW5lZCxcbiAgICBmbG9vcnM6IChhZnRlcj8uZmxvb3JzICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5mbG9vcnMgIT09IGFmdGVyPy5mbG9vcnMgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5mbG9vcnMgOiB1bmRlZmluZWQsXG4gICAgcm9vbXM6IChhZnRlcj8ucm9vbXMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnJvb21zICE9PSBhZnRlcj8ucm9vbXMgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5yb29tcyA6IHVuZGVmaW5lZCxcbiAgICBiZWRyb29tczogKGFmdGVyPy5iZWRyb29tcyAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYmVkcm9vbXMgIT09IGFmdGVyPy5iZWRyb29tcyAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmJlZHJvb21zIDogdW5kZWZpbmVkLFxuICAgIGJhdGhyb29tczogKGFmdGVyPy5iYXRocm9vbXMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmJhdGhyb29tcyAhPT0gYWZ0ZXI/LmJhdGhyb29tcyAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmJhdGhyb29tcyA6IHVuZGVmaW5lZCxcbiAgfSkgOiBudWxsO1xuICBpZiAoYmVmb3JlICYmIGFmdGVyICYmIGNoYW5nZXMgPT09IDApIHsgcmV0dXJuIG51bGw7IH1cbiAgXG4gIHJldHVybiB7XG4gICAgbW9kZWw6IE1vZGVsVHlwZS5BRERSRVNTLFxuICAgIGJlZm9yZTogYmVmb3JlRGlmZixcbiAgICBhZnRlcjogYWZ0ZXJEaWZmLFxuICB9IGFzIERpZmY8TW9kZWxUeXBlLkFERFJFU1M+O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlmZlR1cmYoYmVmb3JlOiBudWxsLCBhZnRlcjogbW9kZWxzLklUdXJmIHwgbW9kZWxzLklQYXJ0aWFsVHVyZik6IENyZWF0ZURpZmY8TW9kZWxUeXBlLlRVUkY+XG5leHBvcnQgZnVuY3Rpb24gZGlmZlR1cmYoYmVmb3JlOiBtb2RlbHMuSVR1cmYgfCBtb2RlbHMuSVBhcnRpYWxUdXJmLCBhZnRlcjogbnVsbCk6IERlbGV0ZURpZmY8TW9kZWxUeXBlLlRVUkY+XG5leHBvcnQgZnVuY3Rpb24gZGlmZlR1cmYoYmVmb3JlOiBtb2RlbHMuSVR1cmYgfCBtb2RlbHMuSVBhcnRpYWxUdXJmLCBhZnRlcjogbW9kZWxzLklUdXJmIHwgbW9kZWxzLklQYXJ0aWFsVHVyZik6IFVwZGF0ZURpZmY8TW9kZWxUeXBlLlRVUkY+IHwgbnVsbFxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZUdXJmKGJlZm9yZTogbW9kZWxzLklUdXJmIHwgbW9kZWxzLklQYXJ0aWFsVHVyZiB8IG51bGwsIGFmdGVyOiBtb2RlbHMuSVR1cmYgfCBtb2RlbHMuSVBhcnRpYWxUdXJmIHwgbnVsbCk6IERpZmY8TW9kZWxUeXBlLlRVUkY+IHwgbnVsbCB7XG4gIGNvbnN0IGJlZm9yZURpZmY6IG1vZGVscy5JUGFydGlhbFR1cmYgfCBudWxsID0gYmVmb3JlID8gKHtcbiAgICBpZDogYmVmb3JlLmlkLFxuICAgIHNoYXBlOiAoYmVmb3JlPy5zaGFwZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc2hhcGUgIT09IGFmdGVyPy5zaGFwZSkgPyBiZWZvcmU/LnNoYXBlIDogdW5kZWZpbmVkLFxuICAgIGNyZWF0ZWRBdDogKGJlZm9yZT8uY3JlYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jcmVhdGVkQXQgIT09IGFmdGVyPy5jcmVhdGVkQXQpID8gYmVmb3JlPy5jcmVhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgdXBkYXRlZEF0OiAoYmVmb3JlPy51cGRhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gYWZ0ZXI/LnVwZGF0ZWRBdCkgPyBiZWZvcmU/LnVwZGF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICBkZWxldGVkQXQ6IChiZWZvcmU/LmRlbGV0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZGVsZXRlZEF0ICE9PSBhZnRlcj8uZGVsZXRlZEF0KSA/IGJlZm9yZT8uZGVsZXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIHR5cGU6IChiZWZvcmU/LnR5cGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnR5cGUgIT09IGFmdGVyPy50eXBlKSA/IGJlZm9yZT8udHlwZSA6IHVuZGVmaW5lZCxcbiAgICBzdGF0ZTogKGJlZm9yZT8uc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnN0YXRlICE9PSBhZnRlcj8uc3RhdGUpID8gYmVmb3JlPy5zdGF0ZSA6IHVuZGVmaW5lZCxcbiAgICBjb3VudHk6IChiZWZvcmU/LmNvdW50eSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY291bnR5ICE9PSBhZnRlcj8uY291bnR5KSA/IGJlZm9yZT8uY291bnR5IDogdW5kZWZpbmVkLFxuICAgIGdyb3VwOiAoYmVmb3JlPy5ncm91cCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZ3JvdXAgIT09IGFmdGVyPy5ncm91cCkgPyBiZWZvcmU/Lmdyb3VwIDogdW5kZWZpbmVkLFxuICAgIG5hbWU6IChiZWZvcmU/Lm5hbWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm5hbWUgIT09IGFmdGVyPy5uYW1lKSA/IGJlZm9yZT8ubmFtZSA6IHVuZGVmaW5lZCxcbiAgICBsYXQ6IChiZWZvcmU/LmxhdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubGF0ICE9PSBhZnRlcj8ubGF0KSA/IGJlZm9yZT8ubGF0IDogdW5kZWZpbmVkLFxuICAgIGxuZzogKGJlZm9yZT8ubG5nICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5sbmcgIT09IGFmdGVyPy5sbmcpID8gYmVmb3JlPy5sbmcgOiB1bmRlZmluZWQsXG4gICAgbGF0TWluOiAoYmVmb3JlPy5sYXRNaW4gIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmxhdE1pbiAhPT0gYWZ0ZXI/LmxhdE1pbikgPyBiZWZvcmU/LmxhdE1pbiA6IHVuZGVmaW5lZCxcbiAgICBsYXRNYXg6IChiZWZvcmU/LmxhdE1heCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubGF0TWF4ICE9PSBhZnRlcj8ubGF0TWF4KSA/IGJlZm9yZT8ubGF0TWF4IDogdW5kZWZpbmVkLFxuICAgIGxuZ01pbjogKGJlZm9yZT8ubG5nTWluICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5sbmdNaW4gIT09IGFmdGVyPy5sbmdNaW4pID8gYmVmb3JlPy5sbmdNaW4gOiB1bmRlZmluZWQsXG4gICAgbG5nTWF4OiAoYmVmb3JlPy5sbmdNYXggIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmxuZ01heCAhPT0gYWZ0ZXI/LmxuZ01heCkgPyBiZWZvcmU/LmxuZ01heCA6IHVuZGVmaW5lZCxcbiAgICBhcmVhOiAoYmVmb3JlPy5hcmVhICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5hcmVhICE9PSBhZnRlcj8uYXJlYSkgPyBiZWZvcmU/LmFyZWEgOiB1bmRlZmluZWQsXG4gIH0pIDogbnVsbDtcbiAgXG4gIGxldCBjaGFuZ2VzID0gMDtcbiAgY29uc3QgYWZ0ZXJEaWZmOiBtb2RlbHMuSVBhcnRpYWxUdXJmIHwgbnVsbCA9IGFmdGVyID8gKHtcbiAgICBpZDogYWZ0ZXIuaWQsXG4gICAgc2hhcGU6IChhZnRlcj8uc2hhcGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnNoYXBlICE9PSBhZnRlcj8uc2hhcGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5zaGFwZSA6IHVuZGVmaW5lZCxcbiAgICBjcmVhdGVkQXQ6IChhZnRlcj8uY3JlYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jcmVhdGVkQXQgIT09IGFmdGVyPy5jcmVhdGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5jcmVhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgdXBkYXRlZEF0OiAoYWZ0ZXI/LnVwZGF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udXBkYXRlZEF0ICE9PSBhZnRlcj8udXBkYXRlZEF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8udXBkYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGRlbGV0ZWRBdDogKGFmdGVyPy5kZWxldGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmRlbGV0ZWRBdCAhPT0gYWZ0ZXI/LmRlbGV0ZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmRlbGV0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB0eXBlOiAoYWZ0ZXI/LnR5cGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnR5cGUgIT09IGFmdGVyPy50eXBlICYmICsrY2hhbmdlcykgPyBhZnRlcj8udHlwZSA6IHVuZGVmaW5lZCxcbiAgICBzdGF0ZTogKGFmdGVyPy5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3RhdGUgIT09IGFmdGVyPy5zdGF0ZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnN0YXRlIDogdW5kZWZpbmVkLFxuICAgIGNvdW50eTogKGFmdGVyPy5jb3VudHkgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNvdW50eSAhPT0gYWZ0ZXI/LmNvdW50eSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmNvdW50eSA6IHVuZGVmaW5lZCxcbiAgICBncm91cDogKGFmdGVyPy5ncm91cCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZ3JvdXAgIT09IGFmdGVyPy5ncm91cCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/Lmdyb3VwIDogdW5kZWZpbmVkLFxuICAgIG5hbWU6IChhZnRlcj8ubmFtZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubmFtZSAhPT0gYWZ0ZXI/Lm5hbWUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5uYW1lIDogdW5kZWZpbmVkLFxuICAgIGxhdDogKGFmdGVyPy5sYXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmxhdCAhPT0gYWZ0ZXI/LmxhdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmxhdCA6IHVuZGVmaW5lZCxcbiAgICBsbmc6IChhZnRlcj8ubG5nICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5sbmcgIT09IGFmdGVyPy5sbmcgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5sbmcgOiB1bmRlZmluZWQsXG4gICAgbGF0TWluOiAoYWZ0ZXI/LmxhdE1pbiAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubGF0TWluICE9PSBhZnRlcj8ubGF0TWluICYmICsrY2hhbmdlcykgPyBhZnRlcj8ubGF0TWluIDogdW5kZWZpbmVkLFxuICAgIGxhdE1heDogKGFmdGVyPy5sYXRNYXggIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmxhdE1heCAhPT0gYWZ0ZXI/LmxhdE1heCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmxhdE1heCA6IHVuZGVmaW5lZCxcbiAgICBsbmdNaW46IChhZnRlcj8ubG5nTWluICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5sbmdNaW4gIT09IGFmdGVyPy5sbmdNaW4gJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5sbmdNaW4gOiB1bmRlZmluZWQsXG4gICAgbG5nTWF4OiAoYWZ0ZXI/LmxuZ01heCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubG5nTWF4ICE9PSBhZnRlcj8ubG5nTWF4ICYmICsrY2hhbmdlcykgPyBhZnRlcj8ubG5nTWF4IDogdW5kZWZpbmVkLFxuICAgIGFyZWE6IChhZnRlcj8uYXJlYSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYXJlYSAhPT0gYWZ0ZXI/LmFyZWEgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5hcmVhIDogdW5kZWZpbmVkLFxuICB9KSA6IG51bGw7XG4gIGlmIChiZWZvcmUgJiYgYWZ0ZXIgJiYgY2hhbmdlcyA9PT0gMCkgeyByZXR1cm4gbnVsbDsgfVxuICBcbiAgcmV0dXJuIHtcbiAgICBtb2RlbDogTW9kZWxUeXBlLlRVUkYsXG4gICAgYmVmb3JlOiBiZWZvcmVEaWZmLFxuICAgIGFmdGVyOiBhZnRlckRpZmYsXG4gIH0gYXMgRGlmZjxNb2RlbFR5cGUuVFVSRj47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmRW1haWwoYmVmb3JlOiBudWxsLCBhZnRlcjogbW9kZWxzLklFbWFpbCB8IG1vZGVscy5JUGFydGlhbEVtYWlsKTogQ3JlYXRlRGlmZjxNb2RlbFR5cGUuRU1BSUw+XG5leHBvcnQgZnVuY3Rpb24gZGlmZkVtYWlsKGJlZm9yZTogbW9kZWxzLklFbWFpbCB8IG1vZGVscy5JUGFydGlhbEVtYWlsLCBhZnRlcjogbnVsbCk6IERlbGV0ZURpZmY8TW9kZWxUeXBlLkVNQUlMPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZFbWFpbChiZWZvcmU6IG1vZGVscy5JRW1haWwgfCBtb2RlbHMuSVBhcnRpYWxFbWFpbCwgYWZ0ZXI6IG1vZGVscy5JRW1haWwgfCBtb2RlbHMuSVBhcnRpYWxFbWFpbCk6IFVwZGF0ZURpZmY8TW9kZWxUeXBlLkVNQUlMPiB8IG51bGxcbmV4cG9ydCBmdW5jdGlvbiBkaWZmRW1haWwoYmVmb3JlOiBtb2RlbHMuSUVtYWlsIHwgbW9kZWxzLklQYXJ0aWFsRW1haWwgfCBudWxsLCBhZnRlcjogbW9kZWxzLklFbWFpbCB8IG1vZGVscy5JUGFydGlhbEVtYWlsIHwgbnVsbCk6IERpZmY8TW9kZWxUeXBlLkVNQUlMPiB8IG51bGwge1xuICBjb25zdCBiZWZvcmVEaWZmOiBtb2RlbHMuSVBhcnRpYWxFbWFpbCB8IG51bGwgPSBiZWZvcmUgPyAoe1xuICAgIGVtYWlsOiBiZWZvcmUuZW1haWwsXG4gICAgY3JlYXRlZEF0OiAoYmVmb3JlPy5jcmVhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gYWZ0ZXI/LmNyZWF0ZWRBdCkgPyBiZWZvcmU/LmNyZWF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB1cGRhdGVkQXQ6IChiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udXBkYXRlZEF0ICE9PSBhZnRlcj8udXBkYXRlZEF0KSA/IGJlZm9yZT8udXBkYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGRlbGV0ZWRBdDogKGJlZm9yZT8uZGVsZXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxldGVkQXQgIT09IGFmdGVyPy5kZWxldGVkQXQpID8gYmVmb3JlPy5kZWxldGVkQXQgOiB1bmRlZmluZWQsXG4gICAgZGVsaXZlcmFibGU6IChiZWZvcmU/LmRlbGl2ZXJhYmxlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxpdmVyYWJsZSAhPT0gYWZ0ZXI/LmRlbGl2ZXJhYmxlKSA/IGJlZm9yZT8uZGVsaXZlcmFibGUgOiB1bmRlZmluZWQsXG4gICAgcGVyc29uSWQ6IGJlZm9yZS5wZXJzb25JZCxcbiAgfSkgOiBudWxsO1xuICBcbiAgbGV0IGNoYW5nZXMgPSAwO1xuICBjb25zdCBhZnRlckRpZmY6IG1vZGVscy5JUGFydGlhbEVtYWlsIHwgbnVsbCA9IGFmdGVyID8gKHtcbiAgICBlbWFpbDogYWZ0ZXIuZW1haWwsXG4gICAgY3JlYXRlZEF0OiAoYWZ0ZXI/LmNyZWF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY3JlYXRlZEF0ICE9PSBhZnRlcj8uY3JlYXRlZEF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8uY3JlYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIHVwZGF0ZWRBdDogKGFmdGVyPy51cGRhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gYWZ0ZXI/LnVwZGF0ZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnVwZGF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICBkZWxldGVkQXQ6IChhZnRlcj8uZGVsZXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxldGVkQXQgIT09IGFmdGVyPy5kZWxldGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5kZWxldGVkQXQgOiB1bmRlZmluZWQsXG4gICAgZGVsaXZlcmFibGU6IChhZnRlcj8uZGVsaXZlcmFibGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmRlbGl2ZXJhYmxlICE9PSBhZnRlcj8uZGVsaXZlcmFibGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5kZWxpdmVyYWJsZSA6IHVuZGVmaW5lZCxcbiAgICBwZXJzb25JZDogYWZ0ZXIucGVyc29uSWQsXG4gIH0pIDogbnVsbDtcbiAgaWYgKGJlZm9yZSAmJiBhZnRlciAmJiBjaGFuZ2VzID09PSAwKSB7IHJldHVybiBudWxsOyB9XG4gIFxuICByZXR1cm4ge1xuICAgIG1vZGVsOiBNb2RlbFR5cGUuRU1BSUwsXG4gICAgYmVmb3JlOiBiZWZvcmVEaWZmLFxuICAgIGFmdGVyOiBhZnRlckRpZmYsXG4gIH0gYXMgRGlmZjxNb2RlbFR5cGUuRU1BSUw+O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlmZlBob25lKGJlZm9yZTogbnVsbCwgYWZ0ZXI6IG1vZGVscy5JUGhvbmUgfCBtb2RlbHMuSVBhcnRpYWxQaG9uZSk6IENyZWF0ZURpZmY8TW9kZWxUeXBlLlBIT05FPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZQaG9uZShiZWZvcmU6IG1vZGVscy5JUGhvbmUgfCBtb2RlbHMuSVBhcnRpYWxQaG9uZSwgYWZ0ZXI6IG51bGwpOiBEZWxldGVEaWZmPE1vZGVsVHlwZS5QSE9ORT5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmUGhvbmUoYmVmb3JlOiBtb2RlbHMuSVBob25lIHwgbW9kZWxzLklQYXJ0aWFsUGhvbmUsIGFmdGVyOiBtb2RlbHMuSVBob25lIHwgbW9kZWxzLklQYXJ0aWFsUGhvbmUpOiBVcGRhdGVEaWZmPE1vZGVsVHlwZS5QSE9ORT4gfCBudWxsXG5leHBvcnQgZnVuY3Rpb24gZGlmZlBob25lKGJlZm9yZTogbW9kZWxzLklQaG9uZSB8IG1vZGVscy5JUGFydGlhbFBob25lIHwgbnVsbCwgYWZ0ZXI6IG1vZGVscy5JUGhvbmUgfCBtb2RlbHMuSVBhcnRpYWxQaG9uZSB8IG51bGwpOiBEaWZmPE1vZGVsVHlwZS5QSE9ORT4gfCBudWxsIHtcbiAgY29uc3QgYmVmb3JlRGlmZjogbW9kZWxzLklQYXJ0aWFsUGhvbmUgfCBudWxsID0gYmVmb3JlID8gKHtcbiAgICBudW1iZXI6IGJlZm9yZS5udW1iZXIsXG4gICAgY3JlYXRlZEF0OiAoYmVmb3JlPy5jcmVhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gYWZ0ZXI/LmNyZWF0ZWRBdCkgPyBiZWZvcmU/LmNyZWF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB1cGRhdGVkQXQ6IChiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udXBkYXRlZEF0ICE9PSBhZnRlcj8udXBkYXRlZEF0KSA/IGJlZm9yZT8udXBkYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGRlbGV0ZWRBdDogKGJlZm9yZT8uZGVsZXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxldGVkQXQgIT09IGFmdGVyPy5kZWxldGVkQXQpID8gYmVmb3JlPy5kZWxldGVkQXQgOiB1bmRlZmluZWQsXG4gICAgc3lzdGVtOiAoYmVmb3JlPy5zeXN0ZW0gIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnN5c3RlbSAhPT0gYWZ0ZXI/LnN5c3RlbSkgPyBiZWZvcmU/LnN5c3RlbSA6IHVuZGVmaW5lZCxcbiAgICBzbXM6IChiZWZvcmU/LnNtcyAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc21zICE9PSBhZnRlcj8uc21zKSA/IGJlZm9yZT8uc21zIDogdW5kZWZpbmVkLFxuICAgIHZvaWNlOiAoYmVmb3JlPy52b2ljZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udm9pY2UgIT09IGFmdGVyPy52b2ljZSkgPyBiZWZvcmU/LnZvaWNlIDogdW5kZWZpbmVkLFxuICAgIG5kbmM6IChiZWZvcmU/Lm5kbmMgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm5kbmMgIT09IGFmdGVyPy5uZG5jKSA/IGJlZm9yZT8ubmRuYyA6IHVuZGVmaW5lZCxcbiAgfSkgOiBudWxsO1xuICBcbiAgbGV0IGNoYW5nZXMgPSAwO1xuICBjb25zdCBhZnRlckRpZmY6IG1vZGVscy5JUGFydGlhbFBob25lIHwgbnVsbCA9IGFmdGVyID8gKHtcbiAgICBudW1iZXI6IGFmdGVyLm51bWJlcixcbiAgICBjcmVhdGVkQXQ6IChhZnRlcj8uY3JlYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jcmVhdGVkQXQgIT09IGFmdGVyPy5jcmVhdGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5jcmVhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgdXBkYXRlZEF0OiAoYWZ0ZXI/LnVwZGF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udXBkYXRlZEF0ICE9PSBhZnRlcj8udXBkYXRlZEF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8udXBkYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGRlbGV0ZWRBdDogKGFmdGVyPy5kZWxldGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmRlbGV0ZWRBdCAhPT0gYWZ0ZXI/LmRlbGV0ZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmRlbGV0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICBzeXN0ZW06IChhZnRlcj8uc3lzdGVtICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5zeXN0ZW0gIT09IGFmdGVyPy5zeXN0ZW0gJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5zeXN0ZW0gOiB1bmRlZmluZWQsXG4gICAgc21zOiAoYWZ0ZXI/LnNtcyAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc21zICE9PSBhZnRlcj8uc21zICYmICsrY2hhbmdlcykgPyBhZnRlcj8uc21zIDogdW5kZWZpbmVkLFxuICAgIHZvaWNlOiAoYWZ0ZXI/LnZvaWNlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy52b2ljZSAhPT0gYWZ0ZXI/LnZvaWNlICYmICsrY2hhbmdlcykgPyBhZnRlcj8udm9pY2UgOiB1bmRlZmluZWQsXG4gICAgbmRuYzogKGFmdGVyPy5uZG5jICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5uZG5jICE9PSBhZnRlcj8ubmRuYyAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/Lm5kbmMgOiB1bmRlZmluZWQsXG4gIH0pIDogbnVsbDtcbiAgaWYgKGJlZm9yZSAmJiBhZnRlciAmJiBjaGFuZ2VzID09PSAwKSB7IHJldHVybiBudWxsOyB9XG4gIFxuICByZXR1cm4ge1xuICAgIG1vZGVsOiBNb2RlbFR5cGUuUEhPTkUsXG4gICAgYmVmb3JlOiBiZWZvcmVEaWZmLFxuICAgIGFmdGVyOiBhZnRlckRpZmYsXG4gIH0gYXMgRGlmZjxNb2RlbFR5cGUuUEhPTkU+O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlmZlBlcnNvbkFkZHJlc3MoYmVmb3JlOiBudWxsLCBhZnRlcjogbW9kZWxzLklQZXJzb25BZGRyZXNzIHwgbW9kZWxzLklQYXJ0aWFsUGVyc29uQWRkcmVzcyk6IENyZWF0ZURpZmY8TW9kZWxUeXBlLlBFUlNPTl9BRERSRVNTPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZQZXJzb25BZGRyZXNzKGJlZm9yZTogbW9kZWxzLklQZXJzb25BZGRyZXNzIHwgbW9kZWxzLklQYXJ0aWFsUGVyc29uQWRkcmVzcywgYWZ0ZXI6IG51bGwpOiBEZWxldGVEaWZmPE1vZGVsVHlwZS5QRVJTT05fQUREUkVTUz5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmUGVyc29uQWRkcmVzcyhiZWZvcmU6IG1vZGVscy5JUGVyc29uQWRkcmVzcyB8IG1vZGVscy5JUGFydGlhbFBlcnNvbkFkZHJlc3MsIGFmdGVyOiBtb2RlbHMuSVBlcnNvbkFkZHJlc3MgfCBtb2RlbHMuSVBhcnRpYWxQZXJzb25BZGRyZXNzKTogVXBkYXRlRGlmZjxNb2RlbFR5cGUuUEVSU09OX0FERFJFU1M+IHwgbnVsbFxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZQZXJzb25BZGRyZXNzKGJlZm9yZTogbW9kZWxzLklQZXJzb25BZGRyZXNzIHwgbW9kZWxzLklQYXJ0aWFsUGVyc29uQWRkcmVzcyB8IG51bGwsIGFmdGVyOiBtb2RlbHMuSVBlcnNvbkFkZHJlc3MgfCBtb2RlbHMuSVBhcnRpYWxQZXJzb25BZGRyZXNzIHwgbnVsbCk6IERpZmY8TW9kZWxUeXBlLlBFUlNPTl9BRERSRVNTPiB8IG51bGwge1xuICBjb25zdCBiZWZvcmVEaWZmOiBtb2RlbHMuSVBhcnRpYWxQZXJzb25BZGRyZXNzIHwgbnVsbCA9IGJlZm9yZSA/ICh7XG4gICAgY3JlYXRlZEF0OiAoYmVmb3JlPy5jcmVhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gYWZ0ZXI/LmNyZWF0ZWRBdCkgPyBiZWZvcmU/LmNyZWF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB1cGRhdGVkQXQ6IChiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udXBkYXRlZEF0ICE9PSBhZnRlcj8udXBkYXRlZEF0KSA/IGJlZm9yZT8udXBkYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGRlbGV0ZWRBdDogKGJlZm9yZT8uZGVsZXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxldGVkQXQgIT09IGFmdGVyPy5kZWxldGVkQXQpID8gYmVmb3JlPy5kZWxldGVkQXQgOiB1bmRlZmluZWQsXG4gICAgbmNvYTogKGJlZm9yZT8ubmNvYSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubmNvYSAhPT0gYWZ0ZXI/Lm5jb2EpID8gYmVmb3JlPy5uY29hIDogdW5kZWZpbmVkLFxuICAgIHR5cGU6IChiZWZvcmU/LnR5cGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnR5cGUgIT09IGFmdGVyPy50eXBlKSA/IGJlZm9yZT8udHlwZSA6IHVuZGVmaW5lZCxcbiAgICBwZXJzb25JZDogYmVmb3JlLnBlcnNvbklkLFxuICAgIGFkZHJlc3NJZDogYmVmb3JlLmFkZHJlc3NJZCxcbiAgfSkgOiBudWxsO1xuICBcbiAgbGV0IGNoYW5nZXMgPSAwO1xuICBjb25zdCBhZnRlckRpZmY6IG1vZGVscy5JUGFydGlhbFBlcnNvbkFkZHJlc3MgfCBudWxsID0gYWZ0ZXIgPyAoe1xuICAgIGNyZWF0ZWRBdDogKGFmdGVyPy5jcmVhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gYWZ0ZXI/LmNyZWF0ZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmNyZWF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB1cGRhdGVkQXQ6IChhZnRlcj8udXBkYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy51cGRhdGVkQXQgIT09IGFmdGVyPy51cGRhdGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy51cGRhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgZGVsZXRlZEF0OiAoYWZ0ZXI/LmRlbGV0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZGVsZXRlZEF0ICE9PSBhZnRlcj8uZGVsZXRlZEF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8uZGVsZXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIG5jb2E6IChhZnRlcj8ubmNvYSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubmNvYSAhPT0gYWZ0ZXI/Lm5jb2EgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5uY29hIDogdW5kZWZpbmVkLFxuICAgIHR5cGU6IChhZnRlcj8udHlwZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udHlwZSAhPT0gYWZ0ZXI/LnR5cGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy50eXBlIDogdW5kZWZpbmVkLFxuICAgIHBlcnNvbklkOiBhZnRlci5wZXJzb25JZCxcbiAgICBhZGRyZXNzSWQ6IGFmdGVyLmFkZHJlc3NJZCxcbiAgfSkgOiBudWxsO1xuICBpZiAoYmVmb3JlICYmIGFmdGVyICYmIGNoYW5nZXMgPT09IDApIHsgcmV0dXJuIG51bGw7IH1cbiAgXG4gIHJldHVybiB7XG4gICAgbW9kZWw6IE1vZGVsVHlwZS5QRVJTT05fQUREUkVTUyxcbiAgICBiZWZvcmU6IGJlZm9yZURpZmYsXG4gICAgYWZ0ZXI6IGFmdGVyRGlmZixcbiAgfSBhcyBEaWZmPE1vZGVsVHlwZS5QRVJTT05fQUREUkVTUz47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmUGVyc29uUGhvbmUoYmVmb3JlOiBudWxsLCBhZnRlcjogbW9kZWxzLklQZXJzb25QaG9uZSB8IG1vZGVscy5JUGFydGlhbFBlcnNvblBob25lKTogQ3JlYXRlRGlmZjxNb2RlbFR5cGUuUEVSU09OX1BIT05FPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZQZXJzb25QaG9uZShiZWZvcmU6IG1vZGVscy5JUGVyc29uUGhvbmUgfCBtb2RlbHMuSVBhcnRpYWxQZXJzb25QaG9uZSwgYWZ0ZXI6IG51bGwpOiBEZWxldGVEaWZmPE1vZGVsVHlwZS5QRVJTT05fUEhPTkU+XG5leHBvcnQgZnVuY3Rpb24gZGlmZlBlcnNvblBob25lKGJlZm9yZTogbW9kZWxzLklQZXJzb25QaG9uZSB8IG1vZGVscy5JUGFydGlhbFBlcnNvblBob25lLCBhZnRlcjogbW9kZWxzLklQZXJzb25QaG9uZSB8IG1vZGVscy5JUGFydGlhbFBlcnNvblBob25lKTogVXBkYXRlRGlmZjxNb2RlbFR5cGUuUEVSU09OX1BIT05FPiB8IG51bGxcbmV4cG9ydCBmdW5jdGlvbiBkaWZmUGVyc29uUGhvbmUoYmVmb3JlOiBtb2RlbHMuSVBlcnNvblBob25lIHwgbW9kZWxzLklQYXJ0aWFsUGVyc29uUGhvbmUgfCBudWxsLCBhZnRlcjogbW9kZWxzLklQZXJzb25QaG9uZSB8IG1vZGVscy5JUGFydGlhbFBlcnNvblBob25lIHwgbnVsbCk6IERpZmY8TW9kZWxUeXBlLlBFUlNPTl9QSE9ORT4gfCBudWxsIHtcbiAgY29uc3QgYmVmb3JlRGlmZjogbW9kZWxzLklQYXJ0aWFsUGVyc29uUGhvbmUgfCBudWxsID0gYmVmb3JlID8gKHtcbiAgICBjcmVhdGVkQXQ6IChiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY3JlYXRlZEF0ICE9PSBhZnRlcj8uY3JlYXRlZEF0KSA/IGJlZm9yZT8uY3JlYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIHVwZGF0ZWRBdDogKGJlZm9yZT8udXBkYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy51cGRhdGVkQXQgIT09IGFmdGVyPy51cGRhdGVkQXQpID8gYmVmb3JlPy51cGRhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgZGVsZXRlZEF0OiAoYmVmb3JlPy5kZWxldGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmRlbGV0ZWRBdCAhPT0gYWZ0ZXI/LmRlbGV0ZWRBdCkgPyBiZWZvcmU/LmRlbGV0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB0eXBlOiAoYmVmb3JlPy50eXBlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy50eXBlICE9PSBhZnRlcj8udHlwZSkgPyBiZWZvcmU/LnR5cGUgOiB1bmRlZmluZWQsXG4gICAgcGVyc29uSWQ6IGJlZm9yZS5wZXJzb25JZCxcbiAgICBwaG9uZUlkOiBiZWZvcmUucGhvbmVJZCxcbiAgfSkgOiBudWxsO1xuICBcbiAgbGV0IGNoYW5nZXMgPSAwO1xuICBjb25zdCBhZnRlckRpZmY6IG1vZGVscy5JUGFydGlhbFBlcnNvblBob25lIHwgbnVsbCA9IGFmdGVyID8gKHtcbiAgICBjcmVhdGVkQXQ6IChhZnRlcj8uY3JlYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jcmVhdGVkQXQgIT09IGFmdGVyPy5jcmVhdGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5jcmVhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgdXBkYXRlZEF0OiAoYWZ0ZXI/LnVwZGF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udXBkYXRlZEF0ICE9PSBhZnRlcj8udXBkYXRlZEF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8udXBkYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGRlbGV0ZWRBdDogKGFmdGVyPy5kZWxldGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmRlbGV0ZWRBdCAhPT0gYWZ0ZXI/LmRlbGV0ZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmRlbGV0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB0eXBlOiAoYWZ0ZXI/LnR5cGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnR5cGUgIT09IGFmdGVyPy50eXBlICYmICsrY2hhbmdlcykgPyBhZnRlcj8udHlwZSA6IHVuZGVmaW5lZCxcbiAgICBwZXJzb25JZDogYWZ0ZXIucGVyc29uSWQsXG4gICAgcGhvbmVJZDogYWZ0ZXIucGhvbmVJZCxcbiAgfSkgOiBudWxsO1xuICBpZiAoYmVmb3JlICYmIGFmdGVyICYmIGNoYW5nZXMgPT09IDApIHsgcmV0dXJuIG51bGw7IH1cbiAgXG4gIHJldHVybiB7XG4gICAgbW9kZWw6IE1vZGVsVHlwZS5QRVJTT05fUEhPTkUsXG4gICAgYmVmb3JlOiBiZWZvcmVEaWZmLFxuICAgIGFmdGVyOiBhZnRlckRpZmYsXG4gIH0gYXMgRGlmZjxNb2RlbFR5cGUuUEVSU09OX1BIT05FPjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZBY2NvdW50KGJlZm9yZTogbnVsbCwgYWZ0ZXI6IG1vZGVscy5JQWNjb3VudCB8IG1vZGVscy5JUGFydGlhbEFjY291bnQpOiBDcmVhdGVEaWZmPE1vZGVsVHlwZS5BQ0NPVU5UPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZBY2NvdW50KGJlZm9yZTogbW9kZWxzLklBY2NvdW50IHwgbW9kZWxzLklQYXJ0aWFsQWNjb3VudCwgYWZ0ZXI6IG51bGwpOiBEZWxldGVEaWZmPE1vZGVsVHlwZS5BQ0NPVU5UPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZBY2NvdW50KGJlZm9yZTogbW9kZWxzLklBY2NvdW50IHwgbW9kZWxzLklQYXJ0aWFsQWNjb3VudCwgYWZ0ZXI6IG1vZGVscy5JQWNjb3VudCB8IG1vZGVscy5JUGFydGlhbEFjY291bnQpOiBVcGRhdGVEaWZmPE1vZGVsVHlwZS5BQ0NPVU5UPiB8IG51bGxcbmV4cG9ydCBmdW5jdGlvbiBkaWZmQWNjb3VudChiZWZvcmU6IG1vZGVscy5JQWNjb3VudCB8IG1vZGVscy5JUGFydGlhbEFjY291bnQgfCBudWxsLCBhZnRlcjogbW9kZWxzLklBY2NvdW50IHwgbW9kZWxzLklQYXJ0aWFsQWNjb3VudCB8IG51bGwpOiBEaWZmPE1vZGVsVHlwZS5BQ0NPVU5UPiB8IG51bGwge1xuICBjb25zdCBiZWZvcmVEaWZmOiBtb2RlbHMuSVBhcnRpYWxBY2NvdW50IHwgbnVsbCA9IGJlZm9yZSA/ICh7XG4gICAgYWNjb3VudFR5cGU6IGJlZm9yZS5hY2NvdW50VHlwZSxcbiAgICBhY2NvdW50SWQ6IGJlZm9yZS5hY2NvdW50SWQsXG4gICAgY3JlYXRlZEF0OiAoYmVmb3JlPy5jcmVhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gYWZ0ZXI/LmNyZWF0ZWRBdCkgPyBiZWZvcmU/LmNyZWF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB1cGRhdGVkQXQ6IChiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udXBkYXRlZEF0ICE9PSBhZnRlcj8udXBkYXRlZEF0KSA/IGJlZm9yZT8udXBkYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGRlbGV0ZWRBdDogKGJlZm9yZT8uZGVsZXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxldGVkQXQgIT09IGFmdGVyPy5kZWxldGVkQXQpID8gYmVmb3JlPy5kZWxldGVkQXQgOiB1bmRlZmluZWQsXG4gICAgcGVyc29uSWQ6IGJlZm9yZS5wZXJzb25JZCxcbiAgfSkgOiBudWxsO1xuICBcbiAgbGV0IGNoYW5nZXMgPSAwO1xuICBjb25zdCBhZnRlckRpZmY6IG1vZGVscy5JUGFydGlhbEFjY291bnQgfCBudWxsID0gYWZ0ZXIgPyAoe1xuICAgIGFjY291bnRUeXBlOiBhZnRlci5hY2NvdW50VHlwZSxcbiAgICBhY2NvdW50SWQ6IGFmdGVyLmFjY291bnRJZCxcbiAgICBjcmVhdGVkQXQ6IChhZnRlcj8uY3JlYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jcmVhdGVkQXQgIT09IGFmdGVyPy5jcmVhdGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5jcmVhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgdXBkYXRlZEF0OiAoYWZ0ZXI/LnVwZGF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8udXBkYXRlZEF0ICE9PSBhZnRlcj8udXBkYXRlZEF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8udXBkYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIGRlbGV0ZWRBdDogKGFmdGVyPy5kZWxldGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmRlbGV0ZWRBdCAhPT0gYWZ0ZXI/LmRlbGV0ZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmRlbGV0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICBwZXJzb25JZDogYWZ0ZXIucGVyc29uSWQsXG4gIH0pIDogbnVsbDtcbiAgaWYgKGJlZm9yZSAmJiBhZnRlciAmJiBjaGFuZ2VzID09PSAwKSB7IHJldHVybiBudWxsOyB9XG4gIFxuICByZXR1cm4ge1xuICAgIG1vZGVsOiBNb2RlbFR5cGUuQUNDT1VOVCxcbiAgICBiZWZvcmU6IGJlZm9yZURpZmYsXG4gICAgYWZ0ZXI6IGFmdGVyRGlmZixcbiAgfSBhcyBEaWZmPE1vZGVsVHlwZS5BQ0NPVU5UPjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZFeHBlcmllbmNlKGJlZm9yZTogbnVsbCwgYWZ0ZXI6IG1vZGVscy5JRXhwZXJpZW5jZSB8IG1vZGVscy5JUGFydGlhbEV4cGVyaWVuY2UpOiBDcmVhdGVEaWZmPE1vZGVsVHlwZS5FWFBFUklFTkNFPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZFeHBlcmllbmNlKGJlZm9yZTogbW9kZWxzLklFeHBlcmllbmNlIHwgbW9kZWxzLklQYXJ0aWFsRXhwZXJpZW5jZSwgYWZ0ZXI6IG51bGwpOiBEZWxldGVEaWZmPE1vZGVsVHlwZS5FWFBFUklFTkNFPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZFeHBlcmllbmNlKGJlZm9yZTogbW9kZWxzLklFeHBlcmllbmNlIHwgbW9kZWxzLklQYXJ0aWFsRXhwZXJpZW5jZSwgYWZ0ZXI6IG1vZGVscy5JRXhwZXJpZW5jZSB8IG1vZGVscy5JUGFydGlhbEV4cGVyaWVuY2UpOiBVcGRhdGVEaWZmPE1vZGVsVHlwZS5FWFBFUklFTkNFPiB8IG51bGxcbmV4cG9ydCBmdW5jdGlvbiBkaWZmRXhwZXJpZW5jZShiZWZvcmU6IG1vZGVscy5JRXhwZXJpZW5jZSB8IG1vZGVscy5JUGFydGlhbEV4cGVyaWVuY2UgfCBudWxsLCBhZnRlcjogbW9kZWxzLklFeHBlcmllbmNlIHwgbW9kZWxzLklQYXJ0aWFsRXhwZXJpZW5jZSB8IG51bGwpOiBEaWZmPE1vZGVsVHlwZS5FWFBFUklFTkNFPiB8IG51bGwge1xuICBjb25zdCBiZWZvcmVEaWZmOiBtb2RlbHMuSVBhcnRpYWxFeHBlcmllbmNlIHwgbnVsbCA9IGJlZm9yZSA/ICh7XG4gICAgdHlwZTogYmVmb3JlLnR5cGUsXG4gICAgZW1wbG95ZXI6IGJlZm9yZS5lbXBsb3llcixcbiAgICByb2xlOiBiZWZvcmUucm9sZSxcbiAgICBzdGFydERhdGU6IChiZWZvcmU/LnN0YXJ0RGF0ZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3RhcnREYXRlICE9PSBhZnRlcj8uc3RhcnREYXRlKSA/IGJlZm9yZT8uc3RhcnREYXRlIDogdW5kZWZpbmVkLFxuICAgIGVuZERhdGU6IChiZWZvcmU/LmVuZERhdGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmVuZERhdGUgIT09IGFmdGVyPy5lbmREYXRlKSA/IGJlZm9yZT8uZW5kRGF0ZSA6IHVuZGVmaW5lZCxcbiAgICBjcmVhdGVkQXQ6IChiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY3JlYXRlZEF0ICE9PSBhZnRlcj8uY3JlYXRlZEF0KSA/IGJlZm9yZT8uY3JlYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIHVwZGF0ZWRBdDogKGJlZm9yZT8udXBkYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy51cGRhdGVkQXQgIT09IGFmdGVyPy51cGRhdGVkQXQpID8gYmVmb3JlPy51cGRhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgZGVsZXRlZEF0OiAoYmVmb3JlPy5kZWxldGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmRlbGV0ZWRBdCAhPT0gYWZ0ZXI/LmRlbGV0ZWRBdCkgPyBiZWZvcmU/LmRlbGV0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICBwZXJzb25JZDogYmVmb3JlLnBlcnNvbklkLFxuICB9KSA6IG51bGw7XG4gIFxuICBsZXQgY2hhbmdlcyA9IDA7XG4gIGNvbnN0IGFmdGVyRGlmZjogbW9kZWxzLklQYXJ0aWFsRXhwZXJpZW5jZSB8IG51bGwgPSBhZnRlciA/ICh7XG4gICAgdHlwZTogYWZ0ZXIudHlwZSxcbiAgICBlbXBsb3llcjogYWZ0ZXIuZW1wbG95ZXIsXG4gICAgcm9sZTogYWZ0ZXIucm9sZSxcbiAgICBzdGFydERhdGU6IChhZnRlcj8uc3RhcnREYXRlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5zdGFydERhdGUgIT09IGFmdGVyPy5zdGFydERhdGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5zdGFydERhdGUgOiB1bmRlZmluZWQsXG4gICAgZW5kRGF0ZTogKGFmdGVyPy5lbmREYXRlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5lbmREYXRlICE9PSBhZnRlcj8uZW5kRGF0ZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmVuZERhdGUgOiB1bmRlZmluZWQsXG4gICAgY3JlYXRlZEF0OiAoYWZ0ZXI/LmNyZWF0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY3JlYXRlZEF0ICE9PSBhZnRlcj8uY3JlYXRlZEF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8uY3JlYXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIHVwZGF0ZWRBdDogKGFmdGVyPy51cGRhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gYWZ0ZXI/LnVwZGF0ZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnVwZGF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICBkZWxldGVkQXQ6IChhZnRlcj8uZGVsZXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5kZWxldGVkQXQgIT09IGFmdGVyPy5kZWxldGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5kZWxldGVkQXQgOiB1bmRlZmluZWQsXG4gICAgcGVyc29uSWQ6IGFmdGVyLnBlcnNvbklkLFxuICB9KSA6IG51bGw7XG4gIGlmIChiZWZvcmUgJiYgYWZ0ZXIgJiYgY2hhbmdlcyA9PT0gMCkgeyByZXR1cm4gbnVsbDsgfVxuICBcbiAgcmV0dXJuIHtcbiAgICBtb2RlbDogTW9kZWxUeXBlLkVYUEVSSUVOQ0UsXG4gICAgYmVmb3JlOiBiZWZvcmVEaWZmLFxuICAgIGFmdGVyOiBhZnRlckRpZmYsXG4gIH0gYXMgRGlmZjxNb2RlbFR5cGUuRVhQRVJJRU5DRT47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQ2FtcGFpZ24oYmVmb3JlOiBudWxsLCBhZnRlcjogbW9kZWxzLklDYW1wYWlnbiB8IG1vZGVscy5JUGFydGlhbENhbXBhaWduKTogQ3JlYXRlRGlmZjxNb2RlbFR5cGUuQ0FNUEFJR04+XG5leHBvcnQgZnVuY3Rpb24gZGlmZkNhbXBhaWduKGJlZm9yZTogbW9kZWxzLklDYW1wYWlnbiB8IG1vZGVscy5JUGFydGlhbENhbXBhaWduLCBhZnRlcjogbnVsbCk6IERlbGV0ZURpZmY8TW9kZWxUeXBlLkNBTVBBSUdOPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZDYW1wYWlnbihiZWZvcmU6IG1vZGVscy5JQ2FtcGFpZ24gfCBtb2RlbHMuSVBhcnRpYWxDYW1wYWlnbiwgYWZ0ZXI6IG1vZGVscy5JQ2FtcGFpZ24gfCBtb2RlbHMuSVBhcnRpYWxDYW1wYWlnbik6IFVwZGF0ZURpZmY8TW9kZWxUeXBlLkNBTVBBSUdOPiB8IG51bGxcbmV4cG9ydCBmdW5jdGlvbiBkaWZmQ2FtcGFpZ24oYmVmb3JlOiBtb2RlbHMuSUNhbXBhaWduIHwgbW9kZWxzLklQYXJ0aWFsQ2FtcGFpZ24gfCBudWxsLCBhZnRlcjogbW9kZWxzLklDYW1wYWlnbiB8IG1vZGVscy5JUGFydGlhbENhbXBhaWduIHwgbnVsbCk6IERpZmY8TW9kZWxUeXBlLkNBTVBBSUdOPiB8IG51bGwge1xuICBjb25zdCBiZWZvcmVEaWZmOiBtb2RlbHMuSVBhcnRpYWxDYW1wYWlnbiB8IG51bGwgPSBiZWZvcmUgPyAoe1xuICAgIGlkOiBiZWZvcmUuaWQsXG4gICAgbmFtZTogKGJlZm9yZT8ubmFtZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubmFtZSAhPT0gYWZ0ZXI/Lm5hbWUpID8gYmVmb3JlPy5uYW1lIDogdW5kZWZpbmVkLFxuICAgIGNvbnRlc3RJZDogKGJlZm9yZT8uY29udGVzdElkICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jb250ZXN0SWQgIT09IGFmdGVyPy5jb250ZXN0SWQpID8gYmVmb3JlPy5jb250ZXN0SWQgOiB1bmRlZmluZWQsXG4gIH0pIDogbnVsbDtcbiAgXG4gIGxldCBjaGFuZ2VzID0gMDtcbiAgY29uc3QgYWZ0ZXJEaWZmOiBtb2RlbHMuSVBhcnRpYWxDYW1wYWlnbiB8IG51bGwgPSBhZnRlciA/ICh7XG4gICAgaWQ6IGFmdGVyLmlkLFxuICAgIG5hbWU6IChhZnRlcj8ubmFtZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubmFtZSAhPT0gYWZ0ZXI/Lm5hbWUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5uYW1lIDogdW5kZWZpbmVkLFxuICAgIGNvbnRlc3RJZDogKGFmdGVyPy5jb250ZXN0SWQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNvbnRlc3RJZCAhPT0gYWZ0ZXI/LmNvbnRlc3RJZCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmNvbnRlc3RJZCA6IHVuZGVmaW5lZCxcbiAgfSkgOiBudWxsO1xuICBpZiAoYmVmb3JlICYmIGFmdGVyICYmIGNoYW5nZXMgPT09IDApIHsgcmV0dXJuIG51bGw7IH1cbiAgXG4gIHJldHVybiB7XG4gICAgbW9kZWw6IE1vZGVsVHlwZS5DQU1QQUlHTixcbiAgICBiZWZvcmU6IGJlZm9yZURpZmYsXG4gICAgYWZ0ZXI6IGFmdGVyRGlmZixcbiAgfSBhcyBEaWZmPE1vZGVsVHlwZS5DQU1QQUlHTj47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQ29udGVzdChiZWZvcmU6IG51bGwsIGFmdGVyOiBtb2RlbHMuSUNvbnRlc3QgfCBtb2RlbHMuSVBhcnRpYWxDb250ZXN0KTogQ3JlYXRlRGlmZjxNb2RlbFR5cGUuQ09OVEVTVD5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQ29udGVzdChiZWZvcmU6IG1vZGVscy5JQ29udGVzdCB8IG1vZGVscy5JUGFydGlhbENvbnRlc3QsIGFmdGVyOiBudWxsKTogRGVsZXRlRGlmZjxNb2RlbFR5cGUuQ09OVEVTVD5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQ29udGVzdChiZWZvcmU6IG1vZGVscy5JQ29udGVzdCB8IG1vZGVscy5JUGFydGlhbENvbnRlc3QsIGFmdGVyOiBtb2RlbHMuSUNvbnRlc3QgfCBtb2RlbHMuSVBhcnRpYWxDb250ZXN0KTogVXBkYXRlRGlmZjxNb2RlbFR5cGUuQ09OVEVTVD4gfCBudWxsXG5leHBvcnQgZnVuY3Rpb24gZGlmZkNvbnRlc3QoYmVmb3JlOiBtb2RlbHMuSUNvbnRlc3QgfCBtb2RlbHMuSVBhcnRpYWxDb250ZXN0IHwgbnVsbCwgYWZ0ZXI6IG1vZGVscy5JQ29udGVzdCB8IG1vZGVscy5JUGFydGlhbENvbnRlc3QgfCBudWxsKTogRGlmZjxNb2RlbFR5cGUuQ09OVEVTVD4gfCBudWxsIHtcbiAgY29uc3QgYmVmb3JlRGlmZjogbW9kZWxzLklQYXJ0aWFsQ29udGVzdCB8IG51bGwgPSBiZWZvcmUgPyAoe1xuICAgIGlkOiBiZWZvcmUuaWQsXG4gICAgbmFtZTogKGJlZm9yZT8ubmFtZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubmFtZSAhPT0gYWZ0ZXI/Lm5hbWUpID8gYmVmb3JlPy5uYW1lIDogdW5kZWZpbmVkLFxuICAgIGVsZWN0aW9uSWQ6IChiZWZvcmU/LmVsZWN0aW9uSWQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmVsZWN0aW9uSWQgIT09IGFmdGVyPy5lbGVjdGlvbklkKSA/IGJlZm9yZT8uZWxlY3Rpb25JZCA6IHVuZGVmaW5lZCxcbiAgfSkgOiBudWxsO1xuICBcbiAgbGV0IGNoYW5nZXMgPSAwO1xuICBjb25zdCBhZnRlckRpZmY6IG1vZGVscy5JUGFydGlhbENvbnRlc3QgfCBudWxsID0gYWZ0ZXIgPyAoe1xuICAgIGlkOiBhZnRlci5pZCxcbiAgICBuYW1lOiAoYWZ0ZXI/Lm5hbWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm5hbWUgIT09IGFmdGVyPy5uYW1lICYmICsrY2hhbmdlcykgPyBhZnRlcj8ubmFtZSA6IHVuZGVmaW5lZCxcbiAgICBlbGVjdGlvbklkOiAoYWZ0ZXI/LmVsZWN0aW9uSWQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmVsZWN0aW9uSWQgIT09IGFmdGVyPy5lbGVjdGlvbklkICYmICsrY2hhbmdlcykgPyBhZnRlcj8uZWxlY3Rpb25JZCA6IHVuZGVmaW5lZCxcbiAgfSkgOiBudWxsO1xuICBpZiAoYmVmb3JlICYmIGFmdGVyICYmIGNoYW5nZXMgPT09IDApIHsgcmV0dXJuIG51bGw7IH1cbiAgXG4gIHJldHVybiB7XG4gICAgbW9kZWw6IE1vZGVsVHlwZS5DT05URVNULFxuICAgIGJlZm9yZTogYmVmb3JlRGlmZixcbiAgICBhZnRlcjogYWZ0ZXJEaWZmLFxuICB9IGFzIERpZmY8TW9kZWxUeXBlLkNPTlRFU1Q+O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlmZkVsZWN0aW9uKGJlZm9yZTogbnVsbCwgYWZ0ZXI6IG1vZGVscy5JRWxlY3Rpb24gfCBtb2RlbHMuSVBhcnRpYWxFbGVjdGlvbik6IENyZWF0ZURpZmY8TW9kZWxUeXBlLkVMRUNUSU9OPlxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZFbGVjdGlvbihiZWZvcmU6IG1vZGVscy5JRWxlY3Rpb24gfCBtb2RlbHMuSVBhcnRpYWxFbGVjdGlvbiwgYWZ0ZXI6IG51bGwpOiBEZWxldGVEaWZmPE1vZGVsVHlwZS5FTEVDVElPTj5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmRWxlY3Rpb24oYmVmb3JlOiBtb2RlbHMuSUVsZWN0aW9uIHwgbW9kZWxzLklQYXJ0aWFsRWxlY3Rpb24sIGFmdGVyOiBtb2RlbHMuSUVsZWN0aW9uIHwgbW9kZWxzLklQYXJ0aWFsRWxlY3Rpb24pOiBVcGRhdGVEaWZmPE1vZGVsVHlwZS5FTEVDVElPTj4gfCBudWxsXG5leHBvcnQgZnVuY3Rpb24gZGlmZkVsZWN0aW9uKGJlZm9yZTogbW9kZWxzLklFbGVjdGlvbiB8IG1vZGVscy5JUGFydGlhbEVsZWN0aW9uIHwgbnVsbCwgYWZ0ZXI6IG1vZGVscy5JRWxlY3Rpb24gfCBtb2RlbHMuSVBhcnRpYWxFbGVjdGlvbiB8IG51bGwpOiBEaWZmPE1vZGVsVHlwZS5FTEVDVElPTj4gfCBudWxsIHtcbiAgY29uc3QgYmVmb3JlRGlmZjogbW9kZWxzLklQYXJ0aWFsRWxlY3Rpb24gfCBudWxsID0gYmVmb3JlID8gKHtcbiAgICBpZDogYmVmb3JlLmlkLFxuICAgIGVsZWN0aW9uRGF0ZTogKGJlZm9yZT8uZWxlY3Rpb25EYXRlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5lbGVjdGlvbkRhdGUgIT09IGFmdGVyPy5lbGVjdGlvbkRhdGUpID8gYmVmb3JlPy5lbGVjdGlvbkRhdGUgOiB1bmRlZmluZWQsXG4gICAgbmFtZTogKGJlZm9yZT8ubmFtZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubmFtZSAhPT0gYWZ0ZXI/Lm5hbWUpID8gYmVmb3JlPy5uYW1lIDogdW5kZWZpbmVkLFxuICAgIHR5cGU6IChiZWZvcmU/LnR5cGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnR5cGUgIT09IGFmdGVyPy50eXBlKSA/IGJlZm9yZT8udHlwZSA6IHVuZGVmaW5lZCxcbiAgICB0dXJmOiAoYmVmb3JlPy50dXJmICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy50dXJmICE9PSBhZnRlcj8udHVyZikgPyBiZWZvcmU/LnR1cmYgOiB1bmRlZmluZWQsXG4gIH0pIDogbnVsbDtcbiAgXG4gIGxldCBjaGFuZ2VzID0gMDtcbiAgY29uc3QgYWZ0ZXJEaWZmOiBtb2RlbHMuSVBhcnRpYWxFbGVjdGlvbiB8IG51bGwgPSBhZnRlciA/ICh7XG4gICAgaWQ6IGFmdGVyLmlkLFxuICAgIGVsZWN0aW9uRGF0ZTogKGFmdGVyPy5lbGVjdGlvbkRhdGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmVsZWN0aW9uRGF0ZSAhPT0gYWZ0ZXI/LmVsZWN0aW9uRGF0ZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmVsZWN0aW9uRGF0ZSA6IHVuZGVmaW5lZCxcbiAgICBuYW1lOiAoYWZ0ZXI/Lm5hbWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm5hbWUgIT09IGFmdGVyPy5uYW1lICYmICsrY2hhbmdlcykgPyBhZnRlcj8ubmFtZSA6IHVuZGVmaW5lZCxcbiAgICB0eXBlOiAoYWZ0ZXI/LnR5cGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnR5cGUgIT09IGFmdGVyPy50eXBlICYmICsrY2hhbmdlcykgPyBhZnRlcj8udHlwZSA6IHVuZGVmaW5lZCxcbiAgICB0dXJmOiAoYWZ0ZXI/LnR1cmYgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnR1cmYgIT09IGFmdGVyPy50dXJmICYmICsrY2hhbmdlcykgPyBhZnRlcj8udHVyZiA6IHVuZGVmaW5lZCxcbiAgfSkgOiBudWxsO1xuICBpZiAoYmVmb3JlICYmIGFmdGVyICYmIGNoYW5nZXMgPT09IDApIHsgcmV0dXJuIG51bGw7IH1cbiAgXG4gIHJldHVybiB7XG4gICAgbW9kZWw6IE1vZGVsVHlwZS5FTEVDVElPTixcbiAgICBiZWZvcmU6IGJlZm9yZURpZmYsXG4gICAgYWZ0ZXI6IGFmdGVyRGlmZixcbiAgfSBhcyBEaWZmPE1vZGVsVHlwZS5FTEVDVElPTj47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmVm90ZShiZWZvcmU6IG51bGwsIGFmdGVyOiBtb2RlbHMuSVZvdGUgfCBtb2RlbHMuSVBhcnRpYWxWb3RlKTogQ3JlYXRlRGlmZjxNb2RlbFR5cGUuVk9URT5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmVm90ZShiZWZvcmU6IG1vZGVscy5JVm90ZSB8IG1vZGVscy5JUGFydGlhbFZvdGUsIGFmdGVyOiBudWxsKTogRGVsZXRlRGlmZjxNb2RlbFR5cGUuVk9URT5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmVm90ZShiZWZvcmU6IG1vZGVscy5JVm90ZSB8IG1vZGVscy5JUGFydGlhbFZvdGUsIGFmdGVyOiBtb2RlbHMuSVZvdGUgfCBtb2RlbHMuSVBhcnRpYWxWb3RlKTogVXBkYXRlRGlmZjxNb2RlbFR5cGUuVk9URT4gfCBudWxsXG5leHBvcnQgZnVuY3Rpb24gZGlmZlZvdGUoYmVmb3JlOiBtb2RlbHMuSVZvdGUgfCBtb2RlbHMuSVBhcnRpYWxWb3RlIHwgbnVsbCwgYWZ0ZXI6IG1vZGVscy5JVm90ZSB8IG1vZGVscy5JUGFydGlhbFZvdGUgfCBudWxsKTogRGlmZjxNb2RlbFR5cGUuVk9URT4gfCBudWxsIHtcbiAgY29uc3QgYmVmb3JlRGlmZjogbW9kZWxzLklQYXJ0aWFsVm90ZSB8IG51bGwgPSBiZWZvcmUgPyAoe1xuICAgIG1ldGhvZDogKGJlZm9yZT8ubWV0aG9kICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5tZXRob2QgIT09IGFmdGVyPy5tZXRob2QpID8gYmVmb3JlPy5tZXRob2QgOiB1bmRlZmluZWQsXG4gICAgcGFydHk6IChiZWZvcmU/LnBhcnR5ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5wYXJ0eSAhPT0gYWZ0ZXI/LnBhcnR5KSA/IGJlZm9yZT8ucGFydHkgOiB1bmRlZmluZWQsXG4gICAgaXNzdWVkOiAoYmVmb3JlPy5pc3N1ZWQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lmlzc3VlZCAhPT0gYWZ0ZXI/Lmlzc3VlZCkgPyBiZWZvcmU/Lmlzc3VlZCA6IHVuZGVmaW5lZCxcbiAgICByZXR1cm5lZDogKGJlZm9yZT8ucmV0dXJuZWQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnJldHVybmVkICE9PSBhZnRlcj8ucmV0dXJuZWQpID8gYmVmb3JlPy5yZXR1cm5lZCA6IHVuZGVmaW5lZCxcbiAgICBjb3VudGVkOiAoYmVmb3JlPy5jb3VudGVkICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jb3VudGVkICE9PSBhZnRlcj8uY291bnRlZCkgPyBiZWZvcmU/LmNvdW50ZWQgOiB1bmRlZmluZWQsXG4gICAgcGVyc29uSWQ6IGJlZm9yZS5wZXJzb25JZCxcbiAgICBlbGVjdGlvbklkOiBiZWZvcmUuZWxlY3Rpb25JZCxcbiAgfSkgOiBudWxsO1xuICBcbiAgbGV0IGNoYW5nZXMgPSAwO1xuICBjb25zdCBhZnRlckRpZmY6IG1vZGVscy5JUGFydGlhbFZvdGUgfCBudWxsID0gYWZ0ZXIgPyAoe1xuICAgIG1ldGhvZDogKGFmdGVyPy5tZXRob2QgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm1ldGhvZCAhPT0gYWZ0ZXI/Lm1ldGhvZCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/Lm1ldGhvZCA6IHVuZGVmaW5lZCxcbiAgICBwYXJ0eTogKGFmdGVyPy5wYXJ0eSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ucGFydHkgIT09IGFmdGVyPy5wYXJ0eSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnBhcnR5IDogdW5kZWZpbmVkLFxuICAgIGlzc3VlZDogKGFmdGVyPy5pc3N1ZWQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lmlzc3VlZCAhPT0gYWZ0ZXI/Lmlzc3VlZCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/Lmlzc3VlZCA6IHVuZGVmaW5lZCxcbiAgICByZXR1cm5lZDogKGFmdGVyPy5yZXR1cm5lZCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ucmV0dXJuZWQgIT09IGFmdGVyPy5yZXR1cm5lZCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnJldHVybmVkIDogdW5kZWZpbmVkLFxuICAgIGNvdW50ZWQ6IChhZnRlcj8uY291bnRlZCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY291bnRlZCAhPT0gYWZ0ZXI/LmNvdW50ZWQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5jb3VudGVkIDogdW5kZWZpbmVkLFxuICAgIHBlcnNvbklkOiBhZnRlci5wZXJzb25JZCxcbiAgICBlbGVjdGlvbklkOiBhZnRlci5lbGVjdGlvbklkLFxuICB9KSA6IG51bGw7XG4gIGlmIChiZWZvcmUgJiYgYWZ0ZXIgJiYgY2hhbmdlcyA9PT0gMCkgeyByZXR1cm4gbnVsbDsgfVxuICBcbiAgcmV0dXJuIHtcbiAgICBtb2RlbDogTW9kZWxUeXBlLlZPVEUsXG4gICAgYmVmb3JlOiBiZWZvcmVEaWZmLFxuICAgIGFmdGVyOiBhZnRlckRpZmYsXG4gIH0gYXMgRGlmZjxNb2RlbFR5cGUuVk9URT47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmUmV0dXJucyhiZWZvcmU6IG51bGwsIGFmdGVyOiBtb2RlbHMuSVJldHVybnMgfCBtb2RlbHMuSVBhcnRpYWxSZXR1cm5zKTogQ3JlYXRlRGlmZjxNb2RlbFR5cGUuUkVUVVJOUz5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmUmV0dXJucyhiZWZvcmU6IG1vZGVscy5JUmV0dXJucyB8IG1vZGVscy5JUGFydGlhbFJldHVybnMsIGFmdGVyOiBudWxsKTogRGVsZXRlRGlmZjxNb2RlbFR5cGUuUkVUVVJOUz5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmUmV0dXJucyhiZWZvcmU6IG1vZGVscy5JUmV0dXJucyB8IG1vZGVscy5JUGFydGlhbFJldHVybnMsIGFmdGVyOiBtb2RlbHMuSVJldHVybnMgfCBtb2RlbHMuSVBhcnRpYWxSZXR1cm5zKTogVXBkYXRlRGlmZjxNb2RlbFR5cGUuUkVUVVJOUz4gfCBudWxsXG5leHBvcnQgZnVuY3Rpb24gZGlmZlJldHVybnMoYmVmb3JlOiBtb2RlbHMuSVJldHVybnMgfCBtb2RlbHMuSVBhcnRpYWxSZXR1cm5zIHwgbnVsbCwgYWZ0ZXI6IG1vZGVscy5JUmV0dXJucyB8IG1vZGVscy5JUGFydGlhbFJldHVybnMgfCBudWxsKTogRGlmZjxNb2RlbFR5cGUuUkVUVVJOUz4gfCBudWxsIHtcbiAgY29uc3QgYmVmb3JlRGlmZjogbW9kZWxzLklQYXJ0aWFsUmV0dXJucyB8IG51bGwgPSBiZWZvcmUgPyAoe1xuICAgIHBhcnR5OiBiZWZvcmUucGFydHksXG4gICAgcmFuazogYmVmb3JlLnJhbmssXG4gICAgdGFsbHk6IChiZWZvcmU/LnRhbGx5ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy50YWxseSAhPT0gYWZ0ZXI/LnRhbGx5KSA/IGJlZm9yZT8udGFsbHkgOiB1bmRlZmluZWQsXG4gICAgY29udGVzdElkOiBiZWZvcmUuY29udGVzdElkLFxuICAgIHR1cmZJZDogYmVmb3JlLnR1cmZJZCxcbiAgfSkgOiBudWxsO1xuICBcbiAgbGV0IGNoYW5nZXMgPSAwO1xuICBjb25zdCBhZnRlckRpZmY6IG1vZGVscy5JUGFydGlhbFJldHVybnMgfCBudWxsID0gYWZ0ZXIgPyAoe1xuICAgIHBhcnR5OiBhZnRlci5wYXJ0eSxcbiAgICByYW5rOiBhZnRlci5yYW5rLFxuICAgIHRhbGx5OiAoYWZ0ZXI/LnRhbGx5ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy50YWxseSAhPT0gYWZ0ZXI/LnRhbGx5ICYmICsrY2hhbmdlcykgPyBhZnRlcj8udGFsbHkgOiB1bmRlZmluZWQsXG4gICAgY29udGVzdElkOiBhZnRlci5jb250ZXN0SWQsXG4gICAgdHVyZklkOiBhZnRlci50dXJmSWQsXG4gIH0pIDogbnVsbDtcbiAgaWYgKGJlZm9yZSAmJiBhZnRlciAmJiBjaGFuZ2VzID09PSAwKSB7IHJldHVybiBudWxsOyB9XG4gIFxuICByZXR1cm4ge1xuICAgIG1vZGVsOiBNb2RlbFR5cGUuUkVUVVJOUyxcbiAgICBiZWZvcmU6IGJlZm9yZURpZmYsXG4gICAgYWZ0ZXI6IGFmdGVyRGlmZixcbiAgfSBhcyBEaWZmPE1vZGVsVHlwZS5SRVRVUk5TPjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZTY29yZShiZWZvcmU6IG51bGwsIGFmdGVyOiBtb2RlbHMuSVNjb3JlIHwgbW9kZWxzLklQYXJ0aWFsU2NvcmUpOiBDcmVhdGVEaWZmPE1vZGVsVHlwZS5TQ09SRT5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmU2NvcmUoYmVmb3JlOiBtb2RlbHMuSVNjb3JlIHwgbW9kZWxzLklQYXJ0aWFsU2NvcmUsIGFmdGVyOiBudWxsKTogRGVsZXRlRGlmZjxNb2RlbFR5cGUuU0NPUkU+XG5leHBvcnQgZnVuY3Rpb24gZGlmZlNjb3JlKGJlZm9yZTogbW9kZWxzLklTY29yZSB8IG1vZGVscy5JUGFydGlhbFNjb3JlLCBhZnRlcjogbW9kZWxzLklTY29yZSB8IG1vZGVscy5JUGFydGlhbFNjb3JlKTogVXBkYXRlRGlmZjxNb2RlbFR5cGUuU0NPUkU+IHwgbnVsbFxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZTY29yZShiZWZvcmU6IG1vZGVscy5JU2NvcmUgfCBtb2RlbHMuSVBhcnRpYWxTY29yZSB8IG51bGwsIGFmdGVyOiBtb2RlbHMuSVNjb3JlIHwgbW9kZWxzLklQYXJ0aWFsU2NvcmUgfCBudWxsKTogRGlmZjxNb2RlbFR5cGUuU0NPUkU+IHwgbnVsbCB7XG4gIGNvbnN0IGJlZm9yZURpZmY6IG1vZGVscy5JUGFydGlhbFNjb3JlIHwgbnVsbCA9IGJlZm9yZSA/ICh7XG4gICAgbmFtZTogYmVmb3JlLm5hbWUsXG4gICAgdmFsdWU6IChiZWZvcmU/LnZhbHVlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy52YWx1ZSAhPT0gYWZ0ZXI/LnZhbHVlKSA/IGJlZm9yZT8udmFsdWUgOiB1bmRlZmluZWQsXG4gICAgdXBkYXRlZEF0OiAoYmVmb3JlPy51cGRhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gYWZ0ZXI/LnVwZGF0ZWRBdCkgPyBiZWZvcmU/LnVwZGF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICBwZXJzb25JZDogYmVmb3JlLnBlcnNvbklkLFxuICB9KSA6IG51bGw7XG4gIFxuICBsZXQgY2hhbmdlcyA9IDA7XG4gIGNvbnN0IGFmdGVyRGlmZjogbW9kZWxzLklQYXJ0aWFsU2NvcmUgfCBudWxsID0gYWZ0ZXIgPyAoe1xuICAgIG5hbWU6IGFmdGVyLm5hbWUsXG4gICAgdmFsdWU6IChhZnRlcj8udmFsdWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnZhbHVlICE9PSBhZnRlcj8udmFsdWUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy52YWx1ZSA6IHVuZGVmaW5lZCxcbiAgICB1cGRhdGVkQXQ6IChhZnRlcj8udXBkYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy51cGRhdGVkQXQgIT09IGFmdGVyPy51cGRhdGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy51cGRhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgcGVyc29uSWQ6IGFmdGVyLnBlcnNvbklkLFxuICB9KSA6IG51bGw7XG4gIGlmIChiZWZvcmUgJiYgYWZ0ZXIgJiYgY2hhbmdlcyA9PT0gMCkgeyByZXR1cm4gbnVsbDsgfVxuICBcbiAgcmV0dXJuIHtcbiAgICBtb2RlbDogTW9kZWxUeXBlLlNDT1JFLFxuICAgIGJlZm9yZTogYmVmb3JlRGlmZixcbiAgICBhZnRlcjogYWZ0ZXJEaWZmLFxuICB9IGFzIERpZmY8TW9kZWxUeXBlLlNDT1JFPjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZQZXJzb24oYmVmb3JlOiBudWxsLCBhZnRlcjogbW9kZWxzLklQZXJzb24gfCBtb2RlbHMuSVBhcnRpYWxQZXJzb24pOiBDcmVhdGVEaWZmPE1vZGVsVHlwZS5QRVJTT04+XG5leHBvcnQgZnVuY3Rpb24gZGlmZlBlcnNvbihiZWZvcmU6IG1vZGVscy5JUGVyc29uIHwgbW9kZWxzLklQYXJ0aWFsUGVyc29uLCBhZnRlcjogbnVsbCk6IERlbGV0ZURpZmY8TW9kZWxUeXBlLlBFUlNPTj5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmUGVyc29uKGJlZm9yZTogbW9kZWxzLklQZXJzb24gfCBtb2RlbHMuSVBhcnRpYWxQZXJzb24sIGFmdGVyOiBtb2RlbHMuSVBlcnNvbiB8IG1vZGVscy5JUGFydGlhbFBlcnNvbik6IFVwZGF0ZURpZmY8TW9kZWxUeXBlLlBFUlNPTj4gfCBudWxsXG5leHBvcnQgZnVuY3Rpb24gZGlmZlBlcnNvbihiZWZvcmU6IG1vZGVscy5JUGVyc29uIHwgbW9kZWxzLklQYXJ0aWFsUGVyc29uIHwgbnVsbCwgYWZ0ZXI6IG1vZGVscy5JUGVyc29uIHwgbW9kZWxzLklQYXJ0aWFsUGVyc29uIHwgbnVsbCk6IERpZmY8TW9kZWxUeXBlLlBFUlNPTj4gfCBudWxsIHtcbiAgY29uc3QgYmVmb3JlRGlmZjogbW9kZWxzLklQYXJ0aWFsUGVyc29uIHwgbnVsbCA9IGJlZm9yZSA/ICh7XG4gICAgaWQ6IGJlZm9yZS5pZCxcbiAgICBjb3VudHlJZDogKGJlZm9yZT8uY291bnR5SWQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNvdW50eUlkICE9PSBhZnRlcj8uY291bnR5SWQpID8gYmVmb3JlPy5jb3VudHlJZCA6IHVuZGVmaW5lZCxcbiAgICBhZmZpZGF2aXROdW06IChiZWZvcmU/LmFmZmlkYXZpdE51bSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYWZmaWRhdml0TnVtICE9PSBhZnRlcj8uYWZmaWRhdml0TnVtKSA/IGJlZm9yZT8uYWZmaWRhdml0TnVtIDogdW5kZWZpbmVkLFxuICAgIHByZWNpbmN0OiAoYmVmb3JlPy5wcmVjaW5jdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ucHJlY2luY3QgIT09IGFmdGVyPy5wcmVjaW5jdCkgPyBiZWZvcmU/LnByZWNpbmN0IDogdW5kZWZpbmVkLFxuICAgIGNyZWF0ZWRBdDogKGJlZm9yZT8uY3JlYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5jcmVhdGVkQXQgIT09IGFmdGVyPy5jcmVhdGVkQXQpID8gYmVmb3JlPy5jcmVhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgdXBkYXRlZEF0OiAoYmVmb3JlPy51cGRhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnVwZGF0ZWRBdCAhPT0gYWZ0ZXI/LnVwZGF0ZWRBdCkgPyBiZWZvcmU/LnVwZGF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICBkZWxldGVkQXQ6IChiZWZvcmU/LmRlbGV0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZGVsZXRlZEF0ICE9PSBhZnRlcj8uZGVsZXRlZEF0KSA/IGJlZm9yZT8uZGVsZXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIHByZU5vbWluYWw6IChiZWZvcmU/LnByZU5vbWluYWwgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnByZU5vbWluYWwgIT09IGFmdGVyPy5wcmVOb21pbmFsKSA/IGJlZm9yZT8ucHJlTm9taW5hbCA6IHVuZGVmaW5lZCxcbiAgICBmaXJzdE5hbWU6IChiZWZvcmU/LmZpcnN0TmFtZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZmlyc3ROYW1lICE9PSBhZnRlcj8uZmlyc3ROYW1lKSA/IGJlZm9yZT8uZmlyc3ROYW1lIDogdW5kZWZpbmVkLFxuICAgIG1pZGRsZU5hbWU6IChiZWZvcmU/Lm1pZGRsZU5hbWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm1pZGRsZU5hbWUgIT09IGFmdGVyPy5taWRkbGVOYW1lKSA/IGJlZm9yZT8ubWlkZGxlTmFtZSA6IHVuZGVmaW5lZCxcbiAgICBsYXN0TmFtZTogKGJlZm9yZT8ubGFzdE5hbWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lmxhc3ROYW1lICE9PSBhZnRlcj8ubGFzdE5hbWUpID8gYmVmb3JlPy5sYXN0TmFtZSA6IHVuZGVmaW5lZCxcbiAgICBzdWZmaXg6IChiZWZvcmU/LnN1ZmZpeCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc3VmZml4ICE9PSBhZnRlcj8uc3VmZml4KSA/IGJlZm9yZT8uc3VmZml4IDogdW5kZWZpbmVkLFxuICAgIHBvc3ROb21pbmFsOiAoYmVmb3JlPy5wb3N0Tm9taW5hbCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ucG9zdE5vbWluYWwgIT09IGFmdGVyPy5wb3N0Tm9taW5hbCkgPyBiZWZvcmU/LnBvc3ROb21pbmFsIDogdW5kZWZpbmVkLFxuICAgIG5pY2tuYW1lOiAoYmVmb3JlPy5uaWNrbmFtZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubmlja25hbWUgIT09IGFmdGVyPy5uaWNrbmFtZSkgPyBiZWZvcmU/Lm5pY2tuYW1lIDogdW5kZWZpbmVkLFxuICAgIGJpcnRoRGF0ZTogKGJlZm9yZT8uYmlydGhEYXRlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5iaXJ0aERhdGUgIT09IGFmdGVyPy5iaXJ0aERhdGUpID8gYmVmb3JlPy5iaXJ0aERhdGUgOiB1bmRlZmluZWQsXG4gICAgYmlydGhTdGF0ZTogKGJlZm9yZT8uYmlydGhTdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYmlydGhTdGF0ZSAhPT0gYWZ0ZXI/LmJpcnRoU3RhdGUpID8gYmVmb3JlPy5iaXJ0aFN0YXRlIDogdW5kZWZpbmVkLFxuICAgIGJpcnRoQ291bnRyeTogKGJlZm9yZT8uYmlydGhDb3VudHJ5ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5iaXJ0aENvdW50cnkgIT09IGFmdGVyPy5iaXJ0aENvdW50cnkpID8gYmVmb3JlPy5iaXJ0aENvdW50cnkgOiB1bmRlZmluZWQsXG4gICAgZ2VuZGVyOiAoYmVmb3JlPy5nZW5kZXIgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmdlbmRlciAhPT0gYWZ0ZXI/LmdlbmRlcikgPyBiZWZvcmU/LmdlbmRlciA6IHVuZGVmaW5lZCxcbiAgICBwYXJ0eTogKGJlZm9yZT8ucGFydHkgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnBhcnR5ICE9PSBhZnRlcj8ucGFydHkpID8gYmVmb3JlPy5wYXJ0eSA6IHVuZGVmaW5lZCxcbiAgICBiYWxsb3Q6IChiZWZvcmU/LmJhbGxvdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYmFsbG90ICE9PSBhZnRlcj8uYmFsbG90KSA/IGJlZm9yZT8uYmFsbG90IDogdW5kZWZpbmVkLFxuICAgIHJlbGlnaW9uOiAoYmVmb3JlPy5yZWxpZ2lvbiAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ucmVsaWdpb24gIT09IGFmdGVyPy5yZWxpZ2lvbikgPyBiZWZvcmU/LnJlbGlnaW9uIDogdW5kZWZpbmVkLFxuICAgIGVkdWNhdGlvbjogKGJlZm9yZT8uZWR1Y2F0aW9uICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5lZHVjYXRpb24gIT09IGFmdGVyPy5lZHVjYXRpb24pID8gYmVmb3JlPy5lZHVjYXRpb24gOiB1bmRlZmluZWQsXG4gICAgbWlsaXRhcnk6IChiZWZvcmU/Lm1pbGl0YXJ5ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5taWxpdGFyeSAhPT0gYWZ0ZXI/Lm1pbGl0YXJ5KSA/IGJlZm9yZT8ubWlsaXRhcnkgOiB1bmRlZmluZWQsXG4gICAgaW5jb21lOiAoYmVmb3JlPy5pbmNvbWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmluY29tZSAhPT0gYWZ0ZXI/LmluY29tZSkgPyBiZWZvcmU/LmluY29tZSA6IHVuZGVmaW5lZCxcbiAgICBwcmltYXJ5TGFuZ3VhZ2VDb2RlOiAoYmVmb3JlPy5wcmltYXJ5TGFuZ3VhZ2VDb2RlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5wcmltYXJ5TGFuZ3VhZ2VDb2RlICE9PSBhZnRlcj8ucHJpbWFyeUxhbmd1YWdlQ29kZSkgPyBiZWZvcmU/LnByaW1hcnlMYW5ndWFnZUNvZGUgOiB1bmRlZmluZWQsXG4gICAgc2Vjb25kYXJ5TGFuZ3VhZ2VDb2RlOiAoYmVmb3JlPy5zZWNvbmRhcnlMYW5ndWFnZUNvZGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnNlY29uZGFyeUxhbmd1YWdlQ29kZSAhPT0gYWZ0ZXI/LnNlY29uZGFyeUxhbmd1YWdlQ29kZSkgPyBiZWZvcmU/LnNlY29uZGFyeUxhbmd1YWdlQ29kZSA6IHVuZGVmaW5lZCxcbiAgICBwcmltYXJ5RXRobmljaXR5Q29kZTogKGJlZm9yZT8ucHJpbWFyeUV0aG5pY2l0eUNvZGUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnByaW1hcnlFdGhuaWNpdHlDb2RlICE9PSBhZnRlcj8ucHJpbWFyeUV0aG5pY2l0eUNvZGUpID8gYmVmb3JlPy5wcmltYXJ5RXRobmljaXR5Q29kZSA6IHVuZGVmaW5lZCxcbiAgICBzZWNvbmRhcnlFdGhuaWNpdHlDb2RlOiAoYmVmb3JlPy5zZWNvbmRhcnlFdGhuaWNpdHlDb2RlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5zZWNvbmRhcnlFdGhuaWNpdHlDb2RlICE9PSBhZnRlcj8uc2Vjb25kYXJ5RXRobmljaXR5Q29kZSkgPyBiZWZvcmU/LnNlY29uZGFyeUV0aG5pY2l0eUNvZGUgOiB1bmRlZmluZWQsXG4gIH0pIDogbnVsbDtcbiAgXG4gIGxldCBjaGFuZ2VzID0gMDtcbiAgY29uc3QgYWZ0ZXJEaWZmOiBtb2RlbHMuSVBhcnRpYWxQZXJzb24gfCBudWxsID0gYWZ0ZXIgPyAoe1xuICAgIGlkOiBhZnRlci5pZCxcbiAgICBjb3VudHlJZDogKGFmdGVyPy5jb3VudHlJZCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uY291bnR5SWQgIT09IGFmdGVyPy5jb3VudHlJZCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmNvdW50eUlkIDogdW5kZWZpbmVkLFxuICAgIGFmZmlkYXZpdE51bTogKGFmdGVyPy5hZmZpZGF2aXROdW0gIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmFmZmlkYXZpdE51bSAhPT0gYWZ0ZXI/LmFmZmlkYXZpdE51bSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmFmZmlkYXZpdE51bSA6IHVuZGVmaW5lZCxcbiAgICBwcmVjaW5jdDogKGFmdGVyPy5wcmVjaW5jdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ucHJlY2luY3QgIT09IGFmdGVyPy5wcmVjaW5jdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnByZWNpbmN0IDogdW5kZWZpbmVkLFxuICAgIGNyZWF0ZWRBdDogKGFmdGVyPy5jcmVhdGVkQXQgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmNyZWF0ZWRBdCAhPT0gYWZ0ZXI/LmNyZWF0ZWRBdCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmNyZWF0ZWRBdCA6IHVuZGVmaW5lZCxcbiAgICB1cGRhdGVkQXQ6IChhZnRlcj8udXBkYXRlZEF0ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy51cGRhdGVkQXQgIT09IGFmdGVyPy51cGRhdGVkQXQgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy51cGRhdGVkQXQgOiB1bmRlZmluZWQsXG4gICAgZGVsZXRlZEF0OiAoYWZ0ZXI/LmRlbGV0ZWRBdCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uZGVsZXRlZEF0ICE9PSBhZnRlcj8uZGVsZXRlZEF0ICYmICsrY2hhbmdlcykgPyBhZnRlcj8uZGVsZXRlZEF0IDogdW5kZWZpbmVkLFxuICAgIHByZU5vbWluYWw6IChhZnRlcj8ucHJlTm9taW5hbCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ucHJlTm9taW5hbCAhPT0gYWZ0ZXI/LnByZU5vbWluYWwgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5wcmVOb21pbmFsIDogdW5kZWZpbmVkLFxuICAgIGZpcnN0TmFtZTogKGFmdGVyPy5maXJzdE5hbWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmZpcnN0TmFtZSAhPT0gYWZ0ZXI/LmZpcnN0TmFtZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmZpcnN0TmFtZSA6IHVuZGVmaW5lZCxcbiAgICBtaWRkbGVOYW1lOiAoYWZ0ZXI/Lm1pZGRsZU5hbWUgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm1pZGRsZU5hbWUgIT09IGFmdGVyPy5taWRkbGVOYW1lICYmICsrY2hhbmdlcykgPyBhZnRlcj8ubWlkZGxlTmFtZSA6IHVuZGVmaW5lZCxcbiAgICBsYXN0TmFtZTogKGFmdGVyPy5sYXN0TmFtZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ubGFzdE5hbWUgIT09IGFmdGVyPy5sYXN0TmFtZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/Lmxhc3ROYW1lIDogdW5kZWZpbmVkLFxuICAgIHN1ZmZpeDogKGFmdGVyPy5zdWZmaXggIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnN1ZmZpeCAhPT0gYWZ0ZXI/LnN1ZmZpeCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnN1ZmZpeCA6IHVuZGVmaW5lZCxcbiAgICBwb3N0Tm9taW5hbDogKGFmdGVyPy5wb3N0Tm9taW5hbCAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8ucG9zdE5vbWluYWwgIT09IGFmdGVyPy5wb3N0Tm9taW5hbCAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnBvc3ROb21pbmFsIDogdW5kZWZpbmVkLFxuICAgIG5pY2tuYW1lOiAoYWZ0ZXI/Lm5pY2tuYW1lICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5uaWNrbmFtZSAhPT0gYWZ0ZXI/Lm5pY2tuYW1lICYmICsrY2hhbmdlcykgPyBhZnRlcj8ubmlja25hbWUgOiB1bmRlZmluZWQsXG4gICAgYmlydGhEYXRlOiAoYWZ0ZXI/LmJpcnRoRGF0ZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYmlydGhEYXRlICE9PSBhZnRlcj8uYmlydGhEYXRlICYmICsrY2hhbmdlcykgPyBhZnRlcj8uYmlydGhEYXRlIDogdW5kZWZpbmVkLFxuICAgIGJpcnRoU3RhdGU6IChhZnRlcj8uYmlydGhTdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uYmlydGhTdGF0ZSAhPT0gYWZ0ZXI/LmJpcnRoU3RhdGUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5iaXJ0aFN0YXRlIDogdW5kZWZpbmVkLFxuICAgIGJpcnRoQ291bnRyeTogKGFmdGVyPy5iaXJ0aENvdW50cnkgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LmJpcnRoQ291bnRyeSAhPT0gYWZ0ZXI/LmJpcnRoQ291bnRyeSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LmJpcnRoQ291bnRyeSA6IHVuZGVmaW5lZCxcbiAgICBnZW5kZXI6IChhZnRlcj8uZ2VuZGVyICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5nZW5kZXIgIT09IGFmdGVyPy5nZW5kZXIgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5nZW5kZXIgOiB1bmRlZmluZWQsXG4gICAgcGFydHk6IChhZnRlcj8ucGFydHkgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnBhcnR5ICE9PSBhZnRlcj8ucGFydHkgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5wYXJ0eSA6IHVuZGVmaW5lZCxcbiAgICBiYWxsb3Q6IChhZnRlcj8uYmFsbG90ICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5iYWxsb3QgIT09IGFmdGVyPy5iYWxsb3QgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5iYWxsb3QgOiB1bmRlZmluZWQsXG4gICAgcmVsaWdpb246IChhZnRlcj8ucmVsaWdpb24gIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/LnJlbGlnaW9uICE9PSBhZnRlcj8ucmVsaWdpb24gJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5yZWxpZ2lvbiA6IHVuZGVmaW5lZCxcbiAgICBlZHVjYXRpb246IChhZnRlcj8uZWR1Y2F0aW9uICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5lZHVjYXRpb24gIT09IGFmdGVyPy5lZHVjYXRpb24gJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5lZHVjYXRpb24gOiB1bmRlZmluZWQsXG4gICAgbWlsaXRhcnk6IChhZnRlcj8ubWlsaXRhcnkgIT09IHVuZGVmaW5lZCAmJiBiZWZvcmU/Lm1pbGl0YXJ5ICE9PSBhZnRlcj8ubWlsaXRhcnkgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5taWxpdGFyeSA6IHVuZGVmaW5lZCxcbiAgICBpbmNvbWU6IChhZnRlcj8uaW5jb21lICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5pbmNvbWUgIT09IGFmdGVyPy5pbmNvbWUgJiYgKytjaGFuZ2VzKSA/IGFmdGVyPy5pbmNvbWUgOiB1bmRlZmluZWQsXG4gICAgcHJpbWFyeUxhbmd1YWdlQ29kZTogKGFmdGVyPy5wcmltYXJ5TGFuZ3VhZ2VDb2RlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5wcmltYXJ5TGFuZ3VhZ2VDb2RlICE9PSBhZnRlcj8ucHJpbWFyeUxhbmd1YWdlQ29kZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnByaW1hcnlMYW5ndWFnZUNvZGUgOiB1bmRlZmluZWQsXG4gICAgc2Vjb25kYXJ5TGFuZ3VhZ2VDb2RlOiAoYWZ0ZXI/LnNlY29uZGFyeUxhbmd1YWdlQ29kZSAhPT0gdW5kZWZpbmVkICYmIGJlZm9yZT8uc2Vjb25kYXJ5TGFuZ3VhZ2VDb2RlICE9PSBhZnRlcj8uc2Vjb25kYXJ5TGFuZ3VhZ2VDb2RlICYmICsrY2hhbmdlcykgPyBhZnRlcj8uc2Vjb25kYXJ5TGFuZ3VhZ2VDb2RlIDogdW5kZWZpbmVkLFxuICAgIHByaW1hcnlFdGhuaWNpdHlDb2RlOiAoYWZ0ZXI/LnByaW1hcnlFdGhuaWNpdHlDb2RlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5wcmltYXJ5RXRobmljaXR5Q29kZSAhPT0gYWZ0ZXI/LnByaW1hcnlFdGhuaWNpdHlDb2RlICYmICsrY2hhbmdlcykgPyBhZnRlcj8ucHJpbWFyeUV0aG5pY2l0eUNvZGUgOiB1bmRlZmluZWQsXG4gICAgc2Vjb25kYXJ5RXRobmljaXR5Q29kZTogKGFmdGVyPy5zZWNvbmRhcnlFdGhuaWNpdHlDb2RlICE9PSB1bmRlZmluZWQgJiYgYmVmb3JlPy5zZWNvbmRhcnlFdGhuaWNpdHlDb2RlICE9PSBhZnRlcj8uc2Vjb25kYXJ5RXRobmljaXR5Q29kZSAmJiArK2NoYW5nZXMpID8gYWZ0ZXI/LnNlY29uZGFyeUV0aG5pY2l0eUNvZGUgOiB1bmRlZmluZWQsXG4gIH0pIDogbnVsbDtcbiAgaWYgKGJlZm9yZSAmJiBhZnRlciAmJiBjaGFuZ2VzID09PSAwKSB7IHJldHVybiBudWxsOyB9XG4gIFxuICByZXR1cm4ge1xuICAgIG1vZGVsOiBNb2RlbFR5cGUuUEVSU09OLFxuICAgIGJlZm9yZTogYmVmb3JlRGlmZixcbiAgICBhZnRlcjogYWZ0ZXJEaWZmLFxuICB9IGFzIERpZmY8TW9kZWxUeXBlLlBFUlNPTj47XG59XG5cbiJdfQ==