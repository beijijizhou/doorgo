import { Database } from 'better-sqlite3';
import * as Models from './models.js';
import * as Diff from './diffs.js';
import * as enums from './enums.js';
import { IMetadata, IAddress, ITurf, IEmail, IPhone, IPersonAddress, IPersonPhone, IAccount, IExperience, ICampaign, IContest, IElection, IVote, IReturns, IScore, IPerson } from './models.js';
export declare function database(db: Database, onDiff: (diff: Diff.UniverseDiff) => void): {
    indexes: {
        create(): void;
        delete(): void;
    };
    Metadata: {
        getById(key: string): Models.IMetadata | null;
        insert(data: Models.IPartialMetadata, silent?: boolean): Diff.CreateDiff<Diff.ModelType.METADATA> | null;
        upsert(data: Models.IPartialMetadata, silent?: boolean): Diff.CreateDiff<Diff.ModelType.METADATA> | Diff.UpdateDiff<Diff.ModelType.METADATA> | null;
        delete(key: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.METADATA> | null;
        apply(diff: Diff.Diff<Diff.ModelType.METADATA>): Diff.Diff<Diff.ModelType.METADATA> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.METADATA>): Diff.Diff<Diff.ModelType.METADATA> | null;
    };
    Address: {
        getById(id: string): Models.IAddress | null;
        insert(data: Models.IPartialAddress, silent?: boolean): Diff.CreateDiff<Diff.ModelType.ADDRESS> | null;
        upsert(data: Models.IPartialAddress, silent?: boolean): Diff.CreateDiff<Diff.ModelType.ADDRESS> | Diff.UpdateDiff<Diff.ModelType.ADDRESS> | null;
        delete(id: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.ADDRESS> | null;
        apply(diff: Diff.Diff<Diff.ModelType.ADDRESS>): Diff.Diff<Diff.ModelType.ADDRESS> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.ADDRESS>): Diff.Diff<Diff.ModelType.ADDRESS> | null;
    };
    Turf: {
        getById(id: string): Models.ITurf | null;
        insert(data: Models.IPartialTurf, silent?: boolean): Diff.CreateDiff<Diff.ModelType.TURF> | null;
        upsert(data: Models.IPartialTurf, silent?: boolean): Diff.CreateDiff<Diff.ModelType.TURF> | Diff.UpdateDiff<Diff.ModelType.TURF> | null;
        delete(id: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.TURF> | null;
        apply(diff: Diff.Diff<Diff.ModelType.TURF>): Diff.Diff<Diff.ModelType.TURF> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.TURF>): Diff.Diff<Diff.ModelType.TURF> | null;
    };
    Email: {
        getById(personId: string, email: string): Models.IEmail | null;
        insert(data: Models.IPartialEmail, silent?: boolean): Diff.CreateDiff<Diff.ModelType.EMAIL> | null;
        upsert(data: Models.IPartialEmail, silent?: boolean): Diff.CreateDiff<Diff.ModelType.EMAIL> | Diff.UpdateDiff<Diff.ModelType.EMAIL> | null;
        delete(personId: string, email: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.EMAIL> | null;
        apply(diff: Diff.Diff<Diff.ModelType.EMAIL>): Diff.Diff<Diff.ModelType.EMAIL> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.EMAIL>): Diff.Diff<Diff.ModelType.EMAIL> | null;
    };
    Phone: {
        getById(number: string): Models.IPhone | null;
        insert(data: Models.IPartialPhone, silent?: boolean): Diff.CreateDiff<Diff.ModelType.PHONE> | null;
        upsert(data: Models.IPartialPhone, silent?: boolean): Diff.CreateDiff<Diff.ModelType.PHONE> | Diff.UpdateDiff<Diff.ModelType.PHONE> | null;
        delete(number: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.PHONE> | null;
        apply(diff: Diff.Diff<Diff.ModelType.PHONE>): Diff.Diff<Diff.ModelType.PHONE> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.PHONE>): Diff.Diff<Diff.ModelType.PHONE> | null;
    };
    PersonAddress: {
        getById(personId: string, addressId: string): Models.IPersonAddress | null;
        insert(data: Models.IPartialPersonAddress, silent?: boolean): Diff.CreateDiff<Diff.ModelType.PERSON_ADDRESS> | null;
        upsert(data: Models.IPartialPersonAddress, silent?: boolean): Diff.CreateDiff<Diff.ModelType.PERSON_ADDRESS> | Diff.UpdateDiff<Diff.ModelType.PERSON_ADDRESS> | null;
        delete(personId: string, addressId: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.PERSON_ADDRESS> | null;
        apply(diff: Diff.Diff<Diff.ModelType.PERSON_ADDRESS>): Diff.Diff<Diff.ModelType.PERSON_ADDRESS> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.PERSON_ADDRESS>): Diff.Diff<Diff.ModelType.PERSON_ADDRESS> | null;
    };
    PersonPhone: {
        getById(personId: string, phoneId: string): Models.IPersonPhone | null;
        insert(data: Models.IPartialPersonPhone, silent?: boolean): Diff.CreateDiff<Diff.ModelType.PERSON_PHONE> | null;
        upsert(data: Models.IPartialPersonPhone, silent?: boolean): Diff.CreateDiff<Diff.ModelType.PERSON_PHONE> | Diff.UpdateDiff<Diff.ModelType.PERSON_PHONE> | null;
        delete(personId: string, phoneId: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.PERSON_PHONE> | null;
        apply(diff: Diff.Diff<Diff.ModelType.PERSON_PHONE>): Diff.Diff<Diff.ModelType.PERSON_PHONE> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.PERSON_PHONE>): Diff.Diff<Diff.ModelType.PERSON_PHONE> | null;
    };
    Account: {
        getById(personId: string, accountType: string, accountId: string): Models.IAccount | null;
        insert(data: Models.IPartialAccount, silent?: boolean): Diff.CreateDiff<Diff.ModelType.ACCOUNT> | null;
        upsert(data: Models.IPartialAccount, silent?: boolean): Diff.CreateDiff<Diff.ModelType.ACCOUNT> | Diff.UpdateDiff<Diff.ModelType.ACCOUNT> | null;
        delete(personId: string, accountType: enums.AccountType, accountId: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.ACCOUNT> | null;
        apply(diff: Diff.Diff<Diff.ModelType.ACCOUNT>): Diff.Diff<Diff.ModelType.ACCOUNT> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.ACCOUNT>): Diff.Diff<Diff.ModelType.ACCOUNT> | null;
    };
    Experience: {
        getById(personId: string, type: string, employer: string, role: string): Models.IExperience | null;
        insert(data: Models.IPartialExperience, silent?: boolean): Diff.CreateDiff<Diff.ModelType.EXPERIENCE> | null;
        upsert(data: Models.IPartialExperience, silent?: boolean): Diff.CreateDiff<Diff.ModelType.EXPERIENCE> | Diff.UpdateDiff<Diff.ModelType.EXPERIENCE> | null;
        delete(personId: string, type: enums.ExperienceType, employer: string, role: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.EXPERIENCE> | null;
        apply(diff: Diff.Diff<Diff.ModelType.EXPERIENCE>): Diff.Diff<Diff.ModelType.EXPERIENCE> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.EXPERIENCE>): Diff.Diff<Diff.ModelType.EXPERIENCE> | null;
    };
    Campaign: {
        getById(id: string): Models.ICampaign | null;
        insert(data: Models.IPartialCampaign, silent?: boolean): Diff.CreateDiff<Diff.ModelType.CAMPAIGN> | null;
        upsert(data: Models.IPartialCampaign, silent?: boolean): Diff.CreateDiff<Diff.ModelType.CAMPAIGN> | Diff.UpdateDiff<Diff.ModelType.CAMPAIGN> | null;
        delete(id: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.CAMPAIGN> | null;
        apply(diff: Diff.Diff<Diff.ModelType.CAMPAIGN>): Diff.Diff<Diff.ModelType.CAMPAIGN> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.CAMPAIGN>): Diff.Diff<Diff.ModelType.CAMPAIGN> | null;
    };
    Contest: {
        getById(id: string): Models.IContest | null;
        insert(data: Models.IPartialContest, silent?: boolean): Diff.CreateDiff<Diff.ModelType.CONTEST> | null;
        upsert(data: Models.IPartialContest, silent?: boolean): Diff.CreateDiff<Diff.ModelType.CONTEST> | Diff.UpdateDiff<Diff.ModelType.CONTEST> | null;
        delete(id: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.CONTEST> | null;
        apply(diff: Diff.Diff<Diff.ModelType.CONTEST>): Diff.Diff<Diff.ModelType.CONTEST> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.CONTEST>): Diff.Diff<Diff.ModelType.CONTEST> | null;
    };
    Election: {
        getById(id: string): Models.IElection | null;
        insert(data: Models.IPartialElection, silent?: boolean): Diff.CreateDiff<Diff.ModelType.ELECTION> | null;
        upsert(data: Models.IPartialElection, silent?: boolean): Diff.CreateDiff<Diff.ModelType.ELECTION> | Diff.UpdateDiff<Diff.ModelType.ELECTION> | null;
        delete(id: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.ELECTION> | null;
        apply(diff: Diff.Diff<Diff.ModelType.ELECTION>): Diff.Diff<Diff.ModelType.ELECTION> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.ELECTION>): Diff.Diff<Diff.ModelType.ELECTION> | null;
    };
    Vote: {
        getById(personId: string, electionId: string): Models.IVote | null;
        insert(data: Models.IPartialVote, silent?: boolean): Diff.CreateDiff<Diff.ModelType.VOTE> | null;
        upsert(data: Models.IPartialVote, silent?: boolean): Diff.CreateDiff<Diff.ModelType.VOTE> | Diff.UpdateDiff<Diff.ModelType.VOTE> | null;
        delete(personId: string, electionId: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.VOTE> | null;
        apply(diff: Diff.Diff<Diff.ModelType.VOTE>): Diff.Diff<Diff.ModelType.VOTE> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.VOTE>): Diff.Diff<Diff.ModelType.VOTE> | null;
    };
    Returns: {
        getById(contestId: string, turfId: string, party: string, rank: string): Models.IReturns | null;
        insert(data: Models.IPartialReturns, silent?: boolean): Diff.CreateDiff<Diff.ModelType.RETURNS> | null;
        upsert(data: Models.IPartialReturns, silent?: boolean): Diff.CreateDiff<Diff.ModelType.RETURNS> | Diff.UpdateDiff<Diff.ModelType.RETURNS> | null;
        delete(contestId: string, turfId: string, party: enums.Party, rank: number, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.RETURNS> | null;
        apply(diff: Diff.Diff<Diff.ModelType.RETURNS>): Diff.Diff<Diff.ModelType.RETURNS> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.RETURNS>): Diff.Diff<Diff.ModelType.RETURNS> | null;
    };
    Score: {
        getById(personId: string, name: string): Models.IScore | null;
        insert(data: Models.IPartialScore, silent?: boolean): Diff.CreateDiff<Diff.ModelType.SCORE> | null;
        upsert(data: Models.IPartialScore, silent?: boolean): Diff.CreateDiff<Diff.ModelType.SCORE> | Diff.UpdateDiff<Diff.ModelType.SCORE> | null;
        delete(personId: string, name: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.SCORE> | null;
        apply(diff: Diff.Diff<Diff.ModelType.SCORE>): Diff.Diff<Diff.ModelType.SCORE> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.SCORE>): Diff.Diff<Diff.ModelType.SCORE> | null;
    };
    Person: {
        getById(id: string): Models.IPerson | null;
        insert(data: Models.IPartialPerson, silent?: boolean): Diff.CreateDiff<Diff.ModelType.PERSON> | null;
        upsert(data: Models.IPartialPerson, silent?: boolean): Diff.CreateDiff<Diff.ModelType.PERSON> | Diff.UpdateDiff<Diff.ModelType.PERSON> | null;
        delete(id: string, silent?: boolean): Diff.DeleteDiff<Diff.ModelType.PERSON> | null;
        apply(diff: Diff.Diff<Diff.ModelType.PERSON>): Diff.Diff<Diff.ModelType.PERSON> | null;
        rollback(diff: Diff.Diff<Diff.ModelType.PERSON>): Diff.Diff<Diff.ModelType.PERSON> | null;
    };
};
