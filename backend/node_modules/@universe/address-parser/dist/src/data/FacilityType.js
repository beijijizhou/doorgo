import { aliases, FacilityType } from '@universe/models';
import { normalize, titleCase } from '../parser/utils.js';
const FacilityTypeMapping = {};
for (const abbr of Object.keys(aliases.FacilityType)) {
    FacilityTypeMapping[normalize(abbr)] = abbr;
    for (const val of aliases.FacilityType[abbr]) {
        FacilityTypeMapping[normalize(val)] = abbr;
    }
}
export function toFacilityType(val) {
    return FacilityTypeMapping[normalize(val)];
}
export function facilityTypeString(type) {
    if (type === null) {
        return null;
    }
    type = toFacilityType(type);
    return titleCase(aliases.FacilityType[normalize(type)][0]);
}
export function isFacilityType(val) {
    return !!FacilityTypeMapping[normalize(val)];
}
const urbanizations = new Set([
    FacilityType.URB,
    FacilityType.EXT,
    FacilityType.MANS,
    FacilityType.EST,
    FacilityType.ALT,
    FacilityType.BDA,
    FacilityType.BO,
    FacilityType.BOSQUE,
    FacilityType.BRISA,
    FacilityType.CIUDAD,
    FacilityType.COLINA,
    FacilityType.CHALETS,
    FacilityType.COMUNIDAD,
    FacilityType.EST,
    FacilityType.EXT,
    FacilityType.HACIENDA,
    FacilityType.JARD,
    FacilityType.IND,
    FacilityType.LOMA,
    FacilityType.MANS,
    FacilityType.PARQ,
    FacilityType.PARCELA,
    FacilityType.PASEO,
    FacilityType.PRADERA,
    FacilityType.PORTAL,
    FacilityType.PORTALES,
    FacilityType.QUINTAS,
    FacilityType.RES,
    FacilityType.REPTO,
    FacilityType.RIBERAS,
    FacilityType.SECT,
    FacilityType.TERR,
    FacilityType.VALLE,
    FacilityType.VILLA,
    FacilityType.VISTA,
]);
export function isUrbanization(val) {
    return urbanizations.has(toFacilityType(String(val)));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmFjaWxpdHlUeXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2RhdGEvRmFjaWxpdHlUeXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUMsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFeEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUUxRCxNQUFNLG1CQUFtQixHQUFtQyxFQUFFLENBQUM7QUFFL0QsS0FBSyxNQUFNLElBQUksSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQW1CLEVBQUUsQ0FBQztJQUN2RSxtQkFBbUIsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDNUMsS0FBSyxNQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDN0MsbUJBQW1CLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQzdDLENBQUM7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxHQUFXO0lBQ3hDLE9BQU8sbUJBQW1CLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUVELE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxJQUF5QjtJQUMxRCxJQUFJLElBQUksS0FBSyxJQUFJLEVBQUUsQ0FBQztRQUNsQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFDRCxJQUFJLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLE9BQU8sU0FBUyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0UsQ0FBQztBQUVELE1BQU0sVUFBVSxjQUFjLENBQUMsR0FBVztJQUN4QyxPQUFPLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUMvQyxDQUFDO0FBRUQsTUFBTSxhQUFhLEdBQUcsSUFBSSxHQUFHLENBQUM7SUFDNUIsWUFBWSxDQUFDLEdBQUc7SUFDaEIsWUFBWSxDQUFDLEdBQUc7SUFDaEIsWUFBWSxDQUFDLElBQUk7SUFDakIsWUFBWSxDQUFDLEdBQUc7SUFDaEIsWUFBWSxDQUFDLEdBQUc7SUFDaEIsWUFBWSxDQUFDLEdBQUc7SUFDaEIsWUFBWSxDQUFDLEVBQUU7SUFDZixZQUFZLENBQUMsTUFBTTtJQUNuQixZQUFZLENBQUMsS0FBSztJQUNsQixZQUFZLENBQUMsTUFBTTtJQUNuQixZQUFZLENBQUMsTUFBTTtJQUNuQixZQUFZLENBQUMsT0FBTztJQUNwQixZQUFZLENBQUMsU0FBUztJQUN0QixZQUFZLENBQUMsR0FBRztJQUNoQixZQUFZLENBQUMsR0FBRztJQUNoQixZQUFZLENBQUMsUUFBUTtJQUNyQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsR0FBRztJQUNoQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsT0FBTztJQUNwQixZQUFZLENBQUMsS0FBSztJQUNsQixZQUFZLENBQUMsT0FBTztJQUNwQixZQUFZLENBQUMsTUFBTTtJQUNuQixZQUFZLENBQUMsUUFBUTtJQUNyQixZQUFZLENBQUMsT0FBTztJQUNwQixZQUFZLENBQUMsR0FBRztJQUNoQixZQUFZLENBQUMsS0FBSztJQUNsQixZQUFZLENBQUMsT0FBTztJQUNwQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsS0FBSztJQUNsQixZQUFZLENBQUMsS0FBSztJQUNsQixZQUFZLENBQUMsS0FBSztDQUNuQixDQUFDLENBQUM7QUFFSCxNQUFNLFVBQVUsY0FBYyxDQUFDLEdBQVk7SUFDekMsT0FBTyxhQUFhLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhbGlhc2VzLEZhY2lsaXR5VHlwZSB9IGZyb20gJ0B1bml2ZXJzZS9tb2RlbHMnO1xuXG5pbXBvcnQgeyBub3JtYWxpemUsIHRpdGxlQ2FzZSB9IGZyb20gJy4uL3BhcnNlci91dGlscy5qcyc7XG5cbmNvbnN0IEZhY2lsaXR5VHlwZU1hcHBpbmc6IHtba2V5OiBzdHJpbmddOiBGYWNpbGl0eVR5cGUgfSA9IHt9O1xuXG5mb3IgKGNvbnN0IGFiYnIgb2YgT2JqZWN0LmtleXMoYWxpYXNlcy5GYWNpbGl0eVR5cGUpIGFzIEZhY2lsaXR5VHlwZVtdKSB7XG4gIEZhY2lsaXR5VHlwZU1hcHBpbmdbbm9ybWFsaXplKGFiYnIpXSA9IGFiYnI7XG4gIGZvciAoY29uc3QgdmFsIG9mIGFsaWFzZXMuRmFjaWxpdHlUeXBlW2FiYnJdKSB7XG4gICAgRmFjaWxpdHlUeXBlTWFwcGluZ1tub3JtYWxpemUodmFsKV0gPSBhYmJyO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b0ZhY2lsaXR5VHlwZSh2YWw6IHN0cmluZyk6IEZhY2lsaXR5VHlwZSB7XG4gIHJldHVybiBGYWNpbGl0eVR5cGVNYXBwaW5nW25vcm1hbGl6ZSh2YWwpXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZhY2lsaXR5VHlwZVN0cmluZyh0eXBlOiBGYWNpbGl0eVR5cGUgfCBudWxsKTogc3RyaW5nIHwgbnVsbCB7XG4gIGlmICh0eXBlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdHlwZSA9IHRvRmFjaWxpdHlUeXBlKHR5cGUpO1xuICByZXR1cm4gdGl0bGVDYXNlKGFsaWFzZXMuRmFjaWxpdHlUeXBlW25vcm1hbGl6ZSh0eXBlKSBhcyBGYWNpbGl0eVR5cGVdWzBdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRmFjaWxpdHlUeXBlKHZhbDogc3RyaW5nKTogdmFsIGlzIEZhY2lsaXR5VHlwZSB7XG4gIHJldHVybiAhIUZhY2lsaXR5VHlwZU1hcHBpbmdbbm9ybWFsaXplKHZhbCldO1xufVxuXG5jb25zdCB1cmJhbml6YXRpb25zID0gbmV3IFNldChbXG4gIEZhY2lsaXR5VHlwZS5VUkIsXG4gIEZhY2lsaXR5VHlwZS5FWFQsXG4gIEZhY2lsaXR5VHlwZS5NQU5TLFxuICBGYWNpbGl0eVR5cGUuRVNULFxuICBGYWNpbGl0eVR5cGUuQUxULFxuICBGYWNpbGl0eVR5cGUuQkRBLFxuICBGYWNpbGl0eVR5cGUuQk8sXG4gIEZhY2lsaXR5VHlwZS5CT1NRVUUsXG4gIEZhY2lsaXR5VHlwZS5CUklTQSxcbiAgRmFjaWxpdHlUeXBlLkNJVURBRCxcbiAgRmFjaWxpdHlUeXBlLkNPTElOQSxcbiAgRmFjaWxpdHlUeXBlLkNIQUxFVFMsXG4gIEZhY2lsaXR5VHlwZS5DT01VTklEQUQsXG4gIEZhY2lsaXR5VHlwZS5FU1QsXG4gIEZhY2lsaXR5VHlwZS5FWFQsXG4gIEZhY2lsaXR5VHlwZS5IQUNJRU5EQSxcbiAgRmFjaWxpdHlUeXBlLkpBUkQsXG4gIEZhY2lsaXR5VHlwZS5JTkQsXG4gIEZhY2lsaXR5VHlwZS5MT01BLFxuICBGYWNpbGl0eVR5cGUuTUFOUyxcbiAgRmFjaWxpdHlUeXBlLlBBUlEsXG4gIEZhY2lsaXR5VHlwZS5QQVJDRUxBLFxuICBGYWNpbGl0eVR5cGUuUEFTRU8sXG4gIEZhY2lsaXR5VHlwZS5QUkFERVJBLFxuICBGYWNpbGl0eVR5cGUuUE9SVEFMLFxuICBGYWNpbGl0eVR5cGUuUE9SVEFMRVMsXG4gIEZhY2lsaXR5VHlwZS5RVUlOVEFTLFxuICBGYWNpbGl0eVR5cGUuUkVTLFxuICBGYWNpbGl0eVR5cGUuUkVQVE8sXG4gIEZhY2lsaXR5VHlwZS5SSUJFUkFTLFxuICBGYWNpbGl0eVR5cGUuU0VDVCxcbiAgRmFjaWxpdHlUeXBlLlRFUlIsXG4gIEZhY2lsaXR5VHlwZS5WQUxMRSxcbiAgRmFjaWxpdHlUeXBlLlZJTExBLFxuICBGYWNpbGl0eVR5cGUuVklTVEEsXG5dKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzVXJiYW5pemF0aW9uKHZhbDogdW5rbm93bik6IHZhbCBpcyBGYWNpbGl0eVR5cGUge1xuICByZXR1cm4gdXJiYW5pemF0aW9ucy5oYXModG9GYWNpbGl0eVR5cGUoU3RyaW5nKHZhbCkpKTtcbn1cbiJdfQ==