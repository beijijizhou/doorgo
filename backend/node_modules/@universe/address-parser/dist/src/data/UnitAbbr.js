import { aliases } from '@universe/models';
import { normalize } from '../parser/utils.js';
export const UnitAbbrsMappings = {};
for (const abbr of Object.keys(aliases.UnitAbbr)) {
    UnitAbbrsMappings[normalize(abbr)] = abbr;
    for (const str of aliases.UnitAbbr[abbr]) {
        UnitAbbrsMappings[normalize(str)] = abbr;
    }
}
export function toUnitAbbr(abbr) {
    return UnitAbbrsMappings[normalize(abbr)];
}
export function unitAbbrString(abbr) {
    if (abbr === null) {
        return null;
    }
    abbr = toUnitAbbr(abbr);
    return aliases.UnitAbbr[abbr][0];
}
export function isUnitAbbr(abbr) {
    return !!UnitAbbrsMappings[normalize(abbr)];
}
export function isUnitEnum(abbr) {
    return !!aliases.UnitAbbr[abbr.toUpperCase()];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVW5pdEFiYnIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZGF0YS9Vbml0QWJici50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFXLE1BQU0sa0JBQWtCLENBQUM7QUFFcEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRS9DLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFnQyxFQUFFLENBQUM7QUFDakUsS0FBSyxNQUFNLElBQUksSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQWUsRUFBRSxDQUFDO0lBQy9ELGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUMxQyxLQUFLLE1BQU0sR0FBRyxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUN6QyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDM0MsQ0FBQztBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsVUFBVSxDQUFDLElBQVk7SUFDckMsT0FBTyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUM1QyxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxJQUFxQjtJQUNsRCxJQUFJLElBQUksS0FBSyxJQUFJLEVBQUUsQ0FBQztRQUFDLE9BQU8sSUFBSSxDQUFDO0lBQUMsQ0FBQztJQUNuQyxJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hCLE9BQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuQyxDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxJQUFZO0lBQ3JDLE9BQU8sQ0FBQyxDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQzlDLENBQUM7QUFFRCxNQUFNLFVBQVUsVUFBVSxDQUFDLElBQVk7SUFDckMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFjLENBQUMsQ0FBQztBQUM1RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWxpYXNlcyxVbml0QWJiciB9IGZyb20gJ0B1bml2ZXJzZS9tb2RlbHMnO1xuXG5pbXBvcnQgeyBub3JtYWxpemUgfSBmcm9tICcuLi9wYXJzZXIvdXRpbHMuanMnO1xuXG5leHBvcnQgY29uc3QgVW5pdEFiYnJzTWFwcGluZ3M6IHsgW2tleTogc3RyaW5nXTogVW5pdEFiYnIgfSA9IHt9O1xuZm9yIChjb25zdCBhYmJyIG9mIE9iamVjdC5rZXlzKGFsaWFzZXMuVW5pdEFiYnIpIGFzIFVuaXRBYmJyW10pIHtcbiAgVW5pdEFiYnJzTWFwcGluZ3Nbbm9ybWFsaXplKGFiYnIpXSA9IGFiYnI7XG4gIGZvciAoY29uc3Qgc3RyIG9mIGFsaWFzZXMuVW5pdEFiYnJbYWJicl0pIHtcbiAgICBVbml0QWJicnNNYXBwaW5nc1tub3JtYWxpemUoc3RyKV0gPSBhYmJyO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b1VuaXRBYmJyKGFiYnI6IHN0cmluZyk6IFVuaXRBYmJyIHtcbiAgcmV0dXJuIFVuaXRBYmJyc01hcHBpbmdzW25vcm1hbGl6ZShhYmJyKV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1bml0QWJiclN0cmluZyhhYmJyOiBVbml0QWJiciB8IG51bGwpOiBzdHJpbmcgfCBudWxsIHtcbiAgaWYgKGFiYnIgPT09IG51bGwpIHsgcmV0dXJuIG51bGw7IH1cbiAgYWJiciA9IHRvVW5pdEFiYnIoYWJicik7XG4gIHJldHVybiBhbGlhc2VzLlVuaXRBYmJyW2FiYnJdWzBdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNVbml0QWJicihhYmJyOiBzdHJpbmcpOiBhYmJyIGlzIFVuaXRBYmJyIHtcbiAgcmV0dXJuICEhVW5pdEFiYnJzTWFwcGluZ3Nbbm9ybWFsaXplKGFiYnIpXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVW5pdEVudW0oYWJicjogc3RyaW5nKTogYWJiciBpcyBVbml0QWJiciB7XG4gIHJldHVybiAhIWFsaWFzZXMuVW5pdEFiYnJbYWJici50b1VwcGVyQ2FzZSgpIGFzIFVuaXRBYmJyXTtcbn1cbiJdfQ==