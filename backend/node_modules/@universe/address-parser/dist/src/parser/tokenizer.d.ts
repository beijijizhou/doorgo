export interface Token {
    prev: Head | Token;
    next: Token | null;
    value: string;
    separator: '-' | '.' | '#' | '&' | ',' | '/' | null;
    alphas: number;
    decimals: number;
    isEOL: boolean;
}
export interface Head {
    isHead: true;
    next: Token | null;
    separator: '';
    isEOL: false;
}
export declare function isHead(token: unknown): token is Head;
export declare function insertTokenAfter(prev: Token, value: string): Token;
export declare function insertTokenBefore(next: Token, value: string): Token;
export declare function isNumberOrCode(pointer: Token | string | null): boolean;
export declare function tokenize(addr: string): Head;
export declare function isHyphenatedCode(pointer: Token | Head): boolean;
export declare function isNewlineSep(pointer: Token | Head | null): boolean;
export declare function newlineCount(pointer: Token | Head | null): number;
export declare function findNextNewLine(pointer: Token | null): Token | null;
export declare function hasLaterStreetType(pointer: Token | null, lineOnly?: boolean): boolean;
export declare function hasStateUnit(pointer: Token | null, lineOnly?: boolean): boolean;
export declare function newLineCount(pointer: Token | null): number;
export declare function streetTypeCount(pointer: Token | null): number;
